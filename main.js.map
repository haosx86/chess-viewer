{"version":3,"sources":["webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///webpack/runtime/global","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/vue/dist/vue.runtime.esm-bundler.js","webpack:///./src/App.vue","webpack:///./src/ChessBoard.vue?fddf","webpack:///./src/ChessBoard.vue?12df","webpack:///./src/ChessBoard.vue","webpack:///./src/pieces/KingPiece.vue","webpack:///./src/figureProps.ts","webpack:///./src/pieces/KingPiece.vue?654a","webpack:///./src/pieces/KingPiece.vue?6d88","webpack:///./src/pieces/QueenPiece.vue","webpack:///./src/pieces/QueenPiece.vue?538e","webpack:///./src/pieces/QueenPiece.vue?ee36","webpack:///./src/pieces/RookPiece.vue","webpack:///./src/pieces/RookPiece.vue?c85b","webpack:///./src/pieces/RookPiece.vue?8baa","webpack:///./src/pieces/BishopPiece.vue","webpack:///./src/pieces/BishopPiece.vue?a051","webpack:///./src/pieces/BishopPiece.vue?210c","webpack:///./src/pieces/KnightPiece.vue","webpack:///./src/pieces/KnightPiece.vue?a7af","webpack:///./src/pieces/KnightPiece.vue?ba43","webpack:///./src/pieces/PawnPiece.vue","webpack:///./src/pieces/PawnPiece.vue?84df","webpack:///./src/pieces/PawnPiece.vue?eada","webpack:///./src/pieces/ChessPiece.vue?7657","webpack:///./src/pieces/ChessPiece.vue?7396","webpack:///./src/pieces/ChessPiece.vue","webpack:///./src/chessRules.ts","webpack:///./src/chessBoardTools.ts","webpack:///./src/GamePlayer.vue?447d","webpack:///./src/GamePlayer.vue?74cb","webpack:///./src/GamePlayer.vue","webpack:///./src/chessNotationParser.ts","webpack:///./src/App.vue?a69e","webpack:///./src/App.vue?9b58","webpack:///./src/main.ts"],"names":["str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","globalThis","this","Function","e","window","isGloballyWhitelisted","isSpecialBooleanAttr","normalizeStyle","value","res","item","normalized","isString","parseStringStyle","key","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","EMPTY_ARR","onRE","test","isModelListener","startsWith","assign","remove","arr","el","indexOf","splice","prototype","hasOwnProperty","call","Array","isArray","isMap","toTypeString","isSymbol","isPromise","then","catch","objectToString","toString","isIntegerKey","parseInt","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","charAt","slice","hasChanged","oldValue","fns","arg","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","effect","options","_isEffect","isEffect","raw","active","scheduler","undefined","includes","cleanup","trackStack","push","shouldTrack","pop","resetTracking","id","uid","allowRecurse","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","track","target","type","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","effectsToAdd","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","readonly","reactive","createSetter","hadKey","Number","result","method","args","l","apply","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","size","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isProxy","convert","r","Boolean","__v_isRef","rawValue","RefImpl","createRef","_rawValue","_shallow","_value","newVal","shallowUnwrapHandlers","unref","ref","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","ComputedRefImpl","getter","_setter","_dirty","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","values","throwInDev","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","bind","queueJob","job","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","index","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","a","b","getId","Infinity","emit","event","rawArgs","props","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","hasExtends","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","Comment","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","normalizeSuspenseSlot","s","children","singleRoot","child","isVNode","filterSingleRoot","isRenderingCompiledSlot","setCompiledSlotRendering","setFullProps","rawProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","default","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","String","getType","ctor","match","isSameType","expectedTypes","len","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","suspense","isMounted","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","TransitionHookValidator","BaseTransition","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","state","isLeaving","isUnmounting","leavingVNodes","useTransitionState","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","subTree","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","clone","isKeepAlive","component","ssContent","ssFallback","keepComment","keyedFragmentCount","patchFlag","__isKeepAlive","registerKeepAliveHook","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","RegExp","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","renderFnWithContext","openBlock","owner","closeBlock","_c","withCtx","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","withDirectives","directives","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","createAppContext","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","provide","defineComponent","setup","prodEffectOptions","pendingBranch","setRef","rawRef","oldRawRef","parentSuspense","__asyncLoader","exposed","oldRef","refs","doSet","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","optimized","getNextHostNode","unmount","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","treeOwnerId","__scopeId","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","propsToUpdate","dynamicProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","emptyAppContext","uid$1","accessCache","setupContext","suspenseId","pendingId","asyncDep","asyncResolved","bc","bm","m","bu","u","um","bum","da","rtg","rtc","createComponentInstance","renderer","isSSR","isStateful","InternalObjectKey","initProps","initSlots","PublicInstanceProxyHandlers","expose","createSetupContext","setupResult","resolvedResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","updateHOCHostEl","hydrateNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","leave","performLeave","moveStaticNode","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","onVnodeUnmounted","removeFragment","removeStaticNode","performRemove","end","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","displayName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","__vccOpts","klass","__isSuspense","isSuspense","__isTeleport","isTeleport","targetAnchor","staticCount","content","fallback","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","toMerge","existing","incoming","mergeProps","createTextVNode","text","flag","createCommentVNode","asBlock","slot","slotFlag","inject","treatDefaultAsFactory","arguments","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","createWatcher","parentProvides","onDeactivated","onErrorCaptured","object","toRef","callHookFromMixins","base","callHookFromExtends","selfHook","baseHook","chainedMixins","path","segments","createPathGetter","mergeOptions","to","strats","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","_rc","getterOrOptions","setter","renderList","renderItem","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","temp","innerHTML","first","firstChild","importantRE","setStyle","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","Date","now","createEvent","timeStamp","cachedNow","addEventListener","optionsModifierRE","nativeOnRE","TRANSITION","ANIMATION","Transition","propsOrChildren","h","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","DOMTransitionPropsValidators","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","cachedTransition","transitionProperty","resolveTransitionProps","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","getTransitionInfo","endEvent","ended","removeEventListener","onEnd","delays","d","toMs","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","_assign","castToNumber","domValue","activeElement","rendererOptions","prevValue","nextValue","transitionClasses","join","className","patchClass","removeAttribute","patchStyle","invokers","_vei","existingInvoker","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","createInvoker","patchEvent","tagName","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","cellSize","required","validator","isInteger","viewport","fill","idx","points","viewbox","color","figureProps","cx","cy","transform","KingPiece","QueenPiece","RookPiece","BishopPiece","KnightPiece","PawnPiece","pieceType","square","isRankCorrect","rank","isFileCorrect","file","fugureComponentName","squareCoords","x","charCodeAt","y","figureTransform","isPieceAnimated","Piece","MoveAction","createEmptyChessBoard","rowsArr","char","fromCharCode","fromEntries","initChessBoard","board","figureSet","piece","Pawn","pieceDesc","addPiece","King","Queen","Bishop","Knight","Rook","initialSquare","movePiece","Error","ChessPiece","moves","chessBoardState","chessBoardStateFlat","flat","aKey","bKey","movesDemoTimers","clearTimeout","moveIdx","log","action","capture","capturePiece","castlingQueenside","castlingKingside","data-test","piecesCodes","actionCodes","ChessBoard","GamePlayer","algNotation","cellSizeText","movesState","parseNotation","moveSource","NA","moveParts","exec","fromFile","tokenizator","replaceAll","rows","cols","mount","containerOrSelector","normalizeContainer","template"],"mappings":"mBAOA,SAAS,EAAQA,EAAKC,GAClB,MAAMC,EAAMC,OAAOC,OAAO,MACpBC,EAAOL,EAAIM,MAAM,KACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC7BL,EAAIG,EAAKE,KAAM,EAEnB,OAAON,EAAmBQ,KAASP,EAAIO,EAAIC,eAAiBD,KAASP,EAAIO,ICbrD,WACvB,GAA0B,iBAAfE,WAAyB,OAAOA,WAC3C,IACQC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,GDmBxB,MA6BMC,EAAsC,EAHf,6LAmDvBC,EAAqC,EADf,+EA6D5B,SAASC,EAAeC,GACpB,GAAI,EAAQA,GAAQ,CAChB,MAAMC,EAAM,GACZ,IAAK,IAAIb,EAAI,EAAGA,EAAIY,EAAMX,OAAQD,IAAK,CACnC,MAAMc,EAAOF,EAAMZ,GACbe,EAAaJ,EAAeK,EAASF,GAAQG,EAAiBH,GAAQA,GAC5E,GAAIC,EACA,IAAK,MAAMG,KAAOH,EACdF,EAAIK,GAAOH,EAAWG,GAIlC,OAAOL,EAEN,GAAI,EAASD,GACd,OAAOA,EAGf,MAAMO,EAAkB,gBAClBC,EAAsB,QAC5B,SAASH,EAAiBI,GACtB,MAAMC,EAAM,GAOZ,OANAD,EAAQtB,MAAMoB,GAAiBI,SAAQT,IACnC,GAAIA,EAAM,CACN,MAAMU,EAAMV,EAAKf,MAAMqB,GACvBI,EAAIvB,OAAS,IAAMqB,EAAIE,EAAI,GAAGC,QAAUD,EAAI,GAAGC,YAGhDH,EAkBX,SAASI,EAAed,GACpB,IAAIC,EAAM,GACV,GAAIG,EAASJ,GACTC,EAAMD,OAEL,GAAI,EAAQA,GACb,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAMX,OAAQD,IAC9Ba,GAAOa,EAAed,EAAMZ,IAAM,SAGrC,GAAI,EAASY,GACd,IAAK,MAAMe,KAAQf,EACXA,EAAMe,KACNd,GAAOc,EAAO,KAI1B,OAAOd,EAAIY,OAiIf,MAsCM,EAEA,GACAG,EAA0E,GAC1E,EAAO,OAIP,EAAK,KAAM,EACXC,EAAO,YACP,EAAQX,GAAQW,EAAKC,KAAKZ,GAC1Ba,EAAmBb,GAAQA,EAAIc,WAAW,aAC1C,EAASpC,OAAOqC,OAChBC,EAAS,CAACC,EAAKC,KACjB,MAAMpC,EAAImC,EAAIE,QAAQD,GAClBpC,GAAK,GACLmC,EAAIG,OAAOtC,EAAG,IAGhB,EAAiBJ,OAAO2C,UAAUC,eAClC,EAAS,CAACtC,EAAKgB,IAAQ,EAAeuB,KAAKvC,EAAKgB,GAChD,EAAUwB,MAAMC,QAChBC,EAAS1C,GAA8B,iBAAtB2C,EAAa3C,GAG9B,EAAcA,GAAuB,mBAARA,EAC7Bc,EAAYd,GAAuB,iBAARA,EAC3B4C,EAAY5C,GAAuB,iBAARA,EAC3B,EAAYA,GAAgB,OAARA,GAA+B,iBAARA,EAC3C6C,EAAa7C,GACR,EAASA,IAAQ,EAAWA,EAAI8C,OAAS,EAAW9C,EAAI+C,OAE7DC,EAAiBtD,OAAO2C,UAAUY,SAClCN,EAAgBjC,GAAUsC,EAAeT,KAAK7B,GAM9CwC,EAAgBlC,GAAQF,EAASE,IAC3B,QAARA,GACW,MAAXA,EAAI,IACJ,GAAKmC,SAASnC,EAAK,MAAQA,EACzB,EAA+B,EAErC,uHAIMoC,EAAuBC,IACzB,MAAMC,EAAQ5D,OAAOC,OAAO,MAC5B,OAASJ,GACO+D,EAAM/D,KACH+D,EAAM/D,GAAO8D,EAAG9D,KAGjCgE,EAAa,SAIbC,EAAWJ,GAAqB7D,GAC3BA,EAAIkE,QAAQF,GAAY,CAACG,EAAGC,IAAOA,EAAIA,EAAEC,cAAgB,OAE9DC,EAAc,aAId,EAAYT,GAAqB7D,GAAQA,EAAIkE,QAAQI,EAAa,OAAO5D,gBAIzE,EAAamD,GAAqB7D,GAAQA,EAAIuE,OAAO,GAAGF,cAAgBrE,EAAIwE,MAAM,KAIlF,EAAeX,GAAqB7D,GAASA,EAAM,KAAK,EAAWA,KAAS,KAE5EyE,EAAa,CAACtD,EAAOuD,IAAavD,IAAUuD,IAAavD,GAAUA,GAASuD,GAAaA,GACzF,EAAiB,CAACC,EAAKC,KACzB,IAAK,IAAIrE,EAAI,EAAGA,EAAIoE,EAAInE,OAAQD,IAC5BoE,EAAIpE,GAAGqE,IAGT,EAAM,CAACC,EAAKpD,EAAKN,KACnBhB,OAAO2E,eAAeD,EAAKpD,EAAK,CAC5BsD,cAAc,EACdC,YAAY,EACZ7D,WAGF8D,EAAYxE,IACd,MAAMyE,EAAIC,WAAW1E,GACrB,OAAO2E,MAAMF,GAAKzE,EAAMyE,GE5dtBG,EAAY,IAAIC,QAChBC,EAAc,GACpB,IAAIC,EACJ,MAAMC,EAAcC,OAA6D,IAC3EC,EAAsBD,OAAqE,IAIjG,SAASE,EAAO9B,EAAI+B,EAAU,IAH9B,SAAkB/B,GACd,OAAOA,IAAuB,IAAjBA,EAAGgC,WAGZC,CAASjC,KACTA,EAAKA,EAAGkC,KAEZ,MAAMJ,EAgBV,SAA8B9B,EAAI+B,GAC9B,MAAMD,EAAS,WACX,IAAKA,EAAOK,OACR,OAAOJ,EAAQK,eAAYC,EAAYrC,IAE3C,IAAKyB,EAAYa,SAASR,GAAS,CAC/BS,EAAQT,GACR,IAII,OAkCZU,EAAWC,KAAKC,GAChBA,GAAc,EArCFjB,EAAYgB,KAAKX,GACjBJ,EAAeI,EACR9B,IAEX,QACIyB,EAAYkB,MACZC,IACAlB,EAAeD,EAAYA,EAAY/E,OAAS,MAW5D,OAPAoF,EAAOe,GAAKC,IACZhB,EAAOiB,eAAiBhB,EAAQgB,aAChCjB,EAAOE,WAAY,EACnBF,EAAOK,QAAS,EAChBL,EAAOI,IAAMlC,EACb8B,EAAOkB,KAAO,GACdlB,EAAOC,QAAUA,EACVD,EA3CQmB,CAAqBjD,EAAI+B,GAIxC,OAHKA,EAAQmB,MACTpB,IAEGA,EAEX,SAASqB,EAAKrB,GACNA,EAAOK,SACPI,EAAQT,GACJA,EAAOC,QAAQqB,QACftB,EAAOC,QAAQqB,SAEnBtB,EAAOK,QAAS,GAGxB,IAAIW,EAAM,EA8BV,SAASP,EAAQT,GACb,MAAM,KAAEkB,GAASlB,EACjB,GAAIkB,EAAKtG,OAAQ,CACb,IAAK,IAAID,EAAI,EAAGA,EAAIuG,EAAKtG,OAAQD,IAC7BuG,EAAKvG,GAAG4G,OAAOvB,GAEnBkB,EAAKtG,OAAS,GAGtB,IAAIgG,GAAc,EAClB,MAAMF,EAAa,GACnB,SAASc,IACLd,EAAWC,KAAKC,GAChBA,GAAc,EAMlB,SAASE,IACL,MAAMW,EAAOf,EAAWG,MACxBD,OAAuBL,IAATkB,GAA4BA,EAE9C,SAASC,GAAMC,EAAQC,EAAM/F,GACzB,IAAK+E,QAAgCL,IAAjBX,EAChB,OAEJ,IAAIiC,EAAUpC,EAAUqC,IAAIH,GACvBE,GACDpC,EAAUsC,IAAIJ,EAASE,EAAU,IAAIG,KAEzC,IAAIC,EAAMJ,EAAQC,IAAIjG,GACjBoG,GACDJ,EAAQE,IAAIlG,EAAMoG,EAAM,IAAIC,KAE3BD,EAAIE,IAAIvC,KACTqC,EAAIG,IAAIxC,GACRA,EAAasB,KAAKP,KAAKsB,IAW/B,SAASI,GAAQV,EAAQC,EAAM/F,EAAKyG,EAAUxD,EAAUyD,GACpD,MAAMV,EAAUpC,EAAUqC,IAAIH,GAC9B,IAAKE,EAED,OAEJ,MAAMW,EAAU,IAAIN,IACdE,EAAOK,IACLA,GACAA,EAAavG,SAAQ8D,KACbA,IAAWJ,GAAgBI,EAAOiB,eAClCuB,EAAQJ,IAAIpC,OAK5B,GAAa,UAAT4B,EAGAC,EAAQ3F,QAAQkG,QAEf,GAAY,WAARvG,GAAoB,EAAQ8F,GACjCE,EAAQ3F,SAAQ,CAAC+F,EAAKpG,MACN,WAARA,GAAoBA,GAAOyG,IAC3BF,EAAIH,WAUZ,YAJY,IAARpG,GACAuG,EAAIP,EAAQC,IAAIjG,IAGZ+F,GACJ,IAAK,MACI,EAAQD,GAMJ5D,EAAalC,IAElBuG,EAAIP,EAAQC,IAAI,YAPhBM,EAAIP,EAAQC,IAAIjC,IACZtC,EAAMoE,IACNS,EAAIP,EAAQC,IAAI/B,KAOxB,MACJ,IAAK,SACI,EAAQ4B,KACTS,EAAIP,EAAQC,IAAIjC,IACZtC,EAAMoE,IACNS,EAAIP,EAAQC,IAAI/B,KAGxB,MACJ,IAAK,MACGxC,EAAMoE,IACNS,EAAIP,EAAQC,IAAIjC,IAwBhC2C,EAAQtG,SAnBK8D,IAYLA,EAAOC,QAAQK,UACfN,EAAOC,QAAQK,UAAUN,GAGzBA,OAMZ,MAAM0C,GAAiB,IAAIR,IAAI3H,OAAOoI,oBAAoB7C,QACrDxF,KAAIuB,GAAOiE,OAAOjE,KAClB+G,OAAOnF,IACNqE,GAAoBe,KACpBC,GAA2BD,IAAa,GAAO,GAC/CE,GAA4BF,IAAa,GACzCG,GAAmCH,IAAa,GAAM,GACtDI,GAAwB,GA4B9B,SAASJ,GAAaK,GAAa,EAAOC,GAAU,GAChD,OAAO,SAAaxB,EAAQ9F,EAAKuH,GAC7B,GAAY,mBAARvH,EACA,OAAQqH,EAEP,GAAY,mBAARrH,EACL,OAAOqH,EAEN,GAAY,YAARrH,GACLuH,KAAcF,EAAaG,GAAcC,IAAaxB,IAAIH,GAC1D,OAAOA,EAEX,MAAM4B,EAAgB,EAAQ5B,GAC9B,IAAKuB,GAAcK,GAAiB,EAAON,GAAuBpH,GAC9D,OAAO2H,QAAQ1B,IAAImB,GAAuBpH,EAAKuH,GAEnD,MAAM5H,EAAMgI,QAAQ1B,IAAIH,EAAQ9F,EAAKuH,GACrC,OAAI3F,EAAS5B,GACP6G,GAAeP,IAAItG,GACX,cAARA,GAA+B,cAARA,GAClBL,GAEN0H,GACDxB,GAAMC,EAAQ,EAAiB9F,GAE/BsH,EACO3H,EAEP,GAAMA,GAEgB+H,GAAkBxF,EAAalC,GACnBL,EAAZA,EAAID,MAE1B,EAASC,GAIF0H,EAAaO,GAASjI,GAAOkI,GAASlI,GAE1CA,IAKf,SAASmI,GAAaR,GAAU,GAC5B,OAAO,SAAaxB,EAAQ9F,EAAKN,EAAO6H,GACpC,MAAMtE,EAAW6C,EAAO9F,GACxB,IAAKsH,IACD5H,EAAQ,GAAMA,IACT,EAAQoG,IAAW,GAAM7C,KAAc,GAAMvD,IAE9C,OADAuD,EAASvD,MAAQA,GACV,EAGf,MAAMqI,EAAS,EAAQjC,IAAW5D,EAAalC,GACzCgI,OAAOhI,GAAO8F,EAAO/G,OACrB,EAAO+G,EAAQ9F,GACfiI,EAASN,QAAQzB,IAAIJ,EAAQ9F,EAAKN,EAAO6H,GAU/C,OARIzB,IAAW,GAAMyB,KACZQ,EAGI/E,EAAWtD,EAAOuD,IACvBuD,GAAQV,EAAQ,MAAiB9F,EAAKN,GAHtC8G,GAAQV,EAAQ,MAAiB9F,EAAKN,IAMvCuI,GA9Ff,CAAC,WAAY,UAAW,eAAe5H,SAAQL,IAC3C,MAAMkI,EAAS1G,MAAMH,UAAUrB,GAC/BoH,GAAsBpH,GAAO,YAAamI,GACtC,MAAMlH,EAAM,GAAM9B,MAClB,IAAK,IAAIL,EAAI,EAAGsJ,EAAIjJ,KAAKJ,OAAQD,EAAIsJ,EAAGtJ,IACpC+G,GAAM5E,EAAK,EAAiBnC,EAAI,IAGpC,MAAMa,EAAMuI,EAAOG,MAAMpH,EAAKkH,GAC9B,OAAa,IAATxI,IAAsB,IAARA,EAEPuI,EAAOG,MAAMpH,EAAKkH,EAAK1J,IAAI,KAG3BkB,MAInB,CAAC,OAAQ,MAAO,QAAS,UAAW,UAAUU,SAAQL,IAClD,MAAMkI,EAAS1G,MAAMH,UAAUrB,GAC/BoH,GAAsBpH,GAAO,YAAamI,GACtCxC,IACA,MAAMhG,EAAMuI,EAAOG,MAAMlJ,KAAMgJ,GAE/B,OADAlD,IACOtF,MA6Ff,MAAM2I,GAAkB,CACpBrC,OACAC,IAlDsB4B,KAmDtBS,eAvBJ,SAAwBzC,EAAQ9F,GAC5B,MAAM+H,EAAS,EAAOjC,EAAQ9F,GAExBiI,GADWnC,EAAO9F,GACT2H,QAAQY,eAAezC,EAAQ9F,IAI9C,OAHIiI,GAAUF,GACVvB,GAAQV,EAAQ,SAAuB9F,OAAK0E,GAEzCuD,GAiBP3B,IAfJ,SAAaR,EAAQ9F,GACjB,MAAMiI,EAASN,QAAQrB,IAAIR,EAAQ9F,GAInC,OAHK4B,EAAS5B,IAAS6G,GAAeP,IAAItG,IACtC6F,GAAMC,EAAQ,EAAiB9F,GAE5BiI,GAWPO,QATJ,SAAiB1C,GAEb,OADAD,GAAMC,EAAQ,EAAyB,EAAQA,GAAU,SAAW9B,GAC7D2D,QAAQa,QAAQ1C,KASrB2C,GAAmB,CACrBxC,IAAKiB,GACLhB,IAAG,CAACJ,EAAQ9F,KAID,EAEXuI,eAAc,CAACzC,EAAQ9F,KAIZ,GAGT0I,GAA0B,EAAO,GAAIJ,GAAiB,CACxDrC,IAAKgB,GACLf,IAvE6B4B,IAAa,KAgFxCa,IAJ0B,EAAO,GAAIF,GAAkB,CACzDxC,IAAKkB,KAGWzH,GAAU,EAASA,GAASmI,GAASnI,GAASA,GAC5DkJ,GAAclJ,GAAU,EAASA,GAASkI,GAASlI,GAASA,EAC5DmJ,GAAanJ,GAAUA,EACvBoJ,GAAYC,GAAMpB,QAAQqB,eAAeD,GAC/C,SAASE,GAAMnD,EAAQ9F,EAAKqH,GAAa,EAAO6B,GAAY,GAIxD,MAAMC,EAAY,GADlBrD,EAASA,EAA0B,SAE7BsD,EAAS,GAAMpJ,GACjBA,IAAQoJ,IACP/B,GAAcxB,GAAMsD,EAAW,EAAiBnJ,IAEpDqH,GAAcxB,GAAMsD,EAAW,EAAiBC,GACjD,MAAM,IAAE9C,GAAQwC,GAASK,GACnBE,EAAOhC,EAAauB,GAAaM,EAAYL,GAAYF,GAC/D,OAAIrC,EAAI/E,KAAK4H,EAAWnJ,GACbqJ,EAAKvD,EAAOG,IAAIjG,IAElBsG,EAAI/E,KAAK4H,EAAWC,GAClBC,EAAKvD,EAAOG,IAAImD,SADtB,EAIT,SAASE,GAAMtJ,EAAKqH,GAAa,GAC7B,MAAMvB,EAAS3G,KAAwB,QACjCgK,EAAY,GAAMrD,GAClBsD,EAAS,GAAMpJ,GAKrB,OAJIA,IAAQoJ,IACP/B,GAAcxB,GAAMsD,EAAW,EAAiBnJ,IAEpDqH,GAAcxB,GAAMsD,EAAW,EAAiBC,GAC1CpJ,IAAQoJ,EACTtD,EAAOQ,IAAItG,GACX8F,EAAOQ,IAAItG,IAAQ8F,EAAOQ,IAAI8C,GAExC,SAASG,GAAKzD,EAAQuB,GAAa,GAG/B,OAFAvB,EAASA,EAA0B,SAClCuB,GAAcxB,GAAM,GAAMC,GAAS,EAAyB9B,GACtD2D,QAAQ1B,IAAIH,EAAQ,OAAQA,GAEvC,SAASS,GAAI7G,GACTA,EAAQ,GAAMA,GACd,MAAMoG,EAAS,GAAM3G,MAEf4I,EADQe,GAAShD,GACFQ,IAAI/E,KAAKuE,EAAQpG,GAKtC,OAJAoG,EAAOS,IAAI7G,GACNqI,GACDvB,GAAQV,EAAQ,MAAiBpG,EAAOA,GAErCP,KAEX,SAASqK,GAAMxJ,EAAKN,GAChBA,EAAQ,GAAMA,GACd,MAAMoG,EAAS,GAAM3G,OACf,IAAEmH,EAAG,IAAEL,GAAQ6C,GAAShD,GAC9B,IAAIiC,EAASzB,EAAI/E,KAAKuE,EAAQ9F,GACzB+H,IACD/H,EAAM,GAAMA,GACZ+H,EAASzB,EAAI/E,KAAKuE,EAAQ9F,IAK9B,MAAMiD,EAAWgD,EAAI1E,KAAKuE,EAAQ9F,GAQlC,OAPA8F,EAAOI,IAAIlG,EAAKN,GACXqI,EAGI/E,EAAWtD,EAAOuD,IACvBuD,GAAQV,EAAQ,MAAiB9F,EAAKN,GAHtC8G,GAAQV,EAAQ,MAAiB9F,EAAKN,GAKnCP,KAEX,SAASsK,GAAYzJ,GACjB,MAAM8F,EAAS,GAAM3G,OACf,IAAEmH,EAAG,IAAEL,GAAQ6C,GAAShD,GAC9B,IAAIiC,EAASzB,EAAI/E,KAAKuE,EAAQ9F,GACzB+H,IACD/H,EAAM,GAAMA,GACZ+H,EAASzB,EAAI/E,KAAKuE,EAAQ9F,IAKbiG,GAAMA,EAAI1E,KAAKuE,EAAQ9F,GAAxC,MAEMiI,EAASnC,EAAOJ,OAAO1F,GAI7B,OAHI+H,GACAvB,GAAQV,EAAQ,SAAuB9F,OAAK0E,GAEzCuD,EAEX,SAASyB,KACL,MAAM5D,EAAS,GAAM3G,MACfwK,EAA2B,IAAhB7D,EAAOyD,KAOlBtB,EAASnC,EAAO4D,QAItB,OAHIC,GACAnD,GAAQV,EAAQ,aAAqBpB,OAAWA,GAE7CuD,EAEX,SAAS2B,GAAcvC,EAAY6B,GAC/B,OAAO,SAAiBW,EAAUC,GAC9B,MAAMC,EAAW5K,KACX2G,EAASiE,EAA4B,QACrCZ,EAAY,GAAMrD,GAClBuD,EAAOhC,EAAauB,GAAaM,EAAYL,GAAYF,GAE/D,OADCtB,GAAcxB,GAAMsD,EAAW,EAAyBnF,GAClD8B,EAAOzF,SAAQ,CAACX,EAAOM,IAInB6J,EAAStI,KAAKuI,EAAST,EAAK3J,GAAQ2J,EAAKrJ,GAAM+J,MAIlE,SAASC,GAAqB9B,EAAQb,EAAY6B,GAC9C,OAAO,YAAaf,GAChB,MAAMrC,EAAS3G,KAAwB,QACjCgK,EAAY,GAAMrD,GAClBmE,EAAcvI,EAAMyH,GACpBe,EAAoB,YAAXhC,GAAyBA,IAAWjE,OAAOkG,UAAYF,EAChEG,EAAuB,SAAXlC,GAAqB+B,EACjCI,EAAgBvE,EAAOoC,MAAWC,GAClCkB,EAAOhC,EAAauB,GAAaM,EAAYL,GAAYF,GAK/D,OAJCtB,GACGxB,GAAMsD,EAAW,EAAyBiB,EAAYlG,EAAsBF,GAGzE,CAEH,OACI,MAAM,MAAEtE,EAAK,KAAE4K,GAASD,EAAcE,OACtC,OAAOD,EACD,CAAE5K,QAAO4K,QACT,CACE5K,MAAOwK,EAAS,CAACb,EAAK3J,EAAM,IAAK2J,EAAK3J,EAAM,KAAO2J,EAAK3J,GACxD4K,SAIZ,CAACrG,OAAOkG,YACJ,OAAOhL,QAKvB,SAASqL,GAAqBzE,GAC1B,OAAO,YAAaoC,GAKhB,MAAgB,WAATpC,GAAyC5G,MAGxD,MAAMsL,GAA0B,CAC5B,IAAIzK,GACA,OAAOiJ,GAAM9J,KAAMa,IAEvB,WACI,OAAOuJ,GAAKpK,OAEhBmH,IAAKgD,GACL/C,OACAL,IAAKsD,GACL9D,OAAQ+D,GACRC,SACArJ,QAASuJ,IAAc,GAAO,IAE5Bc,GAA0B,CAC5B,IAAI1K,GACA,OAAOiJ,GAAM9J,KAAMa,GAAK,GAAO,IAEnC,WACI,OAAOuJ,GAAKpK,OAEhBmH,IAAKgD,GACL/C,OACAL,IAAKsD,GACL9D,OAAQ+D,GACRC,SACArJ,QAASuJ,IAAc,GAAO,IAE5Be,GAA2B,CAC7B,IAAI3K,GACA,OAAOiJ,GAAM9J,KAAMa,GAAK,IAE5B,WACI,OAAOuJ,GAAKpK,MAAM,IAEtB,IAAIa,GACA,OAAOsJ,GAAM/H,KAAKpC,KAAMa,GAAK,IAEjCuG,IAAKiE,GAAqB,OAC1BtE,IAAKsE,GAAqB,OAC1B9E,OAAQ8E,GAAqB,UAC7Bd,MAAOc,GAAqB,SAC5BnK,QAASuJ,IAAc,GAAM,IAQjC,SAASgB,GAA4BvD,EAAYC,GAC7C,MAAMuD,EAAmBvD,EACnBoD,GACArD,EACIsD,GACAF,GACV,MAAO,CAAC3E,EAAQ9F,EAAKuH,IACL,mBAARvH,GACQqH,EAEK,mBAARrH,EACEqH,EAEM,YAARrH,EACE8F,EAEJ6B,QAAQ1B,IAAI,EAAO4E,EAAkB7K,IAAQA,KAAO8F,EACrD+E,EACA/E,EAAQ9F,EAAKuH,GAxBH,CAAC,OAAQ,SAAU,UAAWtD,OAAOkG,UAC7C9J,SAAQ6H,IACpBuC,GAAwBvC,GAAU8B,GAAqB9B,GAAQ,GAAO,GACtEyC,GAAyBzC,GAAU8B,GAAqB9B,GAAQ,GAAM,GACtEwC,GAAwBxC,GAAU8B,GAAqB9B,GAAQ,GAAO,MAuB1E,MAAM4C,GAA4B,CAC9B7E,IAAK2E,IAA4B,GAAO,IAEtCG,GAA4B,CAC9B9E,IAAK2E,IAA4B,GAAO,IAEtCI,GAA6B,CAC/B/E,IAAK2E,IAA4B,GAAM,IAcrCnD,GAAc,IAAI5D,QAClB2D,GAAc,IAAI3D,QAoBxB,SAASgE,GAAS/B,GAEd,OAAIA,GAAUA,EAAyC,eAC5CA,EAEJmF,GAAqBnF,GAAQ,EAAOwC,GAAiBwC,IAchE,SAASlD,GAAS9B,GACd,OAAOmF,GAAqBnF,GAAQ,EAAM2C,GAAkBuC,IAWhE,SAASC,GAAqBnF,EAAQuB,EAAY6D,EAAcC,GAC5D,IAAK,EAASrF,GAIV,OAAOA,EAIX,GAAIA,EAA0B,WACxBuB,IAAcvB,EAAyC,gBACzD,OAAOA,EAGX,MAAMsF,EAAW/D,EAAaG,GAAcC,GACtC4D,EAAgBD,EAASnF,IAAIH,GACnC,GAAIuF,EACA,OAAOA,EAGX,MAAMC,GAxDa5L,EAwDcoG,GAvDC,WAAMpH,OAAO6M,aAAa7L,GACtD,EAhBV,SAAuB8L,GACnB,OAAQA,GACJ,IAAK,SACL,IAAK,QACD,OAAO,EACX,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,UACD,OAAO,EACX,QACI,OAAO,GAMTC,CF1MQ,CAAC/L,GAERiC,EAAajC,GAAOqD,MAAM,GAAI,GEwMjB,CAAUrD,IAHlC,IAAuBA,EAyDnB,GAAmB,IAAf4L,EACA,OAAOxF,EAEX,MAAM4F,EAAQ,IAAIC,MAAM7F,EAAuB,IAAfwF,EAAoCH,EAAqBD,GAEzF,OADAE,EAASlF,IAAIJ,EAAQ4F,GACdA,EAEX,SAAS,GAAWhM,GAChB,OAAI,GAAWA,GACJ,GAAWA,EAAyB,YAErCA,IAASA,EAAwC,gBAE/D,SAAS,GAAWA,GAChB,SAAUA,IAASA,EAAwC,gBAE/D,SAASkM,GAAQlM,GACb,OAAO,GAAWA,IAAU,GAAWA,GAE3C,SAAS,GAAMqK,GACX,OAASA,GAAY,GAAMA,EAA4B,UAAOA,EAOlE,MAAM8B,GAAW7M,GAAQ,EAASA,GAAO6I,GAAS7I,GAAOA,EACzD,SAAS,GAAM8M,GACX,OAAOC,QAAQD,IAAqB,IAAhBA,EAAEE,WAE1B,SAAS,GAAItM,GACT,OAwBJ,SAAmBuM,EAAU3E,GAAU,GACnC,OAAI,GAAM2E,GACCA,EAEJ,IAAIC,GAAQD,EAAU3E,GA5BtB6E,CAAUzM,GAKrB,MAAMwM,GACF,YAAYE,EAAWC,GAAW,GAC9BlN,KAAKiN,UAAYA,EACjBjN,KAAKkN,SAAWA,EAChBlN,KAAK6M,WAAY,EACjB7M,KAAKmN,OAASD,EAAWD,EAAYP,GAAQO,GAEjD,YAEI,OADAvG,GAAM,GAAM1G,MAAO,EAAiB,SAC7BA,KAAKmN,OAEhB,UAAUC,GACFvJ,EAAW,GAAMuJ,GAASpN,KAAKiN,aAC/BjN,KAAKiN,UAAYG,EACjBpN,KAAKmN,OAASnN,KAAKkN,SAAWE,EAASV,GAAQU,GAC/C/F,GAAQ,GAAMrH,MAAO,MAAiB,QAASoN,KAgB3D,MAAMC,GAAwB,CAC1BvG,IAAK,CAACH,EAAQ9F,EAAKuH,KAAakF,OAHzB,GADIC,EAI2B/E,QAAQ1B,IAAIH,EAAQ9F,EAAKuH,IAH3CmF,EAAIhN,MAAQgN,EADpC,IAAeA,GAKXxG,IAAK,CAACJ,EAAQ9F,EAAKN,EAAO6H,KACtB,MAAMtE,EAAW6C,EAAO9F,GACxB,OAAI,GAAMiD,KAAc,GAAMvD,IAC1BuD,EAASvD,MAAQA,GACV,GAGAiI,QAAQzB,IAAIJ,EAAQ9F,EAAKN,EAAO6H,KAInD,SAASoF,GAAUC,GACf,OAAO,GAAWA,GACZA,EACA,IAAIjB,MAAMiB,EAAgBJ,IA6BpC,MAAMK,GACF,YAAYC,EAASC,GACjB5N,KAAK2N,QAAUA,EACf3N,KAAK4N,KAAOA,EACZ5N,KAAK6M,WAAY,EAErB,YACI,OAAO7M,KAAK2N,QAAQ3N,KAAK4N,MAE7B,UAAUR,GACNpN,KAAK2N,QAAQ3N,KAAK4N,MAAQR,GASlC,MAAMS,GACF,YAAYC,EAAQC,EAAS7F,GACzBlI,KAAK+N,QAAUA,EACf/N,KAAKgO,QAAS,EACdhO,KAAK6M,WAAY,EACjB7M,KAAKgF,OAASA,EAAO8I,EAAQ,CACzB1H,MAAM,EACNd,UAAW,KACFtF,KAAKgO,SACNhO,KAAKgO,QAAS,EACd3G,GAAQ,GAAMrH,MAAO,MAAiB,aAIlDA,KAAuC,eAAIkI,EAE/C,YAMI,OALIlI,KAAKgO,SACLhO,KAAKmN,OAASnN,KAAKgF,SACnBhF,KAAKgO,QAAS,GAElBtH,GAAM,GAAM1G,MAAO,EAAiB,SAC7BA,KAAKmN,OAEhB,UAAU7F,GACNtH,KAAK+N,QAAQzG,IC3qBrB,SAAS2G,GAAsB/K,EAAIgL,EAAUtH,EAAMoC,GAC/C,IAAIxI,EACJ,IACIA,EAAMwI,EAAO9F,KAAM8F,GAAQ9F,IAE/B,MAAOiL,GACHC,GAAYD,EAAKD,EAAUtH,GAE/B,OAAOpG,EAEX,SAAS6N,GAA2BnL,EAAIgL,EAAUtH,EAAMoC,GACpD,GAAI,EAAW9F,GAAK,CAChB,MAAM1C,EAAMyN,GAAsB/K,EAAIgL,EAAUtH,EAAMoC,GAMtD,OALIxI,GAAOkC,EAAUlC,IACjBA,EAAIoC,OAAMuL,IACNC,GAAYD,EAAKD,EAAUtH,MAG5BpG,EAEX,MAAM8N,EAAS,GACf,IAAK,IAAI3O,EAAI,EAAGA,EAAIuD,EAAGtD,OAAQD,IAC3B2O,EAAO3I,KAAK0I,GAA2BnL,EAAGvD,GAAIuO,EAAUtH,EAAMoC,IAElE,OAAOsF,EAEX,SAASF,GAAYD,EAAKD,EAAUtH,EAAM2H,GAAa,GAEnD,GADqBL,GAAWA,EAASM,MACrCN,EAAU,CACV,IAAIO,EAAMP,EAASQ,OAEnB,MAAMC,EAAkBT,EAAS3B,MAE3BqC,EAA+EhI,EACrF,KAAO6H,GAAK,CACR,MAAMI,EAAqBJ,EAAIK,GAC/B,GAAID,EACA,IAAK,IAAIlP,EAAI,EAAGA,EAAIkP,EAAmBjP,OAAQD,IAC3C,IAA+D,IAA3DkP,EAAmBlP,GAAGwO,EAAKQ,EAAiBC,GAC5C,OAIZH,EAAMA,EAAIC,OAGd,MAAMK,EAAkBb,EAASc,WAAWC,OAAOC,aACnD,GAAIH,EAEA,YADAd,GAAsBc,EAAiB,KAAM,GAA4B,CAACZ,EAAKQ,EAAiBC,KAM5G,SAAkBT,EAAKvH,EAAMuI,EAAcZ,GAAa,GAoBhDa,QAAQC,MAAMlB,GAtBlBmB,CAASnB,EAAKvH,EAAMuI,EAAcZ,GA0BtC,IAAIgB,IAAa,EACbC,IAAiB,EACrB,MAAMC,GAAQ,GACd,IAAIC,GAAa,EACjB,MAAMC,GAAqB,GAC3B,IAAIC,GAAoB,KACpBC,GAAgB,EACpB,MAAMC,GAAsB,GAC5B,IAAIC,GAAqB,KACrBC,GAAiB,EACrB,MAAMC,GAAkBC,QAAQC,UAChC,IAAIC,GAAsB,KACtBC,GAA2B,KAE/B,SAASC,GAASpN,GACd,MAAMqN,EAAIH,IAAuBH,GACjC,OAAO/M,EAAKqN,EAAE5N,KAAK3C,KAAOkD,EAAGsN,KAAKxQ,MAAQkD,GAAMqN,EAEpD,SAASE,GAASC,GAORjB,GAAM7P,QACP6P,GAAMjK,SAASkL,EAAKnB,IAAcmB,EAAIzK,aAAeyJ,GAAa,EAAIA,KACvEgB,IAAQL,KACRZ,GAAM9J,KAAK+K,GACXC,MAGR,SAASA,KACApB,IAAeC,KAChBA,IAAiB,EACjBY,GAAsBH,GAAgBtN,KAAKiO,KASnD,SAASC,GAAQC,EAAIC,EAAaC,EAAcC,GACvC,EAAQH,GAUTE,EAAarL,QAAQmL,GAThBC,GACAA,EAAYvL,SAASsL,EAAIA,EAAG7K,aAAegL,EAAQ,EAAIA,IACxDD,EAAarL,KAAKmL,GAS1BH,KAQJ,SAASO,GAAiBC,EAAMC,EAAY,MACxC,GAAIzB,GAAmB/P,OAAQ,CAO3B,IANAyQ,GAA2Be,EAC3BxB,GAAoB,IAAI,IAAI1I,IAAIyI,KAChCA,GAAmB/P,OAAS,EAIvBiQ,GAAgB,EAAGA,GAAgBD,GAAkBhQ,OAAQiQ,KAI9DD,GAAkBC,MAEtBD,GAAoB,KACpBC,GAAgB,EAChBQ,GAA2B,KAE3Ba,GAAiBC,EAAMC,IAG/B,SAASC,GAAkBF,GACvB,GAAIrB,GAAoBlQ,OAAQ,CAC5B,MAAM0R,EAAU,IAAI,IAAIpK,IAAI4I,KAG5B,GAFAA,GAAoBlQ,OAAS,EAEzBmQ,GAEA,YADAA,GAAmBpK,QAAQ2L,GAQ/B,IALAvB,GAAqBuB,EAIrBvB,GAAmBwB,MAAK,CAACC,EAAGC,IAAMC,GAAMF,GAAKE,GAAMD,KAC9CzB,GAAiB,EAAGA,GAAiBD,GAAmBnQ,OAAQoQ,KAIjED,GAAmBC,MAEvBD,GAAqB,KACrBC,GAAiB,GAGzB,MAAM0B,GAAShB,GAAkB,MAAVA,EAAI3K,GAAa4L,IAAWjB,EAAI3K,GACvD,SAAS6K,GAAUO,GACf3B,IAAiB,EACjBD,IAAa,EAIb2B,GAAiBC,GAQjB1B,GAAM8B,MAAK,CAACC,EAAGC,IAAMC,GAAMF,GAAKE,GAAMD,KACtC,IACI,IAAK/B,GAAa,EAAGA,GAAaD,GAAM7P,OAAQ8P,KAAc,CAC1D,MAAMgB,EAAMjB,GAAMC,IACdgB,GAIAzC,GAAsByC,EAAK,KAAM,KAI7C,QACIhB,GAAa,EACbD,GAAM7P,OAAS,EACfyR,KACA9B,IAAa,EACba,GAAsB,MAGlBX,GAAM7P,QAAUkQ,GAAoBlQ,SACpCgR,GAAUO,IA0LtB,SAASS,GAAK1D,EAAU2D,KAAUC,GAC9B,MAAMC,EAAQ7D,EAASM,MAAMuD,OAAS,EAqBtC,IAAI/I,EAAO8I,EACX,MAAMpQ,EAAkBmQ,EAAMlQ,WAAW,WAEnCqQ,EAAWtQ,GAAmBmQ,EAAMjO,MAAM,GAChD,GAAIoO,GAAYA,KAAYD,EAAO,CAC/B,MAAME,EAAe,GAAgB,eAAbD,EAA4B,QAAUA,cACxD,OAAEE,EAAM,KAAE9Q,GAAS2Q,EAAME,IAAiB,EAC5C7Q,EACA4H,EAAO8I,EAAQxS,KAAIkS,GAAKA,EAAEpQ,SAErB8Q,IACLlJ,EAAO8I,EAAQxS,IAAI+E,IAiB3B,IAAI8N,EAAc,EAAa9O,EAASwO,IACpCO,EAAUL,EAAMI,IAGfC,GAAW1Q,IACZyQ,EAAc,EAAa,EAAUN,IACrCO,EAAUL,EAAMI,IAEhBC,GACA/D,GAA2B+D,EAASlE,EAAU,EAAiClF,GAEnF,MAAMqJ,EAAcN,EAAMI,EAAc,QACxC,GAAIE,EAAa,CACb,GAAKnE,EAASoE,SAGT,GAAIpE,EAASoE,QAAQH,GACtB,YAHCjE,EAASoE,QAAU,IAAIH,IAAe,EAK3C9D,GAA2BgE,EAAanE,EAAU,EAAiClF,IAG3F,SAASuJ,GAAsBC,EAAMxD,EAAYyD,GAAU,GACvD,IAAKzD,EAAW0D,YAA0BnN,IAAjBiN,EAAKG,QAC1B,OAAOH,EAAKG,QAEhB,MAAMvN,EAAMoN,EAAKI,MACjB,IAAIlS,EAAa,GAEbmS,GAAa,EACjB,IAA4B,EAAWL,GAAO,CAC1C,MAAMM,EAAe1N,IACjByN,GAAa,EACb,EAAOnS,EAAY6R,GAAsBnN,EAAK4J,GAAY,MAEzDyD,GAAWzD,EAAW+D,OAAOnT,QAC9BoP,EAAW+D,OAAO7R,QAAQ4R,GAE1BN,EAAKQ,SACLF,EAAYN,EAAKQ,SAEjBR,EAAKO,QACLP,EAAKO,OAAO7R,QAAQ4R,GAG5B,OAAK1N,GAAQyN,GAGT,EAAQzN,GACRA,EAAIlE,SAAQL,GAAQH,EAAWG,GAAO,OAGtC,EAAOH,EAAY0E,GAEfoN,EAAKG,QAAUjS,GARX8R,EAAKG,QAAU,KAa/B,SAASM,GAAehO,EAASpE,GAC7B,SAAKoE,IAAY,EAAKpE,MAGtBA,EAAMA,EAAI+C,MAAM,GAAGN,QAAQ,QAAS,IAC5B,EAAO2B,EAASpE,EAAI,GAAGf,cAAgBe,EAAI+C,MAAM,KACrD,EAAOqB,EAAS,EAAUpE,KAC1B,EAAOoE,EAASpE,IArRG,IAAIqG,IAoBnB,IAAIF,IAwQhB,IAAIkM,GAA2B,KAC/B,SAASC,GAA4BjF,GACjCgF,GAA2BhF,EAW/B,SAASkF,GAAoBlF,GACzB,MAAQtH,KAAMyM,EAAS,MAAE7E,EAAK,MAAEjC,EAAK,UAAE+G,EAAS,MAAEvB,EAAOwB,cAAeA,GAAa,MAAEC,EAAK,MAAEC,EAAK,KAAE7B,EAAI,OAAE8B,EAAM,YAAEC,EAAW,KAAEC,EAAI,WAAEC,EAAU,IAAEC,GAAQ5F,EAC1J,IAAIpF,EACJoK,GAA2BhF,EAI3B,IACI,IAAI6F,EACJ,GAAsB,EAAlBvF,EAAMwF,UAAwC,CAG9C,MAAMC,EAAaX,GAAa/G,EAChCzD,EAASoL,GAAeR,EAAOtR,KAAK6R,EAAYA,EAAYN,EAAa5B,EAAO8B,EAAYD,EAAME,IAClGC,EAAmBN,MAElB,CAED,MAAMC,EAASL,EAKfvK,EAASoL,GAAeR,EAAO9T,OAAS,EAClC8T,EAAO3B,EASH,CAAE0B,QAAOD,QAAO5B,SACpB8B,EAAO3B,EAAO,OACpBgC,EAAmBV,EAAUtB,MACvB0B,EACAU,GAAyBV,GAKnC,IAAIW,EAAOtL,EAMX,IAA+B,IAA3BuK,EAAUgB,cAA0BN,EAAkB,CACtD,MAAMO,EAAO/U,OAAO+U,KAAKP,IACnB,UAAEC,GAAcI,EAClBE,EAAK1U,SACW,EAAZoU,GACY,EAAZA,KACIT,GAAgBe,EAAKC,KAAK7S,KAK1BqS,EAAmBS,GAAqBT,EAAkBR,IAE9Da,EAAOK,GAAWL,EAAML,IAsChCvF,EAAMkG,OAKNN,EAAKM,KAAON,EAAKM,KAAON,EAAKM,KAAKC,OAAOnG,EAAMkG,MAAQlG,EAAMkG,MAG7DlG,EAAMoG,aAKNR,EAAKQ,WAAapG,EAAMoG,YAMxB9L,EAASsL,EAGjB,MAAOjG,GACHC,GAAYD,EAAKD,EAAU,GAC3BpF,EAAS+L,GAAYC,IAGzB,OADA5B,GAA2B,KACpBpK,EAoDX,MAAMqL,GAA4BV,IAC9B,IAAIjT,EACJ,IAAK,MAAMK,KAAO4S,GACF,UAAR5S,GAA2B,UAARA,GAAmB,EAAKA,OAC1CL,IAAQA,EAAM,KAAKK,GAAO4S,EAAM5S,IAGzC,OAAOL,GAELgU,GAAuB,CAACf,EAAO1B,KACjC,MAAMvR,EAAM,GACZ,IAAK,MAAMK,KAAO4S,EACT/R,EAAgBb,IAAUA,EAAI+C,MAAM,KAAMmO,IAC3CvR,EAAIK,GAAO4S,EAAM5S,IAGzB,OAAOL,GAmEX,SAASuU,GAAgBC,EAAWC,EAAWC,GAC3C,MAAMC,EAAW5V,OAAO+U,KAAKW,GAC7B,GAAIE,EAASvV,SAAWL,OAAO+U,KAAKU,GAAWpV,OAC3C,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAIwV,EAASvV,OAAQD,IAAK,CACtC,MAAMkB,EAAMsU,EAASxV,GACrB,GAAIsV,EAAUpU,KAASmU,EAAUnU,KAC5BoS,GAAeiC,EAAcrU,GAC9B,OAAO,EAGf,OAAO,EAuYX,SAASuU,GAAsBC,GAW3B,OAVI,EAAWA,KACXA,EAAIA,KAEJ,EAAQA,KAKRA,EArgBR,SAA0BC,GACtB,IAAIC,EACJ,IAAK,IAAI5V,EAAI,EAAGA,EAAI2V,EAAS1V,OAAQD,IAAK,CACtC,MAAM6V,EAAQF,EAAS3V,GACvB,IAAI8V,GAAQD,GAaR,OAXA,GAAIA,EAAM5O,OAASkO,IAA8B,SAAnBU,EAAMF,SAAqB,CACrD,GAAIC,EAEA,OAGAA,EAAaC,GAQ7B,OAAOD,EA6eiBG,CAAiBL,IAMlCnB,GAAemB,GA2B1B,IAAIM,GAA0B,EAC9B,MAAMC,GAA4BtR,GAAOqR,IAA2BrR,EA8MpE,SAASuR,GAAa3H,EAAU4H,EAAU/D,EAAO0B,GAC7C,MAAOxO,EAAS8Q,GAAgB7H,EAASqF,aACzC,GAAIuC,EACA,IAAK,MAAMjV,KAAOiV,EAAU,CACxB,MAAMvV,EAAQuV,EAASjV,GAEvB,GAAI,EAAeA,GACf,SAIJ,IAAImV,EACA/Q,GAAW,EAAOA,EAAU+Q,EAAW3S,EAASxC,IAChDkR,EAAMiE,GAAYzV,EAEZ0S,GAAe/E,EAASgH,aAAcrU,KAI5C4S,EAAM5S,GAAON,GAIzB,GAAIwV,EAAc,CACd,MAAME,EAAkB,GAAMlE,GAC9B,IAAK,IAAIpS,EAAI,EAAGA,EAAIoW,EAAanW,OAAQD,IAAK,CAC1C,MAAMkB,EAAMkV,EAAapW,GACzBoS,EAAMlR,GAAOqV,GAAiBjR,EAASgR,EAAiBpV,EAAKoV,EAAgBpV,GAAMqN,KAI/F,SAASgI,GAAiBjR,EAAS8M,EAAOlR,EAAKN,EAAO2N,GAClD,MAAMiI,EAAMlR,EAAQpE,GACpB,GAAW,MAAPsV,EAAa,CACb,MAAMC,EAAa,EAAOD,EAAK,WAE/B,GAAIC,QAAwB7Q,IAAVhF,EAAqB,CACnC,MAAM8V,EAAeF,EAAIG,QACrBH,EAAIvP,OAAS3G,UAAY,EAAWoW,IACpCE,GAAmBrI,GACnB3N,EAAQ8V,EAAatE,GACrBwE,GAAmB,OAGnBhW,EAAQ8V,EAIZF,EAAI,KACC,EAAOpE,EAAOlR,IAASuV,GAGnBD,EAAI,IACE,KAAV5V,GAAgBA,IAAU,EAAUM,KACrCN,GAAQ,GAJRA,GAAQ,GAQpB,OAAOA,EAEX,SAASiW,GAAsBhE,EAAMxD,EAAYyD,GAAU,GACvD,IAAKzD,EAAW0D,OAASF,EAAKiE,QAC1B,OAAOjE,EAAKiE,QAEhB,MAAMrR,EAAMoN,EAAKT,MACXrR,EAAa,GACbqV,EAAe,GAErB,IAAIlD,GAAa,EACjB,IAA4B,EAAWL,GAAO,CAC1C,MAAMkE,EAAetR,IACjByN,GAAa,EACb,MAAOd,EAAOuC,GAAQkC,GAAsBpR,EAAK4J,GAAY,GAC7D,EAAOtO,EAAYqR,GACfuC,GACAyB,EAAapQ,QAAQ2O,KAExB7B,GAAWzD,EAAW+D,OAAOnT,QAC9BoP,EAAW+D,OAAO7R,QAAQwV,GAE1BlE,EAAKQ,SACL0D,EAAYlE,EAAKQ,SAEjBR,EAAKO,QACLP,EAAKO,OAAO7R,QAAQwV,GAG5B,IAAKtR,IAAQyN,EACT,OAAQL,EAAKiE,QAAUlV,EAE3B,GAAI,EAAQ6D,GACR,IAAK,IAAIzF,EAAI,EAAGA,EAAIyF,EAAIxF,OAAQD,IAAK,CAIjC,MAAMgX,EAAgBtT,EAAS+B,EAAIzF,IAC/BiX,GAAiBD,KACjBjW,EAAWiW,GAAiB,QAInC,GAAIvR,EAIL,IAAK,MAAMvE,KAAOuE,EAAK,CACnB,MAAMuR,EAAgBtT,EAASxC,GAC/B,GAAI+V,GAAiBD,GAAgB,CACjC,MAAMR,EAAM/Q,EAAIvE,GACVgW,EAAQnW,EAAWiW,GACrB,EAAQR,IAAQ,EAAWA,GAAO,CAAEvP,KAAMuP,GAAQA,EACtD,GAAIU,EAAM,CACN,MAAMC,EAAeC,GAAanK,QAASiK,EAAKjQ,MAC1CoQ,EAAcD,GAAaE,OAAQJ,EAAKjQ,MAC9CiQ,EAAK,GAAsBC,GAAgB,EAC3CD,EAAK,GACDG,EAAc,GAAKF,EAAeE,GAElCF,GAAgB,GAAK,EAAOD,EAAM,aAClCd,EAAapQ,KAAKgR,KAMtC,OAAQnE,EAAKiE,QAAU,CAAC/V,EAAYqV,GAExC,SAASa,GAAiB/V,GACtB,MAAe,MAAXA,EAAI,GAUZ,SAASqW,GAAQC,GACb,MAAMC,EAAQD,GAAQA,EAAKrU,WAAWsU,MAAM,sBAC5C,OAAOA,EAAQA,EAAM,GAAK,GAE9B,SAASC,GAAW7F,EAAGC,GACnB,OAAOyF,GAAQ1F,KAAO0F,GAAQzF,GAElC,SAASsF,GAAanQ,EAAM0Q,GACxB,GAAI,EAAQA,IACR,IAAK,IAAI3X,EAAI,EAAG4X,EAAMD,EAAc1X,OAAQD,EAAI4X,EAAK5X,IACjD,GAAI0X,GAAWC,EAAc3X,GAAIiH,GAC7B,OAAOjH,OAId,GAAI,EAAW2X,GAChB,OAAOD,GAAWC,EAAe1Q,GAAQ,GAAK,EAElD,OAAQ,EAkIZ,SAAS4Q,GAAW5Q,EAAM6Q,EAAM9Q,EAAS+Q,GAAiBC,GAAU,GAChE,GAAIhR,EAAQ,CACR,MAAMiR,EAAQjR,EAAOC,KAAUD,EAAOC,GAAQ,IAIxCiR,EAAcJ,EAAKK,QACpBL,EAAKK,MAAQ,IAAI9O,KACd,GAAIrC,EAAOoR,YACP,OAIJvR,IAIA+P,GAAmB5P,GACnB,MAAMnG,EAAM6N,GAA2BoJ,EAAM9Q,EAAQC,EAAMoC,GAG3D,OAFAuN,GAAmB,MACnBzQ,IACOtF,IAQf,OANImX,EACAC,EAAMI,QAAQH,GAGdD,EAAMjS,KAAKkS,GAERA,GAYf,MAAMI,GAAcC,GAAc,CAACT,EAAM9Q,EAAS+Q,MAEjDS,IAAyBX,GAAWU,EAAWT,EAAM9Q,GAChDyR,GAAgBH,GAAW,MAC3B,GAAYA,GAAW,KACvBI,GAAiBJ,GAAW,MAC5B,GAAYA,GAAW,KACvBK,GAAkBL,GAAW,OAC7BM,GAAcN,GAAW,MACzBO,GAAoBP,GAAW,OAC/BQ,GAAkBR,GAAW,OAU7BS,GAAwB,GAE9B,SAASC,GAAMC,EAAQ9H,EAAI7L,GAMvB,OAAO4T,GAAQD,EAAQ9H,EAAI7L,GAE/B,SAAS4T,GAAQD,EAAQ9H,GAAI,UAAEgI,EAAS,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,UAAEC,GAAc,EAAWhL,EAAWwJ,IAehG,IAAI5J,EAoDArI,EAnDA0T,GAAe,EA+CnB,GA9CI,GAAMP,IACN9K,EAAS,IAAM8K,EAAOrY,MACtB4Y,IAAiBP,EAAO1L,UAEnB,GAAW0L,IAChB9K,EAAS,IAAM8K,EACfG,GAAO,GAGPjL,EADK,EAAQ8K,GACJ,IAAMA,EAAOtZ,KAAI+V,GAClB,GAAMA,GACCA,EAAE9U,MAEJ,GAAW8U,GACT+D,GAAS/D,GAEX,EAAWA,GACTpH,GAAsBoH,EAAGnH,EAAU,QADzC,IAQJ,EAAW0K,GACZ9H,EAES,IAAM7C,GAAsB2K,EAAQ1K,EAAU,GAI9C,KACL,IAAIA,IAAYA,EAAS6J,YAMzB,OAHItS,GACAA,IAEGwI,GAAsB2K,EAAQ1K,EAAU,EAAwB,CAACmL,KAKvE,EAGTvI,GAAMiI,EAAM,CACZ,MAAMO,EAAaxL,EACnBA,EAAS,IAAMsL,GAASE,KAG5B,MAAMD,EAAgBnW,IAClBuC,EAAU8T,EAAOtU,QAAQqB,OAAS,KAC9B2H,GAAsB/K,EAAIgL,EAAU,KAG5C,IAAIpK,EAAW,EAAQ8U,GAAU,GAAKF,GACtC,MAAMhI,EAAM,KACR,GAAK6I,EAAOlU,OAGZ,GAAIyL,EAAI,CAEJ,MAAMxJ,EAAWiS,KACbR,GAAQI,GAAgBtV,EAAWyD,EAAUxD,MAEzC2B,GACAA,IAEJ4I,GAA2ByC,EAAI5C,EAAU,EAAwB,CAC7D5G,EAEAxD,IAAa4U,QAAwBnT,EAAYzB,EACjDuV,IAEJvV,EAAWwD,QAKfiS,KAMR,IAAIjU,EADJoL,EAAIzK,eAAiB6K,EAGjBxL,EADU,SAAV0T,EACYtI,EAEG,SAAVsI,EACO,IAAMQ,GAAsB9I,EAAKxC,GAAYA,EAASuL,UAItD,MACHvL,GAAYA,EAASwL,UA5vDtC,SAAyB5I,GACrBD,GAAQC,EAAIlB,GAAmBD,GAAoBE,IA4vDvC8J,CAAgBjJ,GAKhBA,KAIZ,MAAM6I,EAASvU,EAAO8I,EAAQ,CAC1B1H,MAAM,EACN6S,UACAC,YACA5T,cAkBJ,OAhBAsU,GAA0BL,EAAQrL,GAE9B4C,EACIgI,EACApI,IAGA5M,EAAWyV,IAGA,SAAVP,EACLQ,GAAsBD,EAAQrL,GAAYA,EAASuL,UAGnDF,IAEG,KACHlT,EAAKkT,GACDrL,GACArM,EAAOqM,EAAS1G,QAAS+R,IAKrC,SAASM,GAAcjB,EAAQ9H,EAAI7L,GAC/B,MAAM6U,EAAa9Z,KAAKuM,MAIxB,OAAOsM,GAHQlY,EAASiY,GAClB,IAAMkB,EAAWlB,GACjBA,EAAOpI,KAAKsJ,GACKhJ,EAAGN,KAAKsJ,GAAa7U,EAASjF,MAEzD,SAASoZ,GAAS7Y,EAAO4Q,EAAO,IAAIjK,KAChC,IAAK,EAAS3G,IAAU4Q,EAAKhK,IAAI5G,GAC7B,OAAOA,EAGX,GADA4Q,EAAK/J,IAAI7G,GACL,GAAMA,GACN6Y,GAAS7Y,EAAMA,MAAO4Q,QAErB,GAAI,EAAQ5Q,GACb,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAMX,OAAQD,IAC9ByZ,GAAS7Y,EAAMZ,GAAIwR,QAGtB,GH9rDoC,iBAAtB3O,EG8rDJjC,IAAUgC,EAAMhC,GAC3BA,EAAMW,SAAS0I,IACXwP,GAASxP,EAAGuH,WAIhB,IAAK,MAAMtQ,KAAON,EACd6Y,GAAS7Y,EAAMM,GAAMsQ,GAG7B,OAAO5Q,EAkBX,MAAMwZ,GAA0B,CAAC9Z,SAAUoC,OA6GrC2X,GA5GqB,CACvB1Y,KAAM,iBACNyQ,MAAO,CACHkI,KAAMhD,OACNiD,OAAQtN,QACRuN,UAAWvN,QAEXwN,cAAeL,GACfM,QAASN,GACTO,aAAcP,GACdQ,iBAAkBR,GAElBS,cAAeT,GACfU,QAASV,GACTW,aAAcX,GACdY,iBAAkBZ,GAElBa,eAAgBb,GAChBc,SAAUd,GACVe,cAAef,GACfgB,kBAAmBhB,IAEvB,MAAMhI,GAAO,MAAEyB,IACX,MAAMtF,EAAW,KACX8M,EAxCd,WACI,MAAMA,EAAQ,CACVtB,WAAW,EACXuB,WAAW,EACXC,cAAc,EACdC,cAAe,IAAInU,KAQvB,OANA,IAAU,KACNgU,EAAMtB,WAAY,KAEtBpB,IAAgB,KACZ0C,EAAME,cAAe,KAElBF,EA2BWI,GACd,IAAIC,EACJ,MAAO,KACH,MAAM/F,EAAW9B,EAAM8C,SAAWgF,GAAyB9H,EAAM8C,WAAW,GAC5E,IAAKhB,IAAaA,EAAS1V,OACvB,OASJ,MAAMkW,EAAW,GAAM/D,IACjB,KAAEkI,GAASnE,EAMXN,EAAQF,EAAS,GACvB,GAAI0F,EAAMC,UACN,OAAOM,GAAiB/F,GAI5B,MAAMgG,EAAaC,GAAkBjG,GACrC,IAAKgG,EACD,OAAOD,GAAiB/F,GAE5B,MAAMkG,EAAaC,GAAuBH,EAAY1F,EAAUkF,EAAO9M,GACvE0N,GAAmBJ,EAAYE,GAC/B,MAAMG,EAAW3N,EAAS4N,QACpBC,EAAgBF,GAAYJ,GAAkBI,GACpD,IAAIG,GAAuB,EAC3B,MAAM,iBAAEC,GAAqBT,EAAW5U,KACxC,GAAIqV,EAAkB,CAClB,MAAMpb,EAAMob,SACc1W,IAAtB8V,EACAA,EAAoBxa,EAEfA,IAAQwa,IACbA,EAAoBxa,EACpBmb,GAAuB,GAI/B,GAAID,GACAA,EAAcnV,OAASkO,MACrBoH,GAAgBV,EAAYO,IAAkBC,GAAuB,CACvE,MAAMG,EAAeR,GAAuBI,EAAejG,EAAUkF,EAAO9M,GAI5E,GAFA0N,GAAmBG,EAAeI,GAErB,WAATlC,EAOA,OANAe,EAAMC,WAAY,EAElBkB,EAAaC,WAAa,KACtBpB,EAAMC,WAAY,EAClB/M,EAASmO,UAENd,GAAiB/F,GAEV,WAATyE,IACLkC,EAAaG,WAAa,CAACva,EAAIwa,EAAaC,KACbC,GAAuBzB,EAAOe,GACtC9E,OAAO8E,EAAclb,MAAQkb,EAEhDha,EAAG2a,SAAW,KACVH,IACAxa,EAAG2a,cAAWnX,SACPmW,EAAWc,cAEtBd,EAAWc,aAAeA,IAItC,OAAOhH,KAOnB,SAASiH,GAAuBzB,EAAOxM,GACnC,MAAM,cAAE2M,GAAkBH,EAC1B,IAAI2B,EAAqBxB,EAAcrU,IAAI0H,EAAM5H,MAKjD,OAJK+V,IACDA,EAAqBpd,OAAOC,OAAO,MACnC2b,EAAcpU,IAAIyH,EAAM5H,KAAM+V,IAE3BA,EAIX,SAAShB,GAAuBnN,EAAOuD,EAAOiJ,EAAO9M,GACjD,MAAM,OAAEgM,EAAM,KAAED,EAAI,UAAEE,GAAY,EAAK,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,eAAEC,EAAc,SAAEC,EAAQ,cAAEC,EAAa,kBAAEC,GAAsBhJ,EAClNlR,EAAMoW,OAAOzI,EAAM3N,KACnB8b,EAAqBF,GAAuBzB,EAAOxM,GACnDoO,EAAW,CAACnF,EAAMzO,KACpByO,GACIpJ,GAA2BoJ,EAAMvJ,EAAU,EAAyBlF,IAEtE4O,EAAQ,CACVqC,OACAE,YACA,YAAYpY,GACR,IAAI0V,EAAO2C,EACX,IAAKY,EAAMtB,UAAW,CAClB,IAAIQ,EAIA,OAHAzC,EAAOmD,GAAkBR,EAO7BrY,EAAG2a,UACH3a,EAAG2a,UAAS,GAGhB,MAAMG,EAAeF,EAAmB9b,GACpCgc,GACAX,GAAgB1N,EAAOqO,IACvBA,EAAa9a,GAAG2a,UAEhBG,EAAa9a,GAAG2a,WAEpBE,EAASnF,EAAM,CAAC1V,KAEpB,MAAMA,GACF,IAAI0V,EAAO4C,EACPyC,EAAYxC,EACZyC,EAAaxC,EACjB,IAAKS,EAAMtB,UAAW,CAClB,IAAIQ,EAMA,OALAzC,EAAOoD,GAAYR,EACnByC,EAAYhC,GAAiBR,EAC7ByC,EAAahC,GAAqBR,EAM1C,IAAIyC,GAAS,EACb,MAAM7R,EAAQpJ,EAAGkb,SAAYC,IACrBF,IAEJA,GAAS,EAELJ,EADAM,EACSH,EAGAD,EAHY,CAAC/a,IAKtB6V,EAAM4E,cACN5E,EAAM4E,eAEVza,EAAGkb,cAAW1X,IAEdkS,GACAA,EAAK1V,EAAIoJ,GACLsM,EAAK7X,QAAU,GACfuL,KAIJA,KAGR,MAAMpJ,EAAIF,GACN,MAAMhB,EAAMoW,OAAOzI,EAAM3N,KAIzB,GAHIkB,EAAGkb,UACHlb,EAAGkb,UAAS,GAEZjC,EAAME,aACN,OAAOrZ,IAEX+a,EAASpC,EAAe,CAACzY,IACzB,IAAIib,GAAS,EACb,MAAM7R,EAAQpJ,EAAG2a,SAAYQ,IACrBF,IAEJA,GAAS,EACTnb,IAEI+a,EADAM,EACSvC,EAGAD,EAHkB,CAAC3Y,IAKhCA,EAAG2a,cAAWnX,EACVoX,EAAmB9b,KAAS2N,UACrBmO,EAAmB9b,KAGlC8b,EAAmB9b,GAAO2N,EACtBiM,GACAA,EAAQ1Y,EAAIoJ,GACRsP,EAAQ7a,QAAU,GAClBuL,KAIJA,KAGRgS,MAAM3O,GACKmN,GAAuBnN,EAAOuD,EAAOiJ,EAAO9M,IAG3D,OAAO0J,EAMX,SAAS2D,GAAiB/M,GACtB,GAAI4O,GAAY5O,GAGZ,OAFAA,EAAQiG,GAAWjG,IACb8G,SAAW,KACV9G,EAGf,SAASiN,GAAkBjN,GACvB,OAAO4O,GAAY5O,GACbA,EAAM8G,SACF9G,EAAM8G,SAAS,QACf/P,EACJiJ,EAEV,SAASoN,GAAmBpN,EAAOoJ,GACT,EAAlBpJ,EAAMwF,WAAiCxF,EAAM6O,UAC7CzB,GAAmBpN,EAAM6O,UAAUvB,QAASlE,GAEpB,IAAlBpJ,EAAMwF,WACZxF,EAAM8O,UAAU1I,WAAagD,EAAMuF,MAAM3O,EAAM8O,WAC/C9O,EAAM+O,WAAW3I,WAAagD,EAAMuF,MAAM3O,EAAM+O,aAGhD/O,EAAMoG,WAAagD,EAG3B,SAAS0D,GAAyBhG,EAAUkI,GAAc,GACtD,IAAIvc,EAAM,GACNwc,EAAqB,EACzB,IAAK,IAAI9d,EAAI,EAAGA,EAAI2V,EAAS1V,OAAQD,IAAK,CACtC,MAAM6V,EAAQF,EAAS3V,GAEnB6V,EAAM5O,OAAS,IACO,IAAlB4O,EAAMkI,WACND,IACJxc,EAAMA,EAAI0T,OAAO2G,GAAyB9F,EAAMF,SAAUkI,MAGrDA,GAAehI,EAAM5O,OAASkO,KACnC7T,EAAI0E,KAAK6P,GAOjB,GAAIiI,EAAqB,EACrB,IAAK,IAAI9d,EAAI,EAAGA,EAAIsB,EAAIrB,OAAQD,IAC5BsB,EAAItB,GAAG+d,WAAa,EAG5B,OAAOzc,EAGX,MAAMmc,GAAe5O,GAAUA,EAAM5H,KAAK+W,cAoN1C,SAASC,GAAsBnG,EAAM7Q,EAAMD,EAAS+Q,IAIhD,MAAMG,EAAcJ,EAAKoG,QACpBpG,EAAKoG,MAAQ,KAEV,IAAIC,EAAUnX,EACd,KAAOmX,GAAS,CACZ,GAAIA,EAAQC,cACR,OAEJD,EAAUA,EAAQpP,OAEtB+I,MAQR,GANAD,GAAW5Q,EAAMiR,EAAalR,GAM1BA,EAAQ,CACR,IAAImX,EAAUnX,EAAO+H,OACrB,KAAOoP,GAAWA,EAAQpP,QAClB0O,GAAYU,EAAQpP,OAAOF,QAC3BwP,GAAsBnG,EAAajR,EAAMD,EAAQmX,GAErDA,EAAUA,EAAQpP,QAI9B,SAASsP,GAAsBvG,EAAM7Q,EAAMD,EAAQsX,GAG/C,MAAMC,EAAW1G,GAAW5Q,EAAM6Q,EAAMwG,GAAe,GACvD1F,IAAY,KACR1W,EAAOoc,EAAcrX,GAAOsX,KAC7BvX,GAjPmBwX,OACAA,OAgQ1B,MAAMC,GAAiBvd,GAAmB,MAAXA,EAAI,IAAsB,YAARA,EAC3Cwd,GAAsB9d,GAAU,EAAQA,GACxCA,EAAMjB,IAAI4U,IACV,CAACA,GAAe3T,IAChB+d,GAAgB,CAACzd,EAAK0d,EAASzK,IAnwCrC,SAAiB5Q,EAAI4Q,EAAMZ,IACvB,IAAKY,EACD,OAAO5Q,EACX,MAAMsb,EAAsB,IAAIxV,KAIvB2M,IACD8I,IAAU,GAEd,MAAMC,EAAQxL,GACdC,GAA4BW,GAC5B,MAAMtT,EAAM0C,KAAM8F,GAKlB,OAJAmK,GAA4BuL,GACvB/I,IACDgJ,KAEGne,GAGX,OADAge,EAAoBI,IAAK,EAClBJ,EA+uCkCK,EAAS9M,GAM3CsM,GAAmBE,EAAQxM,KACnC+B,GACGgL,GAAuB,CAACC,EAAUvL,KACpC,MAAMM,EAAMiL,EAASC,KACrB,IAAK,MAAMne,KAAOke,EAAU,CACxB,GAAIX,GAAcvd,GACd,SACJ,MAAMN,EAAQwe,EAASle,GACvB,GAAI,EAAWN,GACXiT,EAAM3S,GAAOyd,GAAczd,EAAKN,EAAOuT,QAEtC,GAAa,MAATvT,EAAe,CAKpB,MAAMG,EAAa2d,GAAmB9d,GACtCiT,EAAM3S,GAAO,IAAMH,KAIzBue,GAAsB,CAAC/Q,EAAUoH,KAKnC,MAAM5U,EAAa2d,GAAmB/I,GACtCpH,EAASsF,MAAM8C,QAAU,IAAM5V,GAwFnC,SAASwe,GAAe1Q,EAAO2Q,GAE3B,GAAyB,OADAjM,GAGrB,OAAO1E,EAEX,MAAMN,EALmBgF,GAKS3G,MAC5B6S,EAAW5Q,EAAMkG,OAASlG,EAAMkG,KAAO,IAC7C,IAAK,IAAI/U,EAAI,EAAGA,EAAIwf,EAAWvf,OAAQD,IAAK,CACxC,IAAK0f,EAAK9e,EAAOyD,EAAKsb,EAAY,GAAaH,EAAWxf,GACtD,EAAW0f,KACXA,EAAM,CACFE,QAASF,EACTG,QAASH,IAGjBD,EAASzZ,KAAK,CACV0Z,MACAnR,WACA3N,QACAuD,cAAU,EACVE,MACAsb,cAGR,OAAO9Q,EAEX,SAASiR,GAAoBjR,EAAOkR,EAAWxR,EAAU5M,GACrD,MAAM8d,EAAW5Q,EAAMkG,KACjBiL,EAAcD,GAAaA,EAAUhL,KAC3C,IAAK,IAAI/U,EAAI,EAAGA,EAAIyf,EAASxf,OAAQD,IAAK,CACtC,MAAMigB,EAAUR,EAASzf,GACrBggB,IACAC,EAAQ9b,SAAW6b,EAAYhgB,GAAGY,OAEtC,MAAMkX,EAAOmI,EAAQP,IAAI/d,GACrBmW,GACApJ,GAA2BoJ,EAAMvJ,EAAU,EAAwB,CAC/DM,EAAMzM,GACN6d,EACApR,EACAkR,KAMhB,SAASG,KACL,MAAO,CACHC,IAAK,KACL7Q,OAAQ,CACJ8Q,YAAa,EACbC,aAAa,EACbC,iBAAkB,GAClBC,sBAAuB,GACvBC,gBAAiB,EACjBjR,kBAAc3J,EACd6a,iBAAa7a,GAEjBwN,OAAQ,GACRsN,WAAY,GACZlB,WAAY,GACZmB,SAAU/gB,OAAOC,OAAO,OAGhC,IAAI,GAAM,EACV,SAAS+gB,GAAa7M,EAAQ8M,GAC1B,OAAO,SAAmBC,EAAeC,EAAY,MAChC,MAAbA,GAAsB,EAASA,KAE/BA,EAAY,MAEhB,MAAMC,EAAUd,KACVe,EAAmB,IAAI1Z,IAC7B,IAAIwS,GAAY,EAChB,MAAMoG,EAAOa,EAAQb,IAAM,CACvBe,KAAM,KACNC,WAAYL,EACZM,OAAQL,EACRM,WAAY,KACZC,SAAUN,EACVO,WACA,aACI,OAAOP,EAAQ1R,QAEnB,WAAWrF,KAKXuX,IAAG,CAACC,KAAWnc,KACP2b,EAAiBzZ,IAAIia,KAGhBA,GAAU,EAAWA,EAAOC,UACjCT,EAAiBxZ,IAAIga,GACrBA,EAAOC,QAAQvB,KAAQ7a,IAElB,EAAWmc,KAChBR,EAAiBxZ,IAAIga,GACrBA,EAAOtB,KAAQ7a,KAMZ6a,GAEXwB,MAAMA,IAEOX,EAAQ5N,OAAOvN,SAAS8b,KACzBX,EAAQ5N,OAAOpN,KAAK2b,IAGhBA,EAAMvP,OAASuP,EAAM1O,SACrB+N,EAAQjO,OAAQ,IAWrBoN,GAEXzC,UAAS,CAAC/b,EAAM+b,IAIPA,GAMLsD,EAAQN,WAAW/e,GAAQ+b,EACpByC,GANIa,EAAQN,WAAW/e,GAQlCigB,UAAS,CAACjgB,EAAMigB,IAIPA,GAMLZ,EAAQxB,WAAW7d,GAAQigB,EACpBzB,GANIa,EAAQxB,WAAW7d,GAQlC,MAAMkgB,EAAeC,GACjB,IAAK/H,EAAW,CACZ,MAAMlL,EAAQqG,GAAY4L,EAAeC,GAsBzC,OAnBAlS,EAAMQ,WAAa2R,EAOfc,GAAajB,EACbA,EAAQhS,EAAOgT,GAGf9N,EAAOlF,EAAOgT,GAElB9H,GAAY,EACZoG,EAAIkB,WAAaQ,EACjBA,EAAcE,YAAc5B,EAIrBtR,EAAM6O,UAAU9Q,QAS/B,UACQmN,GACAhG,EAAO,KAAMoM,EAAIkB,aASzBW,QAAO,CAAC9gB,EAAKN,KAOTogB,EAAQL,SAASzf,GAAON,EACjBuf,IAGf,OAAOA,GA2Wf,SAAS8B,GAAgB3c,GACrB,OAAO,EAAWA,GAAW,CAAE4c,MAAO5c,EAAS3D,KAAM2D,EAAQ3D,MAAS2D,EAoI1E,MAAM6c,GAAoB,CACtBxc,UAAWmL,GAEXxK,cAAc,GAUZuT,GAppEN,SAAiCtW,EAAIuW,GAC7BA,GAAYA,EAASsI,cACjB,EAAQ7e,GACRuW,EAASjS,QAAQ7B,QAAQzC,GAGzBuW,EAASjS,QAAQ7B,KAAKzC,GAhkC9B2N,GAokCqB3N,EApkCT6M,GAAoBD,GAAqBE,KAgtGnDgS,GAAS,CAACC,EAAQC,EAAWC,EAAgB3T,KAC/C,GAAI,EAAQyT,GAER,YADAA,EAAO/gB,SAAQ,CAACyL,EAAGhN,IAAMqiB,GAAOrV,EAAGuV,IAAc,EAAQA,GAAaA,EAAUviB,GAAKuiB,GAAYC,EAAgB3T,KAGrH,IAAIjO,EAEAA,GADCiO,GAAwBA,EAtJC5H,KAAKwb,cAuJvB,KAGc,EAAlB5T,EAAMwF,UACExF,EAAM6O,UAAUgF,SAAW7T,EAAM6O,UAAU9Q,MAG3CiC,EAAMzM,GAGtB,MAAQpC,EAAG+e,EAAO/R,EAAGY,GAAQ0U,EAMvBK,EAASJ,GAAaA,EAAUvV,EAChC4V,EAAO7D,EAAM6D,OAAS,EAAa7D,EAAM6D,KAAO,GAAM7D,EAAM6D,KAC5D1O,EAAa6K,EAAM7K,WAazB,GAXc,MAAVyO,GAAkBA,IAAW/U,IACzB5M,EAAS2hB,IACTC,EAAKD,GAAU,KACX,EAAOzO,EAAYyO,KACnBzO,EAAWyO,GAAU,OAGpB,GAAMA,KACXA,EAAO/hB,MAAQ,OAGnBI,EAAS4M,GAAM,CACf,MAAMiV,EAAQ,KACVD,EAAKhV,GAAOhN,EACR,EAAOsT,EAAYtG,KACnBsG,EAAWtG,GAAOhN,IAMtBA,GACAiiB,EAAMzc,IAAM,EACZyT,GAAsBgJ,EAAOL,IAG7BK,SAGH,GAAI,GAAMjV,GAAM,CACjB,MAAMiV,EAAQ,KACVjV,EAAIhN,MAAQA,GAEZA,GACAiiB,EAAMzc,IAAM,EACZyT,GAAsBgJ,EAAOL,IAG7BK,SAGC,EAAWjV,IAChBU,GAAsBV,EAAKmR,EAAO,GAAuB,CAACne,EAAOgiB,KA+BzE,SAASE,GAAmBxd,EAASyd,GAKjC,MAAQC,OAAQC,EAAY/gB,OAAQghB,EAAYC,UAAWC,EAAeC,eAAgBC,EAAoBC,cAAeC,EAAmBC,WAAYC,EAAgBC,cAAeC,EAAmBC,QAASC,EAAaC,eAAgBC,EAAoBC,WAAYC,EAAgBC,YAAaC,EAAiBC,WAAYC,EAAiB,EAAMC,UAAWC,EAAeC,oBAAqBC,GAA4Bpf,EAG1aqf,EAAQ,CAACC,EAAIC,EAAIC,EAAWC,EAAS,KAAMC,EAAkB,KAAMxC,EAAiB,KAAMyC,GAAQ,EAAOC,GAAY,KAEnHN,IAAOrI,GAAgBqI,EAAIC,KAC3BE,EAASI,GAAgBP,GACzBQ,EAAQR,EAAII,EAAiBxC,GAAgB,GAC7CoC,EAAK,OAEa,IAAlBC,EAAG9G,YACHmH,GAAY,EACZL,EAAGQ,gBAAkB,MAEzB,MAAM,KAAEpe,EAAI,IAAE2G,EAAG,UAAEyG,GAAcwQ,EACjC,OAAQ5d,GACJ,KAAKqe,GACDC,EAAYX,EAAIC,EAAIC,EAAWC,GAC/B,MACJ,KAAK5P,GACDqQ,EAAmBZ,EAAIC,EAAIC,EAAWC,GACtC,MACJ,KAAKU,GACS,MAANb,GACAc,EAAgBb,EAAIC,EAAWC,EAAQE,GAK3C,MACJ,KAAK,GACDU,EAAgBf,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GACnF,MACJ,QACoB,EAAZ7Q,EACAuR,EAAehB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAEjE,EAAZ7Q,EACLwR,EAAiBjB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,IAEnE,GAAZ7Q,GAGa,IAAZA,IAFNpN,EAAK6e,QAAQlB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,EAAWa,IAU5F,MAAPnY,GAAeoX,GACf3C,GAAOzU,EAAKgX,GAAMA,EAAGhX,IAAK4U,EAAgBqC,IAG5CU,EAAc,CAACX,EAAIC,EAAIC,EAAWC,KACpC,GAAU,MAANH,EACA3B,EAAY4B,EAAGziB,GAAKshB,EAAemB,EAAGlP,UAAYmP,EAAWC,OAE5D,CACD,MAAM3iB,EAAMyiB,EAAGziB,GAAKwiB,EAAGxiB,GACnByiB,EAAGlP,WAAaiP,EAAGjP,UACnBmO,EAAY1hB,EAAIyiB,EAAGlP,YAIzB6P,EAAqB,CAACZ,EAAIC,EAAIC,EAAWC,KACjC,MAANH,EACA3B,EAAY4B,EAAGziB,GAAKwhB,EAAkBiB,EAAGlP,UAAY,IAAMmP,EAAWC,GAItEF,EAAGziB,GAAKwiB,EAAGxiB,IAGbsjB,EAAkB,CAACb,EAAIC,EAAWC,EAAQE,MAC3CJ,EAAGziB,GAAIyiB,EAAGE,QAAUL,EAAwBG,EAAGlP,SAAUmP,EAAWC,EAAQE,IAoC3EW,EAAiB,CAAChB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KACvFD,EAAQA,GAAqB,QAAZJ,EAAG5d,KACV,MAAN2d,EACAoB,EAAanB,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAG5Ee,EAAarB,EAAIC,EAAIG,EAAiBxC,EAAgByC,EAAOC,IAG/Dc,EAAe,CAACnX,EAAOiW,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KACpF,IAAI9iB,EACA8jB,EACJ,MAAM,KAAEjf,EAAI,MAAEmL,EAAK,UAAEiC,EAAS,WAAEY,EAAU,QAAEkR,EAAO,UAAEpI,EAAS,KAAEhJ,GAASlG,EACzE,GACIA,EAAMzM,SACYwD,IAAlB4e,IACe,IAAfzG,EAKA3b,EAAKyM,EAAMzM,GAAKoiB,EAAc3V,EAAMzM,QAEnC,CAcD,GAbAA,EAAKyM,EAAMzM,GAAKohB,EAAkB3U,EAAM5H,KAAMge,EAAO7S,GAASA,EAAMgU,IAGpD,EAAZ/R,EACA2P,EAAmB5hB,EAAIyM,EAAM8G,UAEZ,GAAZtB,GACLgS,EAAcxX,EAAM8G,SAAUvT,EAAI,KAAM4iB,EAAiBxC,EAAgByC,GAAkB,kBAAThe,EAA0Bie,KAAerW,EAAMwW,iBAEjItQ,GACA+K,GAAoBjR,EAAO,KAAMmW,EAAiB,WAGlD5S,EAAO,CACP,IAAK,MAAMlR,KAAOkR,EACT,EAAelR,IAChBkiB,EAAchhB,EAAIlB,EAAK,KAAMkR,EAAMlR,GAAM+jB,EAAOpW,EAAM8G,SAAUqP,EAAiBxC,EAAgB8D,KAGpGJ,EAAY9T,EAAMmU,qBACnBC,GAAgBN,EAAWlB,EAAiBnW,GAIpDwV,EAAWjiB,EAAI+jB,EAAStX,EAAOmW,GAY/BjQ,GACA+K,GAAoBjR,EAAO,KAAMmW,EAAiB,eAItD,MAAMyB,IAA4BjE,GAAmBA,IAAmBA,EAAeJ,gBACnFnN,IACCA,EAAWuF,UACZiM,GACAxR,EAAWyR,YAAYtkB,GAE3B6gB,EAAW7gB,EAAI0iB,EAAWC,KACrBmB,EAAY9T,GAASA,EAAMuU,iBAC5BF,GACA1R,IACA8E,IAAsB,KAClBqM,GAAaM,GAAgBN,EAAWlB,EAAiBnW,GACzD4X,GAA2BxR,EAAW2R,MAAMxkB,GAC5C2S,GAAQ+K,GAAoBjR,EAAO,KAAMmW,EAAiB,aAC3DxC,IAGL6B,EAAa,CAACjiB,EAAI+jB,EAAStX,EAAOmW,KAIpC,GAHImB,GACA7B,EAAeliB,EAAI+jB,GAEnBnB,EAAiB,CACjB,MAAM6B,EAAc7B,EAAgB/d,KAAK6f,UAGrCD,GAAeA,IAAgBV,GAC/B7B,EAAeliB,EAAIykB,EAAc,MAOjChY,IALUmW,EAAgB7I,SAM1BkI,EAAWjiB,EAAI4iB,EAAgBnW,MAAMsX,QAASnB,EAAgBnW,MAAOmW,EAAgBjW,UAI3FsX,EAAgB,CAAC1Q,EAAUmP,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,EAAW6B,EAAQ,KAC3G,IAAK,IAAI/mB,EAAI+mB,EAAO/mB,EAAI2V,EAAS1V,OAAQD,IAAK,CAC1C,MAAM6V,EAASF,EAAS3V,GAAKklB,EACvB8B,GAAerR,EAAS3V,IACxBuU,GAAeoB,EAAS3V,IAC9B2kB,EAAM,KAAM9O,EAAOiP,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KAGhFe,EAAe,CAACrB,EAAIC,EAAIG,EAAiBxC,EAAgByC,EAAOC,KAClE,MAAM9iB,EAAMyiB,EAAGziB,GAAKwiB,EAAGxiB,GACvB,IAAI,UAAE2b,EAAS,gBAAEsH,EAAe,KAAEtQ,GAAS8P,EAG3C9G,GAA4B,GAAf6G,EAAG7G,UAChB,MAAMkJ,EAAWrC,EAAGxS,OAAS,EACvB8U,EAAWrC,EAAGzS,OAAS,EAC7B,IAAI8T,EAaJ,IAZKA,EAAYgB,EAASC,sBACtBX,GAAgBN,EAAWlB,EAAiBH,EAAID,GAEhD7P,GACA+K,GAAoB+E,EAAID,EAAII,EAAiB,gBAQ7CjH,EAAY,EAAG,CAKf,GAAgB,GAAZA,EAEAqJ,EAAWhlB,EAAIyiB,EAAIoC,EAAUC,EAAUlC,EAAiBxC,EAAgByC,QAqBxE,GAhBgB,EAAZlH,GACIkJ,EAASI,QAAUH,EAASG,OAC5BjE,EAAchhB,EAAI,QAAS,KAAM8kB,EAASG,MAAOpC,GAKzC,EAAZlH,GACAqF,EAAchhB,EAAI,QAAS6kB,EAASK,MAAOJ,EAASI,MAAOrC,GAQ/C,EAAZlH,EAA2B,CAE3B,MAAMwJ,EAAgB1C,EAAG2C,aACzB,IAAK,IAAIxnB,EAAI,EAAGA,EAAIunB,EAActnB,OAAQD,IAAK,CAC3C,MAAMkB,EAAMqmB,EAAcvnB,GACpBynB,EAAOR,EAAS/lB,GAChBuK,EAAOyb,EAAShmB,IAClBuK,IAASgc,GACRnE,GAAsBA,EAAmBlhB,EAAIlB,KAC9CkiB,EAAchhB,EAAIlB,EAAKumB,EAAMhc,EAAMwZ,EAAOL,EAAGjP,SAAUqP,EAAiBxC,EAAgB8D,KAOxF,EAAZvI,GACI6G,EAAGjP,WAAakP,EAAGlP,UACnBqO,EAAmB5hB,EAAIyiB,EAAGlP,eAI5BuP,GAAgC,MAAnBG,GAEnB+B,EAAWhlB,EAAIyiB,EAAIoC,EAAUC,EAAUlC,EAAiBxC,EAAgByC,GAE5E,MAAMyC,EAAiBzC,GAAqB,kBAAZJ,EAAG5d,KAC/Boe,EACAsC,EAAmB/C,EAAGS,gBAAiBA,EAAiBjjB,EAAI4iB,EAAiBxC,EAAgBkF,GAKvFxC,GAEN0C,EAAchD,EAAIC,EAAIziB,EAAI,KAAM4iB,EAAiBxC,EAAgBkF,KAEhExB,EAAYgB,EAASW,iBAAmB9S,IACzC8E,IAAsB,KAClBqM,GAAaM,GAAgBN,EAAWlB,EAAiBH,EAAID,GAC7D7P,GAAQ+K,GAAoB+E,EAAID,EAAII,EAAiB,aACtDxC,IAILmF,EAAqB,CAACG,EAAaC,EAAaC,EAAmBhD,EAAiBxC,EAAgByC,KACtG,IAAK,IAAIjlB,EAAI,EAAGA,EAAI+nB,EAAY9nB,OAAQD,IAAK,CACzC,MAAMioB,EAAWH,EAAY9nB,GACvBkoB,EAAWH,EAAY/nB,GAEvB8kB,EAGNmD,EAAShhB,OAAS,KAGbsV,GAAgB0L,EAAUC,IAEN,EAArBD,EAAS5T,WACY,GAArB4T,EAAS5T,UACP6P,EAAe+D,EAAS7lB,IAGtB4lB,EACRrD,EAAMsD,EAAUC,EAAUpD,EAAW,KAAME,EAAiBxC,EAAgByC,GAAO,KAGrFmC,EAAa,CAAChlB,EAAIyM,EAAOoY,EAAUC,EAAUlC,EAAiBxC,EAAgByC,KAChF,GAAIgC,IAAaC,EAAU,CACvB,IAAK,MAAMhmB,KAAOgmB,EAAU,CAExB,GAAI,EAAehmB,GACf,SACJ,MAAMuK,EAAOyb,EAAShmB,GAChBumB,EAAOR,EAAS/lB,IAClBuK,IAASgc,GACRnE,GAAsBA,EAAmBlhB,EAAIlB,KAC9CkiB,EAAchhB,EAAIlB,EAAKumB,EAAMhc,EAAMwZ,EAAOpW,EAAM8G,SAAUqP,EAAiBxC,EAAgB8D,IAGnG,GAAIW,IAAa,EACb,IAAK,MAAM/lB,KAAO+lB,EACT,EAAe/lB,IAAUA,KAAOgmB,GACjC9D,EAAchhB,EAAIlB,EAAK+lB,EAAS/lB,GAAM,KAAM+jB,EAAOpW,EAAM8G,SAAUqP,EAAiBxC,EAAgB8D,MAMlHX,EAAkB,CAACf,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KACxF,MAAMiD,EAAuBtD,EAAGziB,GAAKwiB,EAAKA,EAAGxiB,GAAKshB,EAAe,IAC3D0E,EAAqBvD,EAAGE,OAASH,EAAKA,EAAGG,OAASrB,EAAe,IACvE,IAAI,UAAE3F,EAAS,gBAAEsH,GAAoBR,EACjC9G,EAAY,IACZmH,GAAY,GAQN,MAANN,GACA3B,EAAWkF,EAAqBrD,EAAWC,GAC3C9B,EAAWmF,EAAmBtD,EAAWC,GAIzCsB,EAAcxB,EAAGlP,SAAUmP,EAAWsD,EAAmBpD,EAAiBxC,EAAgByC,EAAOC,IAG7FnH,EAAY,GACA,GAAZA,GACAsH,GAGAsC,EAAmB/C,EAAGS,gBAAiBA,EAAiBP,EAAWE,EAAiBxC,EAAgByC,IAS1F,MAAVJ,EAAG3jB,KACE8jB,GAAmBH,IAAOG,EAAgB7I,UAC3CkM,GAAuBzD,EAAIC,GAAI,IAQnC+C,EAAchD,EAAIC,EAAIC,EAAWsD,EAAmBpD,EAAiBxC,EAAgByC,EAAOC,IAIlGW,EAAmB,CAACjB,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KAC/E,MAANN,EACmB,IAAfC,EAAGxQ,UACH2Q,EAAgB7Q,IAAImU,SAASzD,EAAIC,EAAWC,EAAQE,EAAOC,GAG3DqD,EAAe1D,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAIlFsD,EAAgB5D,EAAIC,EAAIK,IAG1BqD,EAAiB,CAACE,EAAc3D,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KAC7F,MAAM3W,EAAYka,EAAa/K,UAioEvC,SAAiC7O,EAAOE,EAAQ+K,GAC5C,MAAM7S,EAAO4H,EAAM5H,KAEboI,GAAcN,EAASA,EAAOM,WAAaR,EAAMQ,aAAeqZ,GAChEna,EAAW,CACblI,IAAKsiB,KACL9Z,QACA5H,OACA8H,SACAM,aACAoF,KAAM,KACNhJ,KAAM,KACN0Q,QAAS,KACTO,OAAQ,KACR3I,OAAQ,KACRnH,MAAO,KACP8V,QAAS,KACT/O,UAAW,KACX9L,QAAS,KACT8Y,SAAU5R,EAASA,EAAO4R,SAAW/gB,OAAOC,OAAOwP,EAAWsR,UAC9DiI,YAAa,KACb5U,YAAa,GAEb0M,WAAY,KACZlB,WAAY,KAEZ5L,aAAciD,GAAsB5P,EAAMoI,GAC1CkG,aAAc3C,GAAsB3L,EAAMoI,GAE1C4C,KAAM,KACNU,QAAS,KAETwB,IAAK,EACLF,KAAM,EACN7B,MAAO,EACP0B,MAAO,EACPD,MAAO,EACP+O,KAAM,EACN1O,WAAY,EACZ2U,aAAc,KAEd/O,WACAgP,WAAYhP,EAAWA,EAASiP,UAAY,EAC5CC,SAAU,KACVC,eAAe,EAGflP,WAAW,EACX3B,aAAa,EACbgG,eAAe,EACf8K,GAAI,KACJrlB,EAAG,KACHslB,GAAI,KACJC,EAAG,KACHC,GAAI,KACJC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,GAAI,KACJ5X,EAAG,KACH6X,IAAK,KACLC,IAAK,KACLxa,GAAI,MAaR,OAPIZ,EAAS4F,IAAM,CAAEvQ,EAAG2K,GAExBA,EAASkG,KAAO1F,EAASA,EAAO0F,KAAOlG,EACvCA,EAAS0D,KAAOA,GAAKpB,KAAK,KAAMtC,GAIzBA,EA5sEwCqb,CAAwBnB,EAAczD,EAAiBxC,GAsBlG,GAbI/E,GAAYgL,KACZla,EAAS4F,IAAI0V,SAAW9D,IAitEpC,SAAwBxX,EAAUub,GAAQ,GACtCtR,GAAwBsR,EACxB,MAAM,MAAE1X,EAAK,SAAEuD,EAAQ,UAAEtB,GAAc9F,EAASM,MAC1Ckb,EAAyB,EAAZ1V,GAzwJvB,SAAmB9F,EAAU4H,EAAU4T,EACvCD,GAAQ,GACJ,MAAM1X,EAAQ,GACR0B,EAAQ,GACd,EAAIA,EAAOkW,GAAmB,GAC9B9T,GAAa3H,EAAU4H,EAAU/D,EAAO0B,GAKpCiW,EAEAxb,EAAS6D,MAAQ0X,EAAQ1X,EDz2BtBjG,GCy2B8CiG,GDz2BjB,EAAOxI,GAAyBqC,IC42B3DsC,EAAStH,KAAKmL,MAMf7D,EAAS6D,MAAQA,EAJjB7D,EAAS6D,MAAQ0B,EAOzBvF,EAASuF,MAAQA,GAkvJjBmW,CAAU1b,EAAU6D,EAAO2X,EAAYD,GAvhHzB,EAACvb,EAAUoH,KACzB,GAA+B,GAA3BpH,EAASM,MAAMwF,UAAqC,CACpD,MAAMpN,EAAO0O,EAAS/R,EAClBqD,GACAsH,EAASsF,MAAQ8B,EAEjB,EAAIA,EAAU,IAAK1O,IAGnBkY,GAAqBxJ,EAAWpH,EAASsF,MAAQ,SAIrDtF,EAASsF,MAAQ,GACb8B,GACA2J,GAAoB/Q,EAAUoH,GAGtC,EAAIpH,EAASsF,MAAOmW,GAAmB,IAsgHvCE,CAAU3b,EAAUoH,GACAoU,GAMxB,SAAgCxb,EAAUub,GACtC,MAAMpW,EAAYnF,EAAStH,KAmB3BsH,EAASqa,YAAchpB,OAAOC,OAAO,MAGrC0O,EAAS3B,MAAQ,IAAIC,MAAM0B,EAAS4F,IAAKgW,IAKzC,MAAM,MAAEjI,GAAUxO,EAClB,GAAIwO,EAAO,CACP,MAAM2G,EAAgBta,EAASsa,aAC3B3G,EAAMjiB,OAAS,EA6H3B,SAA4BsO,GACxB,MAAM6b,EAAS1H,IAIXnU,EAASmU,QAAU7U,GAAU6U,IAsB7B,MAAO,CACH5O,MAAOvF,EAASuF,MAChBD,MAAOtF,EAASsF,MAChB5B,KAAM1D,EAAS0D,KACfmY,UA5JmBC,CAAmB9b,GAAY,KACtDwJ,GAAkBxJ,EAClB1H,IACA,MAAMyjB,EAAchc,GAAsB4T,EAAO3T,EAAU,EAAwB,CAA6EA,EAAS6D,MAAOyW,IAGhL,GAFA1iB,IACA4R,GAAkB,KACdhV,EAAUunB,GAAc,CACxB,GAAIR,EAEA,OAAOQ,EAAYtnB,MAAMunB,IACrBC,GAAkBjc,EAAUgc,MAMhChc,EAASya,SAAWsB,OAIxBE,GAAkBjc,EAAU+b,QAIhCG,GAAqBlc,GA5DnBmc,CAAuBnc,EAAUub,GAEvCtR,IAAwB,EAptEpBmS,CAAepc,GAMVA,EAASya,UAIV,GAHAxG,GAAkBA,EAAeoI,YAAYrc,EAAUsc,IAGlDpC,EAAarmB,GAAI,CAClB,MAAM0oB,EAAevc,EAAS4N,QAAUjH,GAAYC,IACpDqQ,EAAmB,KAAMsF,EAAahG,EAAWC,SAIzD8F,EAAkBtc,EAAUka,EAAc3D,EAAWC,EAAQvC,EAAgByC,EAAOC,IAMlFsD,EAAkB,CAAC5D,EAAIC,EAAIK,KAC7B,MAAM3W,EAAYsW,EAAGnH,UAAYkH,EAAGlH,UACpC,GA3qGR,SAA+BqC,EAAWgL,EAAW7F,GACjD,MAAQ9S,MAAOiD,EAAWM,SAAUqV,EAAY,UAAEtN,GAAcqC,GACxD3N,MAAOkD,EAAWK,SAAUsV,EAAY,UAAElN,GAAcgN,EAC1D9X,EAAQyK,EAAUnI,aAQxB,GAAIwV,EAAUhW,MAAQgW,EAAU9V,WAC5B,OAAO,EAEX,KAAIiQ,GAAanH,GAAa,GA2B1B,SAAIiN,IAAgBC,GACXA,GAAiBA,EAAaC,UAInC7V,IAAcC,IAGbD,GAGAC,GAGEF,GAAgBC,EAAWC,EAAWrC,KALhCqC,GAnCb,GAAgB,KAAZyI,EAGA,OAAO,EAEX,GAAgB,GAAZA,EACA,OAAK1I,EAIED,GAAgBC,EAAWC,EAAWrC,KAHhCqC,EAKZ,GAAgB,EAAZyI,EAA2B,CAChC,MAAMyJ,EAAeuD,EAAUvD,aAC/B,IAAK,IAAIxnB,EAAI,EAAGA,EAAIwnB,EAAavnB,OAAQD,IAAK,CAC1C,MAAMkB,EAAMsmB,EAAaxnB,GACzB,GAAIsV,EAAUpU,KAASmU,EAAUnU,KAC5BoS,GAAeL,EAAO/R,GACvB,OAAO,GAwBvB,OAAO,EAknGCiqB,CAAsBvG,EAAIC,EAAIK,GAAY,CAC1C,GACI3W,EAASya,WACRza,EAAS0a,cAUV,YAJAmC,EAAyB7c,EAAUsW,EAAIK,GAQvC3W,EAAS9C,KAAOoZ,EApzHhC,SAAuB9T,GACnB,MAAM/Q,EAAI8P,GAAMzN,QAAQ0O,GACpB/Q,GAAK,GACL8P,GAAMxN,OAAOtC,EAAG,GAozHRqrB,CAAc9c,EAASmO,QAEvBnO,EAASmO,cAKbmI,EAAGnH,UAAYkH,EAAGlH,UAClBmH,EAAGziB,GAAKwiB,EAAGxiB,GACXmM,EAASM,MAAQgW,GAGnBgG,EAAoB,CAACtc,EAAUka,EAAc3D,EAAWC,EAAQvC,EAAgByC,EAAOC,KAEzF3W,EAASmO,OAASrX,GAAO,WACrB,GAAKkJ,EAASwL,UA4DT,CAID,IAEImM,GAFA,KAAEza,EAAI,GAAE4d,EAAE,EAAEC,EAAC,OAAEva,EAAM,MAAEF,GAAUN,EACjC+c,EAAa7f,EAKbA,GACAA,EAAKrJ,GAAKyM,EAAMzM,GAChBgpB,EAAyB7c,EAAU9C,EAAMyZ,IAGzCzZ,EAAOoD,EAGPwa,GACA,EAAeA,IAGdnD,EAAYza,EAAK2G,OAAS3G,EAAK2G,MAAM+U,sBACtCX,GAAgBN,EAAWnX,EAAQtD,EAAMoD,GAM7C,MAAM0c,EAAW9X,GAAoBlF,GAI/Bid,EAAWjd,EAAS4N,QAC1B5N,EAAS4N,QAAUoP,EAInB5G,EAAM6G,EAAUD,EAEhBrH,EAAesH,EAASppB,IAExB+iB,GAAgBqG,GAAWjd,EAAUiU,EAAgByC,GAIrDxZ,EAAKrJ,GAAKmpB,EAASnpB,GACA,OAAfkpB,GAhvGpB,UAAyB,MAAEzc,EAAK,OAAEE,GAAU3M,GAExC,KAAO2M,GAAUA,EAAOoN,UAAYtN,IAC/BA,EAAQE,EAAOF,OAAOzM,GAAKA,EAC5B2M,EAASA,EAAOA,OAgvGJ0c,CAAgBld,EAAUgd,EAASnpB,IAGnCknB,GACAzP,GAAsByP,EAAG9G,IAGxB0D,EAAYza,EAAK2G,OAAS3G,EAAK2G,MAAMyV,iBACtChO,IAAsB,KAClB2M,GAAgBN,EAAWnX,EAAQtD,EAAMoD,KAC1C2T,OAzHc,CACrB,IAAI0D,EACJ,MAAM,GAAE9jB,EAAE,MAAEgQ,GAAUqW,GAChB,GAAEU,EAAE,EAAEC,EAAC,OAAEra,GAAWR,EAEtB4a,GACA,EAAeA,IAGdjD,EAAY9T,GAASA,EAAMmU,qBAC5BC,GAAgBN,EAAWnX,EAAQ0Z,GAMvC,MAAMtM,EAAW5N,EAAS4N,QAAU1I,GAAoBlF,GAIpDnM,GAAMspB,GAKNA,GAAYjD,EAAarmB,GAAI+Z,EAAS5N,EAAUiU,IAShDmC,EAAM,KAAMxI,EAAS2I,EAAWC,EAAQxW,EAAUiU,EAAgByC,GAIlEwD,EAAarmB,GAAK+Z,EAAQ/Z,IAG1BgnB,GACAvP,GAAsBuP,EAAG5G,IAGxB0D,EAAY9T,GAASA,EAAMuU,iBAC5B9M,IAAsB,KAClB2M,GAAgBN,EAAWnX,EAAQ0Z,KACpCjG,GAKP,MAAM,EAAE3Q,GAAMtD,EACVsD,GACyB,IAAzB4W,EAAapU,WACbwF,GAAsBhI,EAAG2Q,GAE7BjU,EAASwL,WAAY,KAwEmDoI,KAE9EiJ,EAA2B,CAAC7c,EAAUwc,EAAW7F,KACnD6F,EAAUrN,UAAYnP,EACtB,MAAM8G,EAAY9G,EAASM,MAAMuD,MACjC7D,EAASM,MAAQkc,EACjBxc,EAAS9C,KAAO,KApuFxB,SAAqB8C,EAAU4H,EAAUwV,EAAczG,GACnD,MAAM,MAAE9S,EAAK,MAAE0B,EAAOjF,OAAO,UAAEkP,IAAgBxP,EACzC+H,EAAkB,GAAMlE,IACvB9M,GAAWiJ,EAASqF,aAC3B,KAOKsR,GAAanH,EAAY,IACZ,GAAZA,EA0BD,CAKD,IAAI6N,EAHJ1V,GAAa3H,EAAU4H,EAAU/D,EAAO0B,GAIxC,IAAK,MAAM5S,KAAOoV,EACTH,IAEC,EAAOA,EAAUjV,KAGb0qB,EAAW,EAAU1qB,MAAUA,GAAQ,EAAOiV,EAAUyV,MAC1DtmB,GACIqmB,QAEuB/lB,IAAtB+lB,EAAazqB,SAEiB0E,IAA3B+lB,EAAaC,KACjBxZ,EAAMlR,GAAOqV,GAAiBjR,EAAS6Q,GAAY,EAAWjV,OAAK0E,EAAW2I,WAI3E6D,EAAMlR,IAMzB,GAAI4S,IAAUwC,EACV,IAAK,MAAMpV,KAAO4S,EACTqC,GAAa,EAAOA,EAAUjV,WACxB4S,EAAM5S,QAzDzB,GAAgB,EAAZ6c,EAA2B,CAG3B,MAAMwJ,EAAgBhZ,EAASM,MAAM2Y,aACrC,IAAK,IAAIxnB,EAAI,EAAGA,EAAIunB,EAActnB,OAAQD,IAAK,CAC3C,MAAMkB,EAAMqmB,EAAcvnB,GAEpBY,EAAQuV,EAASjV,GACvB,GAAIoE,EAGA,GAAI,EAAOwO,EAAO5S,GACd4S,EAAM5S,GAAON,MAEZ,CACD,MAAMirB,EAAenoB,EAASxC,GAC9BkR,EAAMyZ,GAAgBtV,GAAiBjR,EAASgR,EAAiBuV,EAAcjrB,EAAO2N,QAI1FuF,EAAM5S,GAAON,GA2C7B8G,GAAQ6G,EAAU,MAAiB,UAypF/Bud,CAAYvd,EAAUwc,EAAU3Y,MAAOiD,EAAW6P,GAx/CtC,EAAC3W,EAAUoH,KAC3B,MAAM,MAAE9G,EAAK,MAAEgF,GAAUtF,EACzB,IAAIwd,GAAoB,EACpBC,EAA2B,EAC/B,GAAsB,GAAlBnd,EAAMwF,UAAqC,CAC3C,MAAMpN,EAAO0O,EAAS/R,EAClBqD,EAOkB,IAATA,EAGL8kB,GAAoB,EAKpB,EAAOlY,EAAO8B,IAIlBoW,GAAqBpW,EAASuV,QAC9B/L,GAAqBxJ,EAAU9B,IAEnCmY,EAA2BrW,OAEtBA,IAEL2J,GAAoB/Q,EAAUoH,GAC9BqW,EAA2B,CAAErV,QAAS,IAG1C,GAAIoV,EACA,IAAK,MAAM7qB,KAAO2S,EACT4K,GAAcvd,IAAUA,KAAO8qB,UACzBnY,EAAM3S,IAk9CrB+qB,CAAY1d,EAAUwc,EAAUpV,UAGhCpE,QAAiB3L,EAAW2I,EAASmO,SAEnCkL,EAAgB,CAAChD,EAAIC,EAAIC,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAAY,KAClG,MAAMgH,EAAKtH,GAAMA,EAAGjP,SACdwW,EAAgBvH,EAAKA,EAAGvQ,UAAY,EACpC+X,EAAKvH,EAAGlP,UACR,UAAEoI,EAAS,UAAE1J,GAAcwQ,EAEjC,GAAI9G,EAAY,EAAG,CACf,GAAgB,IAAZA,EAIA,YADAsO,EAAmBH,EAAIE,EAAItH,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAGrF,GAAgB,IAAZnH,EAGL,YADAuO,EAAqBJ,EAAIE,EAAItH,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAKhF,EAAZ7Q,GAEoB,GAAhB8X,GACA7F,GAAgB4F,EAAIlH,EAAiBxC,GAErC4J,IAAOF,GACPlI,EAAmBc,EAAWsH,IAId,GAAhBD,EAEgB,GAAZ9X,EAEAgY,EAAmBH,EAAIE,EAAItH,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,GAItFoB,GAAgB4F,EAAIlH,EAAiBxC,GAAgB,IAMrC,EAAhB2J,GACAnI,EAAmBc,EAAW,IAGlB,GAAZzQ,GACAgS,EAAc+F,EAAItH,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KAKvFoH,EAAuB,CAACJ,EAAIE,EAAItH,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,KAE7FkH,EAAKA,GAAMxqB,EACX,MAAM2qB,GAFNL,EAAKA,GAAMtqB,GAEU3B,OACfusB,EAAYJ,EAAGnsB,OACfwsB,EAAeC,KAAKC,IAAIJ,EAAWC,GACzC,IAAIxsB,EACJ,IAAKA,EAAI,EAAGA,EAAIysB,EAAczsB,IAAK,CAC/B,MAAM4sB,EAAaR,EAAGpsB,GAAKklB,EACrB8B,GAAeoF,EAAGpsB,IAClBuU,GAAe6X,EAAGpsB,IACxB2kB,EAAMuH,EAAGlsB,GAAI4sB,EAAW9H,EAAW,KAAME,EAAiBxC,EAAgByC,EAAOC,GAEjFqH,EAAYC,EAEZlG,GAAgB4F,EAAIlH,EAAiBxC,GAAgB,GAAM,EAAOiK,GAIlEpG,EAAc+F,EAAItH,EAAWC,EAAQC,EAAiBxC,EAAgByC,EAAOC,EAAWuH,IAI1FJ,EAAqB,CAACH,EAAIE,EAAItH,EAAW+H,EAAc7H,EAAiBxC,EAAgByC,EAAOC,KACjG,IAAIllB,EAAI,EACR,MAAM8sB,EAAKV,EAAGnsB,OACd,IAAI8sB,EAAKb,EAAGjsB,OAAS,EACjB+sB,EAAKF,EAAK,EAId,KAAO9sB,GAAK+sB,GAAM/sB,GAAKgtB,GAAI,CACvB,MAAMpI,EAAKsH,EAAGlsB,GACR6kB,EAAMuH,EAAGpsB,GAAKklB,EACd8B,GAAeoF,EAAGpsB,IAClBuU,GAAe6X,EAAGpsB,IACxB,IAAIuc,GAAgBqI,EAAIC,GAIpB,MAHAF,EAAMC,EAAIC,EAAIC,EAAW,KAAME,EAAiBxC,EAAgByC,EAAOC,GAK3EllB,IAKJ,KAAOA,GAAK+sB,GAAM/sB,GAAKgtB,GAAI,CACvB,MAAMpI,EAAKsH,EAAGa,GACRlI,EAAMuH,EAAGY,GAAM9H,EACf8B,GAAeoF,EAAGY,IAClBzY,GAAe6X,EAAGY,IACxB,IAAIzQ,GAAgBqI,EAAIC,GAIpB,MAHAF,EAAMC,EAAIC,EAAIC,EAAW,KAAME,EAAiBxC,EAAgByC,EAAOC,GAK3E6H,IACAC,IASJ,GAAIhtB,EAAI+sB,GACJ,GAAI/sB,GAAKgtB,EAAI,CACT,MAAMC,EAAUD,EAAK,EACfjI,EAASkI,EAAUH,EAAKV,EAAGa,GAAS7qB,GAAKyqB,EAC/C,KAAO7sB,GAAKgtB,GACRrI,EAAM,KAAOyH,EAAGpsB,GAAKklB,EACf8B,GAAeoF,EAAGpsB,IAClBuU,GAAe6X,EAAGpsB,IAAM8kB,EAAWC,EAAQC,EAAiBxC,EAAgByC,GAClFjlB,UAWP,GAAIA,EAAIgtB,EACT,KAAOhtB,GAAK+sB,GACR3H,EAAQ8G,EAAGlsB,GAAIglB,EAAiBxC,GAAgB,GAChDxiB,QAOH,CACD,MAAMktB,EAAKltB,EACLmtB,EAAKntB,EAELotB,EAAmB,IAAI/lB,IAC7B,IAAKrH,EAAImtB,EAAIntB,GAAKgtB,EAAIhtB,IAAK,CACvB,MAAM4sB,EAAaR,EAAGpsB,GAAKklB,EACrB8B,GAAeoF,EAAGpsB,IAClBuU,GAAe6X,EAAGpsB,IACH,MAAjB4sB,EAAU1rB,KAIVksB,EAAiBhmB,IAAIwlB,EAAU1rB,IAAKlB,GAK5C,IAAIqtB,EACAC,EAAU,EACd,MAAMC,EAAcP,EAAKG,EAAK,EAC9B,IAAIK,GAAQ,EAERC,EAAmB,EAMvB,MAAMC,EAAwB,IAAIhrB,MAAM6qB,GACxC,IAAKvtB,EAAI,EAAGA,EAAIutB,EAAavtB,IACzB0tB,EAAsB1tB,GAAK,EAC/B,IAAKA,EAAIktB,EAAIltB,GAAK+sB,EAAI/sB,IAAK,CACvB,MAAM2tB,EAAYzB,EAAGlsB,GACrB,GAAIstB,GAAWC,EAAa,CAExBnI,EAAQuI,EAAW3I,EAAiBxC,GAAgB,GACpD,SAEJ,IAAIoL,EACJ,GAAqB,MAAjBD,EAAUzsB,IACV0sB,EAAWR,EAAiBjmB,IAAIwmB,EAAUzsB,UAI1C,IAAKmsB,EAAIF,EAAIE,GAAKL,EAAIK,IAClB,GAAsC,IAAlCK,EAAsBL,EAAIF,IAC1B5Q,GAAgBoR,EAAWvB,EAAGiB,IAAK,CACnCO,EAAWP,EACX,WAIKznB,IAAbgoB,EACAxI,EAAQuI,EAAW3I,EAAiBxC,GAAgB,IAGpDkL,EAAsBE,EAAWT,GAAMntB,EAAI,EACvC4tB,GAAYH,EACZA,EAAmBG,EAGnBJ,GAAQ,EAEZ7I,EAAMgJ,EAAWvB,EAAGwB,GAAW9I,EAAW,KAAME,EAAiBxC,EAAgByC,EAAOC,GACxFoI,KAKR,MAAMO,EAA6BL,EAiU/C,SAAqBrrB,GACjB,MAAMyO,EAAIzO,EAAI8B,QACRkF,EAAS,CAAC,GAChB,IAAInJ,EAAGqtB,EAAG/D,EAAGrf,EAAGpG,EAChB,MAAM+T,EAAMzV,EAAIlC,OAChB,IAAKD,EAAI,EAAGA,EAAI4X,EAAK5X,IAAK,CACtB,MAAM8tB,EAAO3rB,EAAInC,GACjB,GAAa,IAAT8tB,EAAY,CAEZ,GADAT,EAAIlkB,EAAOA,EAAOlJ,OAAS,GACvBkC,EAAIkrB,GAAKS,EAAM,CACfld,EAAE5Q,GAAKqtB,EACPlkB,EAAOnD,KAAKhG,GACZ,SAIJ,IAFAspB,EAAI,EACJrf,EAAId,EAAOlJ,OAAS,EACbqpB,EAAIrf,GACPpG,GAAMylB,EAAIrf,GAAK,EAAK,EAChB9H,EAAIgH,EAAOtF,IAAMiqB,EACjBxE,EAAIzlB,EAAI,EAGRoG,EAAIpG,EAGRiqB,EAAO3rB,EAAIgH,EAAOmgB,MACdA,EAAI,IACJ1Y,EAAE5Q,GAAKmJ,EAAOmgB,EAAI,IAEtBngB,EAAOmgB,GAAKtpB,IAMxB,IAFAspB,EAAIngB,EAAOlJ,OACXgK,EAAId,EAAOmgB,EAAI,GACRA,KAAM,GACTngB,EAAOmgB,GAAKrf,EACZA,EAAI2G,EAAE3G,GAEV,OAAOd,EAvWO4kB,CAAYL,GACZ9rB,EAGN,IAFAyrB,EAAIQ,EAA2B5tB,OAAS,EAEnCD,EAAIutB,EAAc,EAAGvtB,GAAK,EAAGA,IAAK,CACnC,MAAMguB,EAAYb,EAAKntB,EACjB4sB,EAAYR,EAAG4B,GACfjJ,EAASiJ,EAAY,EAAIlB,EAAKV,EAAG4B,EAAY,GAAG5rB,GAAKyqB,EAC1B,IAA7Ba,EAAsB1tB,GAEtB2kB,EAAM,KAAMiI,EAAW9H,EAAWC,EAAQC,EAAiBxC,EAAgByC,GAEtEuI,IAIDH,EAAI,GAAKrtB,IAAM6tB,EAA2BR,GAC1CY,EAAKrB,EAAW9H,EAAWC,EAAQ,GAGnCsI,QAMdY,EAAO,CAACpf,EAAOiW,EAAWC,EAAQmJ,EAAU1L,EAAiB,QAC/D,MAAM,GAAEpgB,EAAE,KAAE6E,EAAI,WAAEgO,EAAU,SAAEU,EAAQ,UAAEtB,GAAcxF,EACtD,GAAgB,EAAZwF,EACA4Z,EAAKpf,EAAM6O,UAAUvB,QAAS2I,EAAWC,EAAQmJ,QAGrD,GAAiB,IAAZ7Z,EACDxF,EAAMiL,SAASmU,KAAKnJ,EAAWC,EAAQmJ,QAG3C,GAAgB,GAAZ7Z,EACApN,EAAKgnB,KAAKpf,EAAOiW,EAAWC,EAAQgB,SAGxC,GAAI9e,IAAS,GAQb,GAAIA,IAASwe,GAQb,GAHoC,IAAbyI,GACP,EAAZ7Z,GACAY,EAEA,GAAiB,IAAbiZ,EACAjZ,EAAWyR,YAAYtkB,GACvB6gB,EAAW7gB,EAAI0iB,EAAWC,GAC1BlL,IAAsB,IAAM5E,EAAW2R,MAAMxkB,IAAKogB,OAEjD,CACD,MAAM,MAAE2L,EAAK,WAAExR,EAAU,WAAEF,GAAexH,EACpC/S,EAAS,IAAM+gB,EAAW7gB,EAAI0iB,EAAWC,GACzCqJ,EAAe,KACjBD,EAAM/rB,GAAI,KACNF,IACAua,GAAcA,QAGlBE,EACAA,EAAWva,EAAIF,EAAQksB,GAGvBA,SAKRnL,EAAW7gB,EAAI0iB,EAAWC,OAn1BX,GAAG3iB,KAAI2iB,UAAUD,EAAWX,KAC/C,IAAI1Y,EACJ,KAAOrJ,GAAMA,IAAO2iB,GAChBtZ,EAAO2Y,EAAgBhiB,GACvB6gB,EAAW7gB,EAAI0iB,EAAWX,GAC1B/hB,EAAKqJ,EAETwX,EAAW8B,EAAQD,EAAWX,IA6yB1BkK,CAAexf,EAAOiW,EAAWC,OATrC,CACI9B,EAAW7gB,EAAI0iB,EAAWC,GAC1B,IAAK,IAAI/kB,EAAI,EAAGA,EAAI2V,EAAS1V,OAAQD,IACjCiuB,EAAKtY,EAAS3V,GAAI8kB,EAAWC,EAAQmJ,GAEzCjL,EAAWpU,EAAMkW,OAAQD,EAAWC,KAsCtCK,EAAU,CAACvW,EAAOmW,EAAiBxC,EAAgB8L,GAAW,EAAOpJ,GAAY,KACnF,MAAM,KAAEje,EAAI,MAAEmL,EAAK,IAAExE,EAAG,SAAE+H,EAAQ,gBAAE0P,EAAe,UAAEhR,EAAS,UAAE0J,EAAS,KAAEhJ,GAASlG,EAKpF,GAHW,MAAPjB,GACAyU,GAAOzU,EAAK,KAAM4U,EAAgB,MAEtB,IAAZnO,EAEA,YADA2Q,EAAgB7Q,IAAIoa,WAAW1f,GAGnC,MAAM2f,EAA+B,EAAZna,GAA+BU,EACxD,IAAImR,EAIJ,IAHKA,EAAY9T,GAASA,EAAMqc,uBAC5BjI,GAAgBN,EAAWlB,EAAiBnW,GAEhC,EAAZwF,EACAqa,GAAiB7f,EAAM6O,UAAW8E,EAAgB8L,OAEjD,CACD,GAAiB,IAAZja,EAED,YADAxF,EAAMiL,SAASsL,QAAQ5C,EAAgB8L,GAGvCE,GACA1O,GAAoBjR,EAAO,KAAMmW,EAAiB,iBAElDK,IAECpe,IAAS,IACL8W,EAAY,GAAiB,GAAZA,GAEtBuI,GAAgBjB,EAAiBL,EAAiBxC,GAAgB,GAAO,IAEnEvb,IAAS,KACF,IAAZ8W,GACe,IAAZA,KACFmH,GAAyB,GAAZ7Q,IACfiS,GAAgB3Q,EAAUqP,EAAiBxC,GAG/B,GAAZnO,IACCia,IAAaK,GAAmB9f,EAAMuD,SACvCvD,EAAM5H,KAAK/E,OAAO2M,EAAOkX,IAEzBuI,GACApsB,EAAO2M,KAGVqX,EAAY9T,GAASA,EAAMwc,mBAAqBJ,IACjD3U,IAAsB,KAClBqM,GAAaM,GAAgBN,EAAWlB,EAAiBnW,GACzD2f,GACI1O,GAAoBjR,EAAO,KAAMmW,EAAiB,eACvDxC,IAGLtgB,EAAS2M,IACX,MAAM,KAAE5H,EAAI,GAAE7E,EAAE,OAAE2iB,EAAM,WAAE9P,GAAepG,EACzC,GAAI5H,IAAS,GAET,YADA4nB,GAAezsB,EAAI2iB,GAGvB,GAAI9d,IAASwe,GAET,WA74BiB,GAAGrjB,KAAI2iB,aAC5B,IAAItZ,EACJ,KAAOrJ,GAAMA,IAAO2iB,GAChBtZ,EAAO2Y,EAAgBhiB,GACvB8gB,EAAW9gB,GACXA,EAAKqJ,EAETyX,EAAW6B,IAq4BP+J,CAAiBjgB,GAGrB,MAAMkgB,EAAgB,KAClB7L,EAAW9gB,GACP6S,IAAeA,EAAWuF,WAAavF,EAAWwH,YAClDxH,EAAWwH,cAGnB,GAAsB,EAAlB5N,EAAMwF,WACNY,IACCA,EAAWuF,UAAW,CACvB,MAAM,MAAE2T,EAAK,WAAExR,GAAe1H,EACxBmZ,EAAe,IAAMD,EAAM/rB,EAAI2sB,GACjCpS,EACAA,EAAW9N,EAAMzM,GAAI2sB,EAAeX,GAGpCA,SAIJW,KAGFF,GAAiB,CAAC/f,EAAKkgB,KAGzB,IAAIvjB,EACJ,KAAOqD,IAAQkgB,GACXvjB,EAAO2Y,EAAgBtV,GACvBoU,EAAWpU,GACXA,EAAMrD,EAEVyX,EAAW8L,IAETN,GAAmB,CAACngB,EAAUiU,EAAgB8L,KAIhD,MAAM,IAAE9E,EAAG,QAAE3hB,EAAO,OAAE6U,EAAM,QAAEP,EAAO,GAAEoN,GAAOhb,EAK9C,GAHIib,GACA,EAAeA,GAEf3hB,EACA,IAAK,IAAI7H,EAAI,EAAGA,EAAI6H,EAAQ5H,OAAQD,IAChC0G,EAAKmB,EAAQ7H,IAKjB0c,IACAhW,EAAKgW,GACL0I,EAAQjJ,EAAS5N,EAAUiU,EAAgB8L,IAG3C/E,GACA1P,GAAsB0P,EAAI/G,GAE9B3I,IAAsB,KAClBtL,EAAS6J,aAAc,IACxBoK,GAKCA,GACAA,EAAeJ,gBACdI,EAAepK,aAChB7J,EAASya,WACRza,EAAS0a,eACV1a,EAASua,aAAetG,EAAeuG,YACvCvG,EAAejc,OACa,IAAxBic,EAAejc,MACfic,EAAehS,YAOrB8V,GAAkB,CAAC3Q,EAAUqP,EAAiBxC,EAAgB8L,GAAW,EAAOpJ,GAAY,EAAO6B,EAAQ,KAC7G,IAAK,IAAI/mB,EAAI+mB,EAAO/mB,EAAI2V,EAAS1V,OAAQD,IACrColB,EAAQzP,EAAS3V,GAAIglB,EAAiBxC,EAAgB8L,EAAUpJ,IAGlEC,GAAkBtW,GACE,EAAlBA,EAAMwF,UACC8Q,GAAgBtW,EAAM6O,UAAUvB,SAEpB,IAAlBtN,EAAMwF,UACAxF,EAAMiL,SAASrO,OAEnB2Y,EAAiBvV,EAAMkW,QAAUlW,EAAMzM,IAE5C2R,GAAS,CAAClF,EAAOiW,KACN,MAATjW,EACIiW,EAAUmK,QACV7J,EAAQN,EAAUmK,OAAQ,KAAM,MAAM,GAI1CtK,EAAMG,EAAUmK,QAAU,KAAMpgB,EAAOiW,GAE3CpT,KACAoT,EAAUmK,OAASpgB,GAEjBkX,GAAY,CACdnV,EAAG+T,EACH4E,GAAInE,EACJgE,EAAG6E,EACHjhB,EAAG9K,EACHgtB,GAAI3G,EACJ4G,GAAI9I,EACJ+I,GAAIxH,EACJyH,IAAK1H,EACLhjB,EAAGwgB,GACHmK,EAAGhqB,GAEP,IAAIub,GACA6K,GAIJ,OAHI3I,KACClC,GAAS6K,IAAe3I,EAAmBgD,KAEzC,CACHhS,UACA8M,WACA0O,UAAW3O,GAAa7M,GAAQ8M,KAGxC,SAAS2F,GAAgB1O,EAAMvJ,EAAUM,EAAOkR,EAAY,MACxDrR,GAA2BoJ,EAAMvJ,EAAU,EAAoB,CAC3DM,EACAkR,IAcR,SAASsI,GAAuBzD,EAAIC,EAAIrc,GAAU,GAC9C,MAAMgnB,EAAM5K,EAAGjP,SACT8Z,EAAM5K,EAAGlP,SACf,GAAI,EAAQ6Z,IAAQ,EAAQC,GACxB,IAAK,IAAIzvB,EAAI,EAAGA,EAAIwvB,EAAIvvB,OAAQD,IAAK,CAGjC,MAAMksB,EAAKsD,EAAIxvB,GACf,IAAIosB,EAAKqD,EAAIzvB,GACM,EAAfosB,EAAG/X,YAAgC+X,EAAG/G,mBAClC+G,EAAGrO,WAAa,GAAsB,KAAjBqO,EAAGrO,aACxBqO,EAAKqD,EAAIzvB,GAAKgnB,GAAeyI,EAAIzvB,IACjCosB,EAAGhqB,GAAK8pB,EAAG9pB,IAEVoG,GACD6f,GAAuB6D,EAAIE,KAqD/C,MACMuC,GAAsBvc,GAAUA,IAAUA,EAAMsd,UAA+B,KAAnBtd,EAAMsd,UAoLlEC,GAAa,aAKnB,SAASC,GAAiBjuB,GACtB,OAAOkuB,GAAaF,GAAYhuB,IAASA,EAE7C,MAAMmuB,GAAyB3qB,SAoB/B,SAAS0qB,GAAa5oB,EAAMtF,EAAMouB,GAAc,GAC5C,MAAMxhB,EAAWgF,IAA4BwE,GAC7C,GAAIxJ,EAAU,CACV,MAAMmF,EAAYnF,EAAStH,KAE3B,GAAIA,IAAS0oB,GAAY,CAGrB,GAAa,UAAThuB,EACA,OAAO+R,EAEX,MAAMsc,EAAWtc,EAAUuc,aAAevc,EAAU/R,KACpD,GAAIquB,IACCA,IAAaruB,GACVquB,IAAatsB,EAAS/B,IACtBquB,IAAa,EAAWtsB,EAAS/B,KACrC,OAAO+R,EAYf,OANAlD,GAAQjC,EAAStH,IAASyM,EAAUzM,GAAOtF,IAEvC6O,GAAQjC,EAASc,WAAWpI,GAAOtF,IAW/C,SAAS6O,GAAQ0f,EAAUvuB,GACvB,OAAQuuB,IACHA,EAASvuB,IACNuuB,EAASxsB,EAAS/B,KAClBuuB,EAAS,EAAWxsB,EAAS/B,MAGzC,MAAM,GAAWwD,YAA8DS,GACzE0f,GAAOngB,YAA0DS,GACjEuP,GAAUhQ,YAA6DS,GACvE6f,GAAStgB,YAA4DS,GAMrEuqB,GAAa,GACnB,IAAIC,GAAe,KAiBnB,SAAStR,GAAUuR,GAAkB,GACjCF,GAAWnqB,KAAMoqB,GAAeC,EAAkB,KAAO,IAE7D,SAASrR,KACLmR,GAAWjqB,MACXkqB,GAAeD,GAAWA,GAAWlwB,OAAS,IAAM,KAiCxD,SAASqwB,GAAYrpB,EAAMmL,EAAOuD,EAAUoI,EAAWyJ,GACnD,MAAM3Y,EAAQqG,GAAYjO,EAAMmL,EAAOuD,EAAUoI,EAAWyJ,GAAc,GAU1E,OARA3Y,EAAMwW,gBAAkB+K,IAAgBxuB,EAExCod,KAGuBoR,IACnBA,GAAapqB,KAAK6I,GAEfA,EAEX,SAASiH,GAAQlV,GACb,QAAOA,IAA8B,IAAtBA,EAAM2vB,YAEzB,SAAShU,GAAgBqI,EAAIC,GAOzB,OAAOD,EAAG3d,OAAS4d,EAAG5d,MAAQ2d,EAAG1jB,MAAQ2jB,EAAG3jB,IAYhD,MAKM8oB,GAAoB,cACpBwG,GAAe,EAAGtvB,SAAiB,MAAPA,EAAcA,EAAM,KAChDuvB,GAAe,EAAG7iB,SACL,MAAPA,EACF5M,EAAS4M,IAAQ,GAAMA,IAAQ,EAAWA,GACtC,CAAE5N,EAAGuT,GAA0BvG,EAAGY,GAClCA,EACJ,KAEJsH,GAGN,SAAsBjO,EAAMmL,EAAQ,KAAMuD,EAAW,KAAMoI,EAAY,EAAGyJ,EAAe,KAAMkJ,GAAc,GAOzG,GANKzpB,GAAQA,IAAS6oB,KAIlB7oB,EAAOkO,IAEPW,GAAQ7O,GAAO,CAIf,MAAM0pB,EAAS7b,GAAW7N,EAAMmL,GAAO,GAIvC,OAHIuD,GACAib,GAAkBD,EAAQhb,GAEvBgb,EAOX,GAiyCsB/vB,EAryCDqG,EAsyCd,EAAWrG,IAAU,cAAeA,IAryCvCqG,EAAOA,EAAK4pB,WAGZze,EAAO,EAEHtF,GAAQsF,IAAU4X,MAAqB5X,KACvCA,EAAQ,EAAO,GAAIA,IAEvB,IAAMiV,MAAOyJ,EAAK,MAAExJ,GAAUlV,EAC1B0e,IAAU9vB,EAAS8vB,KACnB1e,EAAMiV,MAAQ3lB,EAAeovB,IAE7B,EAASxJ,KAGLxa,GAAQwa,KAAW,EAAQA,KAC3BA,EAAQ,EAAO,GAAIA,IAEvBlV,EAAMkV,MAAQ3mB,EAAe2mB,IAkxCzC,IAA0B1mB,EA9wCtB,MAAMyT,EAAYrT,EAASiG,GACrB,EA9uIS,CAACA,GAASA,EAAK8pB,aA+uIvBC,CAAW/pB,GACR,IA5ZK,CAACA,GAASA,EAAKgqB,aA6ZpBC,CAAWjqB,GACP,GACA,EAASA,GACL,EACA,EAAWA,GACP,EACA,EAQhB4H,EAAQ,CACV0hB,aAAa,EACb,UAAyB,EACzBtpB,OACAmL,QACAlR,IAAKkR,GAASoe,GAAape,GAC3BxE,IAAKwE,GAASqe,GAAare,GAC3B+T,QA1xHa,KA2xHbxQ,SAAU,KACV+H,UAAW,KACX5D,SAAU,KACV6D,UAAW,KACXC,WAAY,KACZ7I,KAAM,KACNE,WAAY,KACZ7S,GAAI,KACJ2iB,OAAQ,KACR/d,OAAQ,KACRmqB,aAAc,KACdC,YAAa,EACb/c,YACA0J,YACAyJ,eACAnC,gBAAiB,KACjBhW,WAAY,MAQhB,GAFAuhB,GAAkB/hB,EAAO8G,GAER,IAAZtB,EAAgC,CACjC,MAAM,QAAEgd,EAAO,SAAEC,GAp7HzB,SAAmCziB,GAC/B,MAAM,UAAEwF,EAAS,SAAEsB,GAAa9G,EAChC,IAAIwiB,EACAC,EASJ,OARgB,GAAZjd,GACAgd,EAAU5b,GAAsBE,EAASgB,SACzC2a,EAAW7b,GAAsBE,EAAS2b,YAG1CD,EAAU5b,GAAsBE,GAChC2b,EAAW/c,GAAe,OAEvB,CACH8c,UACAC,YAs6H8BC,CAA0B1iB,GACxDA,EAAM8O,UAAY0T,EAClBxiB,EAAM+O,WAAa0T,EAiBvB,OAbKZ,GAEDN,KAKCrS,EAAY,GAAiB,EAAZ1J,IAGJ,KAAd0J,GACAqS,GAAapqB,KAAK6I,GAEfA,GAEX,SAASiG,GAAWjG,EAAO2iB,EAAYC,GAAW,GAG9C,MAAM,MAAErf,EAAK,IAAExE,EAAG,UAAEmQ,GAAclP,EAC5B6iB,EAAcF,EA6JxB,YAAuBnoB,GACnB,MAAM/H,EAAM,EAAO,GAAI+H,EAAK,IAC5B,IAAK,IAAIrJ,EAAI,EAAGA,EAAIqJ,EAAKpJ,OAAQD,IAAK,CAClC,MAAM2xB,EAAUtoB,EAAKrJ,GACrB,IAAK,MAAMkB,KAAOywB,EACd,GAAY,UAARzwB,EACII,EAAI+lB,QAAUsK,EAAQtK,QACtB/lB,EAAI+lB,MAAQ3lB,EAAe,CAACJ,EAAI+lB,MAAOsK,EAAQtK,cAGlD,GAAY,UAARnmB,EACLI,EAAIgmB,MAAQ3mB,EAAe,CAACW,EAAIgmB,MAAOqK,EAAQrK,aAE9C,GAAI,EAAKpmB,GAAM,CAChB,MAAM0wB,EAAWtwB,EAAIJ,GACf2wB,EAAWF,EAAQzwB,GACrB0wB,IAAaC,IACbvwB,EAAIJ,GAAO0wB,EACL,GAAG5c,OAAO4c,EAAUD,EAAQzwB,IAC5B2wB,OAGG,KAAR3wB,IACLI,EAAIJ,GAAOywB,EAAQzwB,IAI/B,OAAOI,EAxL0BwwB,CAAW1f,GAAS,GAAIof,GAAcpf,EACvE,MAAO,CACHme,aAAa,EACb,UAAyB,EACzBtpB,KAAM4H,EAAM5H,KACZmL,MAAOsf,EACPxwB,IAAKwwB,GAAelB,GAAakB,GACjC9jB,IAAK4jB,GAAcA,EAAW5jB,IAItB6jB,GAAY7jB,EACN,EAAQA,GACJA,EAAIoH,OAAOyb,GAAae,IACxB,CAAC5jB,EAAK6iB,GAAae,IACvBf,GAAae,GACrB5jB,EACNuY,QAAStX,EAAMsX,QACfxQ,SAAU9G,EAAM8G,SAChB3O,OAAQ6H,EAAM7H,OACdmqB,aAActiB,EAAMsiB,aACpBC,YAAaviB,EAAMuiB,YACnB/c,UAAWxF,EAAMwF,UAKjB0J,UAAWyT,GAAc3iB,EAAM5H,OAAS,IACnB,IAAf8W,EACI,GACY,GAAZA,EACJA,EACNyJ,aAAc3Y,EAAM2Y,aACpBnC,gBAAiBxW,EAAMwW,gBACvBhW,WAAYR,EAAMQ,WAClB0F,KAAMlG,EAAMkG,KACZE,WAAYpG,EAAMoG,WAKlByI,UAAW7O,EAAM6O,UACjB5D,SAAUjL,EAAMiL,SAChB6D,UAAW9O,EAAM8O,WAAa7I,GAAWjG,EAAM8O,WAC/CC,WAAY/O,EAAM+O,YAAc9I,GAAWjG,EAAM+O,YACjDxb,GAAIyM,EAAMzM,GACV2iB,OAAQlW,EAAMkW,QAMtB,SAASgN,GAAgBC,EAAO,IAAKC,EAAO,GACxC,OAAO/c,GAAYoQ,GAAM,KAAM0M,EAAMC,GAezC,SAASC,GAAmBF,EAAO,GAGnCG,GAAU,GACN,OAAOA,GACArT,KAAawR,GAAYnb,GAAS,KAAM6c,IACzC9c,GAAYC,GAAS,KAAM6c,GAErC,SAASzd,GAAesB,GACpB,OAAa,MAATA,GAAkC,kBAAVA,EAEjBX,GAAYC,IAEd,EAAQU,GAENX,GAAY,GAAU,KAAMW,GAEb,iBAAVA,EAGQ,OAAbA,EAAMzT,GAAcyT,EAAQf,GAAWe,GAIvCX,GAAYoQ,GAAM,KAAMhO,OAAOzB,IAI9C,SAASmR,GAAenR,GACpB,OAAoB,OAAbA,EAAMzT,GAAcyT,EAAQf,GAAWe,GAElD,SAAS+a,GAAkB/hB,EAAO8G,GAC9B,IAAI1O,EAAO,EACX,MAAM,UAAEoN,GAAcxF,EACtB,GAAgB,MAAZ8G,EACAA,EAAW,UAEV,GAAI,EAAQA,GACb1O,EAAO,QAEN,GAAwB,iBAAb0O,EAAuB,CACnC,GAAgB,EAAZtB,GAA2C,GAAZA,EAA+B,CAE9D,MAAM+d,EAAOzc,EAASgB,QAOtB,YANIyb,IAEAA,EAAKnT,IAAMhJ,GAAyB,GACpC2a,GAAkB/hB,EAAOujB,KACzBA,EAAKnT,IAAMhJ,IAA0B,KAIxC,CACDhP,EAAO,GACP,MAAMorB,EAAW1c,EAAS/R,EACrByuB,GAAcrI,MAAqBrU,EAGlB,IAAb0c,GAAkC9e,KAGQ,KAA3CA,GAAyB1E,MAAMkP,WAC/BpI,EAAS/R,EAAI,EACbiL,EAAMkP,WAAa,MAGnBpI,EAAS/R,EAAI,GAVjB+R,EAAS0J,KAAO9L,SAenB,EAAWoC,IAChBA,EAAW,CAAEgB,QAAShB,EAAU0J,KAAM9L,IACtCtM,EAAO,KAGP0O,EAAW2B,OAAO3B,GAEF,GAAZtB,GACApN,EAAO,GACP0O,EAAW,CAACoc,GAAgBpc,KAG5B1O,EAAO,GAGf4H,EAAM8G,SAAWA,EACjB9G,EAAMwF,WAAapN,EAqDvB,SAASqrB,GAAOpxB,EAAKwV,EAAc6b,GAAwB,GAGvD,MAAMhkB,EAAWwJ,IAAmBxE,GACpC,GAAIhF,EAAU,CAIV,MAAMoS,EAA8B,MAAnBpS,EAASQ,OACpBR,EAASM,MAAMQ,YAAcd,EAASM,MAAMQ,WAAWsR,SACvDpS,EAASQ,OAAO4R,SACtB,GAAIA,GAAYzf,KAAOyf,EAEnB,OAAOA,EAASzf,GAEf,GAAIsxB,UAAUvyB,OAAS,EACxB,OAAOsyB,GAAyB,EAAW7b,GACrCA,IACAA,GAsBlB,IAAI+b,IAAmB,EACvB,SAASC,GAAankB,EAAUjJ,EAASqtB,EAAe,GAAIC,EAAgB,GAAIC,EAAkB,GAAI/f,GAAU,GAC5G,MAAM,OAENM,EAAQC,QAASyf,EAEjB7e,KAAM8e,EAAaC,SAAUC,EAAe,QAAEC,EAASla,MAAOma,EAAcnR,QAASoR,EAAgBd,OAAQe,EAAa,WAE1H3S,EAAU,WAAElB,EAAU,YAEtB8T,EAAW,QAAE1T,EAAO,aAAE2T,EAAY,QAAE1T,EAAO,UAAE2T,EAAS,YAAEC,EAAW,cAAEC,EAAa,cAAEC,EAAa,UAAEC,EAAS,UAAEC,EAAS,OAAE9f,EAAM,cAAE+f,EAAa,gBAAEC,EAAe,cAAEC,EAAa,OAE9K5J,GAAW9kB,EACL6U,EAAa5L,EAAS3B,MACtBuH,EAAM5F,EAAS4F,IACf8f,EAAe1lB,EAASc,WAAW+D,OAoCzC,GAnCIN,GAAWiB,GAAUxF,EAASwF,SAAW,IACzCxF,EAASwF,OAASA,GAGjBjB,IACD2f,IAAmB,EACnByB,GAAa,eAAgB,KAA0B5uB,EAASiJ,EAAU0lB,GAC1ExB,IAAmB,EAEnB0B,GAAY5lB,EAAU0lB,EAActB,EAAcC,EAAeC,IAGjEC,GACAJ,GAAankB,EAAUukB,EAAgBH,EAAcC,EAAeC,GAAiB,GAGrFzf,GACA+gB,GAAY5lB,EAAU6E,EAAQuf,EAAcC,EAAeC,GAkB3DQ,EACA,GAAI,EAAQA,GACR,IAAK,IAAIrzB,EAAI,EAAGA,EAAIqzB,EAAcpzB,OAAQD,IAAK,CAC3C,MAAMkB,EAAMmyB,EAAcrzB,GAC1BmU,EAAIjT,GAAOoxB,GAAOpxB,QAOtB,IAAK,MAAMA,KAAOmyB,EAAe,CAC7B,MAAM7c,EAAM6c,EAAcnyB,GACtB,EAASsV,GACTrC,EAAIjT,GAAOoxB,GAAO9b,EAAI4d,MAAQlzB,EAAKsV,EAAIG,SAAS,GAGhDxC,EAAIjT,GAAOoxB,GAAO9b,GAQlC,GAAI0c,EACA,IAAK,MAAMhyB,KAAOgyB,EAAS,CACvB,MAAMmB,EAAgBnB,EAAQhyB,GAC1B,EAAWmzB,KACXlgB,EAAIjT,GAAOmzB,EAAcxjB,KAAKsJ,IAqC1C,GA1BKrH,EAuBIigB,GACLJ,EAAa3sB,KAAK+sB,IAvBdJ,EAAa1yB,QACb0yB,EAAapxB,SAAQ+yB,GAAUC,GAAYhmB,EAAU+lB,EAAQna,KAE7D4Y,GACAwB,GAAYhmB,EAAUwkB,EAAa5Y,IAqBvC8Y,EACA,IAAK,MAAM/xB,KAAO+xB,EAAiB,CAC/B,MAAMzc,EAAMyc,EAAgB/xB,GAgBtB2C,EAAI,GAAS,CACfsD,IAhBQ,EAAWqP,GACjBA,EAAI3F,KAAKsJ,EAAYA,GACrB,EAAW3D,EAAIrP,KACXqP,EAAIrP,IAAI0J,KAAKsJ,EAAYA,GACzB,EAaN/S,KATS,EAAWoP,IAAQ,EAAWA,EAAIpP,KACzCoP,EAAIpP,IAAIyJ,KAAKsJ,GAKT,IAKVva,OAAO2E,eAAe4P,EAAKjT,EAAK,CAC5BuD,YAAY,EACZD,cAAc,EACd2C,IAAK,IAAMtD,EAAEjD,MACbwG,IAAK6C,GAAMpG,EAAEjD,MAAQqJ,IAsFjC,GA/EIkpB,GACAP,EAAc5sB,KAAKmtB,IAElBrgB,GAAW8f,EAAc3yB,QAC1B2yB,EAAcrxB,SAAQ4xB,IAClB,IAAK,MAAMjyB,KAAOiyB,EACdqB,GAAcrB,EAAajyB,GAAMiT,EAAKgG,EAAYjZ,MAI1DkyB,GACAP,EAAgB7sB,KAAKotB,IAEpBtgB,GAAW+f,EAAgB5yB,QAC5B4yB,EAAgBtxB,SAAQ6xB,IACpB,MAAMzS,EAAW,EAAWyS,GACtBA,EAAe3wB,KAAK0X,GACpBiZ,EACNvqB,QAAQa,QAAQiX,GAAUpf,SAAQL,KArO9C,SAAiBA,EAAKN,GAClB,GAAKmX,GAKA,CACD,IAAI4I,EAAW5I,GAAgB4I,SAM/B,MAAM8T,EAAiB1c,GAAgBhJ,QAAUgJ,GAAgBhJ,OAAO4R,SACpE8T,IAAmB9T,IACnBA,EAAW5I,GAAgB4I,SAAW/gB,OAAOC,OAAO40B,IAGxD9T,EAASzf,GAAON,GAoNRohB,CAAQ9gB,EAAKyf,EAASzf,UAO9B4R,IACI4N,GACA,EAAOnS,EAASmS,aACXnS,EAASmS,WAAa,EAAO,GAAInS,EAAStH,KAAKyZ,aAAcA,GAElElB,GACA,EAAOjR,EAASiR,aACXjR,EAASiR,WAAa,EAAO,GAAIjR,EAAStH,KAAKuY,aAAcA,IAIrE1M,GACDohB,GAAa,UAAW,IAAmB5uB,EAASiJ,EAAU0lB,GAE9DX,GACA7a,GAAc6a,EAAYziB,KAAKsJ,IAE/ByF,GACA,GAAUA,EAAQ/O,KAAKsJ,IAEvBoZ,GACA7a,GAAe6a,EAAa1iB,KAAKsJ,IAEjC0F,GACA,GAAUA,EAAQhP,KAAKsJ,IAEvBqZ,GAnmGJvV,GAomGgBuV,EAAU3iB,KAAKsJ,GApmGH,IADLnT,WAumGnBysB,GAnmGJxV,GAomGkBwV,EAAY5iB,KAAKsJ,GApmGP,UAomGxBua,GAEAV,GA7zHgB,EAAClc,EAAM9Q,EAAS+Q,MACpCF,GAAW,KAA2BC,EAAM9Q,IA6zHxC2tB,CAAgBX,EAAcnjB,KAAKsJ,IAEnC2Z,GACAhb,GAAgBgb,EAAcjjB,KAAKsJ,IAEnC4Z,GACAlb,GAAkBkb,EAAgBljB,KAAKsJ,IAKvCwZ,GACAhb,GAAgBgb,EAAc9iB,KAAKsJ,IAKnC0Z,GACAjb,GAAYib,EAAUhjB,KAAKsJ,IAE3B,EAAQiQ,GACR,GAAKtX,QACD,GAAIsX,EAAOnqB,OAAQ,CACf,MAAMyiB,EAAUnU,EAASmU,UAAYnU,EAASmU,QAAU7U,GAAU,KAClEuc,EAAO7oB,SAAQL,IACXwhB,EAAQxhB,GD58J5B,SAAe0zB,EAAQ1zB,GACnB,OAAO,GAAM0zB,EAAO1zB,IACd0zB,EAAO1zB,GACP,IAAI6M,GAAc6mB,EAAQ1zB,GCy8JD2zB,CAAM1a,EAAYjZ,WAG/BqN,EAASmU,UACfnU,EAASmU,QAAU,GAQnC,SAASwR,GAAavyB,EAAMsF,EAAM3B,EAASiJ,EAAU0lB,GACjDa,GAAmBnzB,EAAMsF,EAAMgtB,EAAc1lB,GAC7C,MAAQ8E,QAAS0hB,EAAI,OAAE3hB,GAAW9N,EAC9ByvB,GACAC,GAAoBrzB,EAAMsF,EAAM8tB,EAAMxmB,GAEtC6E,GACA0hB,GAAmBnzB,EAAMsF,EAAMmM,EAAQ7E,GAE3C,MAAM0mB,EAAW3vB,EAAQ3D,GACrBszB,GACAvmB,GAA2BumB,EAASpkB,KAAKtC,EAAS3B,OAAQ2B,EAAUtH,GAG5E,SAAS+tB,GAAoBrzB,EAAMsF,EAAM8tB,EAAMxmB,GACvCwmB,EAAK1hB,SACL2hB,GAAoBrzB,EAAMsF,EAAM8tB,EAAK1hB,QAAS9E,GAElD,MAAM2mB,EAAWH,EAAKpzB,GAClBuzB,GACAxmB,GAA2BwmB,EAASrkB,KAAKtC,EAAS3B,OAAQ2B,EAAUtH,GAG5E,SAAS6tB,GAAmBnzB,EAAMsF,EAAMmM,EAAQ7E,GAC5C,IAAK,IAAIvO,EAAI,EAAGA,EAAIoT,EAAOnT,OAAQD,IAAK,CACpC,MAAMm1B,EAAgB/hB,EAAOpT,GAAGoT,OAC5B+hB,GACAL,GAAmBnzB,EAAMsF,EAAMkuB,EAAe5mB,GAElD,MAAMhL,EAAK6P,EAAOpT,GAAG2B,GACjB4B,GACAmL,GAA2BnL,EAAGsN,KAAKtC,EAAS3B,OAAQ2B,EAAUtH,IAI1E,SAASktB,GAAY5lB,EAAU6E,EAAQuf,EAAcC,EAAeC,GAChE,IAAK,IAAI7yB,EAAI,EAAGA,EAAIoT,EAAOnT,OAAQD,IAC/B0yB,GAAankB,EAAU6E,EAAOpT,GAAI2yB,EAAcC,EAAeC,GAAiB,GAGxF,SAAS0B,GAAYhmB,EAAU+lB,EAAQna,GAKnC,MAAMlG,EAAOqgB,EAAO7xB,KAAK0X,EAAYA,GAMhC,EAASlG,KAGL1F,EAAS0F,OAAS,EACvB1F,EAAS0F,KAAOlL,GAASkL,GAIzB,EAAO1F,EAAS0F,KAAMA,IAG9B,SAASugB,GAAc/uB,EAAK0O,EAAKgG,EAAYjZ,GACzC,MAAMiN,EAASjN,EAAI2E,SAAS,KAmChC,SAA0BsO,EAAKihB,GAC3B,MAAMC,EAAWD,EAAKr1B,MAAM,KAC5B,MAAO,KACH,IAAI+O,EAAMqF,EACV,IAAK,IAAInU,EAAI,EAAGA,EAAIq1B,EAASp1B,QAAU6O,EAAK9O,IACxC8O,EAAMA,EAAIumB,EAASr1B,IAEvB,OAAO8O,GAzCLwmB,CAAiBnb,EAAYjZ,GAC7B,IAAMiZ,EAAWjZ,GACvB,GAAIF,EAASyE,GAAM,CACf,MAAMgN,EAAU0B,EAAI1O,GAChB,EAAWgN,IACXuG,GAAM7K,EAAQsE,QAMjB,GAAI,EAAWhN,GAChBuT,GAAM7K,EAAQ1I,EAAIoL,KAAKsJ,SAEtB,GAAI,EAAS1U,GACd,GAAI,EAAQA,GACRA,EAAIlE,SAAQyL,GAAKwnB,GAAcxnB,EAAGmH,EAAKgG,EAAYjZ,SAElD,CACD,MAAMuR,EAAU,EAAWhN,EAAIgN,SACzBhN,EAAIgN,QAAQ5B,KAAKsJ,GACjBhG,EAAI1O,EAAIgN,SACV,EAAWA,IACXuG,GAAM7K,EAAQsE,EAAShN,IAkCvC,SAAS8vB,GAAaC,EAAIpB,EAAM7lB,GAC5B,MAAMknB,EAASlnB,EAASc,WAAWC,OAAOiR,uBACpC,OAAEnN,EAAQC,QAASyf,GAAmBsB,EAC5CtB,GAAkByC,GAAaC,EAAI1C,EAAgBvkB,GACnD6E,GACIA,EAAO7R,SAAS6nB,GAAMmM,GAAaC,EAAIpM,EAAG7a,KAC9C,IAAK,MAAMrN,KAAOkzB,EACVqB,GAAU,EAAOA,EAAQv0B,GACzBs0B,EAAGt0B,GAAOu0B,EAAOv0B,GAAKs0B,EAAGt0B,GAAMkzB,EAAKlzB,GAAMqN,EAAS3B,MAAO1L,GAG1Ds0B,EAAGt0B,GAAOkzB,EAAKlzB,GAU3B,MAAMw0B,GAAqB11B,GAAMA,IAAMA,EAAE4M,MAAQ5M,EAAE4M,MAAQ8oB,GAAkB11B,EAAE+O,SACzE4mB,GAAsB,EAAO/1B,OAAOC,OAAO,MAAO,CACpD+1B,EAAG51B,GAAKA,EACR61B,IAAK71B,GAAKA,EAAE6O,MAAMzM,GAClB0zB,MAAO91B,GAAKA,EAAEiU,KACd8hB,OAAQ/1B,GAA2EA,EAAEoS,MACrF4jB,OAAQh2B,GAA2EA,EAAE8T,MACrFmiB,OAAQj2B,GAA2EA,EAAE6T,MACrFqiB,MAAOl2B,GAA0EA,EAAE4iB,KACnFuT,QAASn2B,GAAK01B,GAAkB11B,EAAE+O,QAClCqnB,MAAOp2B,GAAKA,EAAEyU,MAAQzU,EAAEyU,KAAK7H,MAC7BypB,MAAOr2B,GAAKA,EAAEiS,KACdqkB,SAAUt2B,GA9Cd,SAA8BuO,GAC1B,MAAM9I,EAAM8I,EAAStH,MACf,SAAEsvB,EAAQ,OAAEnjB,EAAQC,QAASyf,GAAmBrtB,EACtD,GAAI8wB,EACA,OAAOA,EACX,MAAMtC,EAAe1lB,EAASc,WAAW+D,OACzC,IAAK6gB,EAAah0B,SAAWmT,IAAW0f,EACpC,OAAOrtB,EACX,MAAMH,EAAU,GAGhB,OAFA2uB,EAAa1yB,SAAQ6nB,GAAKmM,GAAajwB,EAAS8jB,EAAG7a,KACnDgnB,GAAajwB,EAASG,EAAK8I,GACnB9I,EAAI8wB,SAAWjxB,EAmCekxB,CAAqBx2B,GAC3Dy2B,aAAcz2B,GAAK,IAAM8Q,GAAS9Q,EAAE0c,QACpCga,UAAW12B,GAAK2Q,GAASE,KAAK7Q,EAAE4M,OAChC+pB,OAAQ32B,GAA4Bka,GAAcrJ,KAAK7Q,KAErDmqB,GAA8B,CAChC,KAAMvmB,EAAG2K,GAAYrN,GACjB,MAAM,IAAEiT,EAAG,WAAED,EAAU,KAAED,EAAI,MAAE7B,EAAK,YAAEwW,EAAW,KAAE3hB,EAAI,WAAEoI,GAAed,EAExE,GAAY,aAARrN,EACA,OAAO,EAYX,IAAI01B,EACJ,GAAe,MAAX11B,EAAI,GAAY,CAChB,MAAMyD,EAAIikB,EAAY1nB,GACtB,QAAU0E,IAANjB,EACA,OAAQA,GACJ,KAAK,EACD,OAAOuP,EAAWhT,GACtB,KAAK,EACD,OAAO+S,EAAK/S,GAChB,KAAK,EACD,OAAOiT,EAAIjT,GACf,KAAK,EACD,OAAOkR,EAAMlR,OAIpB,IAAIgT,IAAe,GAAa,EAAOA,EAAYhT,GAEpD,OADA0nB,EAAY1nB,GAAO,EACZgT,EAAWhT,GAEjB,GAAI+S,IAAS,GAAa,EAAOA,EAAM/S,GAExC,OADA0nB,EAAY1nB,GAAO,EACZ+S,EAAK/S,GAEX,IAGJ01B,EAAkBroB,EAASqF,aAAa,KACrC,EAAOgjB,EAAiB11B,GAExB,OADA0nB,EAAY1nB,GAAO,EACZkR,EAAMlR,GAEZ,GAAIiT,IAAQ,GAAa,EAAOA,EAAKjT,GAEtC,OADA0nB,EAAY1nB,GAAO,EACZiT,EAAIjT,GAEmBuxB,KAC9B7J,EAAY1nB,GAAO,IAG3B,MAAM21B,EAAelB,GAAoBz0B,GACzC,IAAI41B,EAAWxW,EAEf,OAAIuW,GACY,WAAR31B,GACA6F,GAAMwH,EAAU,EAAiBrN,GAG9B21B,EAAatoB,KAIvBuoB,EAAY7vB,EAAK8vB,gBACbD,EAAYA,EAAU51B,IAChB41B,EAEF3iB,IAAQ,GAAa,EAAOA,EAAKjT,IAEtC0nB,EAAY1nB,GAAO,EACZiT,EAAIjT,KAIbof,EAAmBjR,EAAWC,OAAOgR,iBACnC,EAAOA,EAAkBpf,GAClBof,EAAiBpf,QAJvB,IAwBT,KAAM0C,EAAG2K,GAAYrN,EAAKN,GACtB,MAAM,KAAEqT,EAAI,WAAEC,EAAU,IAAEC,GAAQ5F,EAClC,GAAI2F,IAAe,GAAa,EAAOA,EAAYhT,GAC/CgT,EAAWhT,GAAON,OAEjB,GAAIqT,IAAS,GAAa,EAAOA,EAAM/S,GACxC+S,EAAK/S,GAAON,OAEX,GAAIM,KAAOqN,EAAS6D,MAGrB,OAAO,EAEX,QAAe,MAAXlR,EAAI,IAAcA,EAAI+C,MAAM,KAAMsK,IAe9B4F,EAAIjT,GAAON,EAGZ,KAEX,KAAMgD,GAAG,KAAEqQ,EAAI,WAAEC,EAAU,YAAE0U,EAAW,IAAEzU,EAAG,WAAE9E,EAAU,aAAEuE,IAAkB1S,GACzE,IAAI01B,EACJ,YAA6BhxB,IAArBgjB,EAAY1nB,IACf+S,IAAS,GAAa,EAAOA,EAAM/S,IACnCgT,IAAe,GAAa,EAAOA,EAAYhT,KAC9C01B,EAAkBhjB,EAAa,KAAO,EAAOgjB,EAAiB11B,IAChE,EAAOiT,EAAKjT,IACZ,EAAOy0B,GAAqBz0B,IAC5B,EAAOmO,EAAWC,OAAOgR,iBAAkBpf,KAUjD81B,GAA6C,EAAO,GAAI7M,GAA6B,CACvF,IAAInjB,EAAQ9F,GAER,GAAIA,IAAQiE,OAAO8xB,YAGnB,OAAO9M,GAA4BhjB,IAAIH,EAAQ9F,EAAK8F,IAExDQ,IAAG,CAAC5D,EAAG1C,IACoB,MAAXA,EAAI,KAAeT,EAAsBS,KAyEvDwnB,GAAkBxI,KACxB,IAAIyI,GAAQ,EA8ER5Q,GAAkB,KACtB,MAAM,GAAqB,IAAMA,IAAmBxE,GAC9CqD,GAAsBrI,IACxBwJ,GAAkBxJ,GAStB,IAAIiK,IAAwB,EAuE5B,SAASgS,GAAkBjc,EAAU+b,EAAaR,GAC1C,EAAWQ,GAGP/b,EAASwF,OAASuW,EAGjB,EAASA,KAUd/b,EAAS2F,WAAarG,GAAUyc,IAQpCG,GAAqBlc,GAUzB,SAASkc,GAAqBlc,EAAUub,GACpC,MAAMpW,EAAYnF,EAAStH,KAEtBsH,EAASwF,SAcVxF,EAASwF,OAAUL,EAAUK,QAAU,EAInCxF,EAASwF,OAAOmjB,MAChB3oB,EAASoF,UAAY,IAAI9G,MAAM0B,EAAS4F,IAAK6iB,MAKjDjf,GAAkBxJ,EAClB1H,IACA6rB,GAAankB,EAAUmF,GACvBvN,IACA4R,GAAkB,KAqE1B,SAASkC,GAA0B5U,EAAQkJ,EAAWwJ,IAC9CxJ,IACCA,EAAS1G,UAAY0G,EAAS1G,QAAU,KAAK7B,KAAKX,GAmC3D,SAAS,GAAS8xB,GACd,MAAMtzB,ED/oLV,SAAkBszB,GACd,IAAIhpB,EACAipB,EAaJ,OAZI,EAAWD,IACXhpB,EAASgpB,EACTC,EAIM,IAGNjpB,EAASgpB,EAAgBhwB,IACzBiwB,EAASD,EAAgB/vB,KAEtB,IAAI8G,GAAgBC,EAAQipB,EAAQ,EAAWD,KAAqBA,EAAgB/vB,KCgoLjF4rB,CAAWmE,GAErB,OADAld,GAA0BpW,EAAEwB,QACrBxB,EAqQX,SAASwzB,GAAWpe,EAAQqe,GACxB,IAAIh2B,EACJ,GAAI,EAAQ2X,IAAWjY,EAASiY,GAAS,CACrC3X,EAAM,IAAIoB,MAAMuW,EAAOhZ,QACvB,IAAK,IAAID,EAAI,EAAGsJ,EAAI2P,EAAOhZ,OAAQD,EAAIsJ,EAAGtJ,IACtCsB,EAAItB,GAAKs3B,EAAWre,EAAOjZ,GAAIA,QAGlC,GAAsB,iBAAXiZ,EAAqB,CAKjC3X,EAAM,IAAIoB,MAAMuW,GAChB,IAAK,IAAIjZ,EAAI,EAAGA,EAAIiZ,EAAQjZ,IACxBsB,EAAItB,GAAKs3B,EAAWt3B,EAAI,EAAGA,QAG9B,GAAI,EAASiZ,GACd,GAAIA,EAAO9T,OAAOkG,UACd/J,EAAMoB,MAAM0xB,KAAKnb,EAAQqe,OAExB,CACD,MAAM3iB,EAAO/U,OAAO+U,KAAKsE,GACzB3X,EAAM,IAAIoB,MAAMiS,EAAK1U,QACrB,IAAK,IAAID,EAAI,EAAGsJ,EAAIqL,EAAK1U,OAAQD,EAAIsJ,EAAGtJ,IAAK,CACzC,MAAMkB,EAAMyT,EAAK3U,GACjBsB,EAAItB,GAAKs3B,EAAWre,EAAO/X,GAAMA,EAAKlB,SAK9CsB,EAAM,GAEV,OAAOA,EA9OW6D,OAAgE,IAuRtF,MAAMoc,GAAU,QCjyNVgW,GAAQ,6BACRC,GAA2B,oBAAbC,SAA2BA,SAAW,KAC1D,IAAIC,GACAC,GACJ,MAAMC,GAAU,CACZ5U,OAAQ,CAACnN,EAAO9G,EAAQgW,KACpBhW,EAAO8oB,aAAahiB,EAAOkP,GAAU,OAEzC7iB,OAAQ2T,IACJ,MAAM9G,EAAS8G,EAAMoO,WACjBlV,GACAA,EAAO+oB,YAAYjiB,IAG3B0N,cAAe,CAACwU,EAAK9S,EAAOmB,IAAOnB,EAC7BuS,GAAIQ,gBAAgBT,GAAOQ,GAC3BP,GAAIjU,cAAcwU,EAAK3R,EAAK,CAAEA,WAAOxgB,GAC3C6d,WAAYuO,GAAQwF,GAAIS,eAAejG,GACvCrO,cAAeqO,GAAQwF,GAAI7T,cAAcqO,GACzCnO,QAAS,CAACqU,EAAMlG,KACZkG,EAAKC,UAAYnG,GAErBjO,eAAgB,CAAC3hB,EAAI4vB,KACjB5vB,EAAGg2B,YAAcpG,GAErB/N,WAAYiU,GAAQA,EAAKjU,WACzBE,YAAa+T,GAAQA,EAAK/T,YAC1BkU,cAAeC,GAAYd,GAAIa,cAAcC,GAC7C,WAAWl2B,EAAIgE,GACXhE,EAAGm2B,aAAanyB,EAAI,KAExBme,UAAUniB,GACCA,EAAGmiB,WAAU,GAMxB,oBAAoB8M,EAAStiB,EAAQgW,EAAQE,GACzC,MAAMuT,EAAOvT,EACP0S,KACGA,GAAmBH,GAAIQ,gBAAgBT,GAAO,QACjDG,KAAkBA,GAAgBF,GAAIjU,cAAc,QAC1DiV,EAAKC,UAAYpH,EACjB,MAAMqH,EAAQF,EAAKG,WACnB,IAAIT,EAAOQ,EACP5xB,EAAOoxB,EACX,KAAOA,GACHpxB,EAAOoxB,EACPN,GAAQ5U,OAAOkV,EAAMnpB,EAAQgW,GAC7BmT,EAAOM,EAAKG,WAEhB,MAAO,CAACD,EAAO5xB,KAkDjB8xB,GAAc,iBACpB,SAASC,GAASvR,EAAO3lB,EAAMzB,GAC3B,GAAI,EAAQA,GACRA,EAAIqB,SAAQ0I,GAAK4uB,GAASvR,EAAO3lB,EAAMsI,UAGvC,GAAItI,EAAKK,WAAW,MAEhBslB,EAAMwR,YAAYn3B,EAAMzB,OAEvB,CACD,MAAM64B,EAalB,SAAoBzR,EAAO0R,GACvB,MAAMC,EAASC,GAAYF,GAC3B,GAAIC,EACA,OAAOA,EAEX,IAAIt3B,EAAO+B,EAASs1B,GACpB,GAAa,WAATr3B,GAAqBA,KAAQ2lB,EAC7B,OAAQ4R,GAAYF,GAAWr3B,EAEnCA,EAAO,EAAWA,GAClB,IAAK,IAAI3B,EAAI,EAAGA,EAAIm5B,GAASl5B,OAAQD,IAAK,CACtC,MAAM+4B,EAAWI,GAASn5B,GAAK2B,EAC/B,GAAIo3B,KAAYzR,EACZ,OAAQ4R,GAAYF,GAAWD,EAGvC,OAAOC,EA7BkBI,CAAW9R,EAAO3lB,GAC/Bi3B,GAAY92B,KAAK5B,GAEjBonB,EAAMwR,YAAY,EAAUC,GAAW74B,EAAIyD,QAAQi1B,GAAa,IAAK,aAGrEtR,EAAMyR,GAAY74B,GAKlC,MAAMi5B,GAAW,CAAC,SAAU,MAAO,MAC7BD,GAAc,GAoBdG,GAAU,+BAgFhB,IAAIC,GAAUC,KAAKC,IAKK,oBAAb/B,UACP6B,KAAY7B,SAASgC,YAAY,SAASC,YAI1CJ,GAAU,IAAMjZ,YAAYmZ,OAIhC,IAAIG,GAAY,EAChB,MAAM/oB,GAAIL,QAAQC,UACZ,GAAQ,KACVmpB,GAAY,GAGhB,SAASC,GAAiBx3B,EAAI8P,EAAOO,EAASnN,GAC1ClD,EAAGw3B,iBAAiB1nB,EAAOO,EAASnN,GA2BxC,MAAMu0B,GAAoB,4BA4CpBC,GAAa,WA2IbC,GAAa,aACbC,GAAY,YAGZC,GAAa,CAAC7nB,GAASyB,WDmiM7B,SAAW5M,EAAMizB,EAAiBvkB,GAC9B,MAAMrM,EAAIkpB,UAAUvyB,OACpB,OAAU,IAANqJ,EACI,EAAS4wB,KAAqB,EAAQA,GAElCpkB,GAAQokB,GACDhlB,GAAYjO,EAAM,KAAM,CAACizB,IAG7BhlB,GAAYjO,EAAMizB,GAIlBhlB,GAAYjO,EAAM,KAAMizB,IAI/B5wB,EAAI,EACJqM,EAAWjT,MAAMH,UAAU0B,MAAMxB,KAAK+vB,UAAW,GAEtC,IAANlpB,GAAWwM,GAAQH,KACxBA,EAAW,CAACA,IAETT,GAAYjO,EAAMizB,EAAiBvkB,IC1jMTwkB,CAAE9f,GAqB3C,SAAgClE,GAC5B,IAAI,KAAExU,EAAO,IAAG,KAAEsF,EAAI,IAAEmzB,GAAM,EAAI,SAAEC,EAAQ,eAAEC,EAAiB,GAAG34B,eAAiB,iBAAE44B,EAAmB,GAAG54B,iBAAmB,aAAE64B,EAAe,GAAG74B,aAAe,gBAAE84B,EAAkBH,EAAc,kBAAEI,EAAoBH,EAAgB,cAAEI,EAAgBH,EAAY,eAAEI,EAAiB,GAAGj5B,eAAiB,iBAAEk5B,EAAmB,GAAGl5B,iBAAmB,aAAEm5B,EAAe,GAAGn5B,cAAoBwU,EACjY,MAAM4kB,EAAY,GAClB,IAAK,MAAM75B,KAAOiV,EACRjV,KAAO85B,KACTD,EAAU75B,GAAOiV,EAASjV,IAGlC,IAAKk5B,EACD,OAAOW,EAEX,MAAME,EA4EV,SAA2BZ,GACvB,GAAgB,MAAZA,EACA,OAAO,KAEN,GAAI,EAASA,GACd,MAAO,CAACa,GAASb,EAASzT,OAAQsU,GAASb,EAASlM,QAEnD,CACD,MAAMxpB,EAAIu2B,GAASb,GACnB,MAAO,CAAC11B,EAAGA,IArFGw2B,CAAkBd,GAC9Be,EAAgBH,GAAaA,EAAU,GACvCI,EAAgBJ,GAAaA,EAAU,IACvC,cAAExgB,EAAa,QAAEC,EAAO,iBAAEE,EAAgB,QAAEE,EAAO,iBAAEE,EAAgB,eAAEC,EAAiBR,EAAa,SAAES,EAAWR,EAAO,kBAAEU,EAAoBR,GAAqBmgB,EACpKO,EAAc,CAACl5B,EAAIm5B,EAAU/vB,KAC/BgwB,GAAsBp5B,EAAIm5B,EAAWZ,EAAgBH,GACrDgB,GAAsBp5B,EAAIm5B,EAAWb,EAAoBH,GACzD/uB,GAAQA,KAENiwB,EAAc,CAACr5B,EAAIoJ,KACrBgwB,GAAsBp5B,EAAI04B,GAC1BU,GAAsBp5B,EAAIy4B,GAC1BrvB,GAAQA,KAENkwB,EAAiBH,GACZ,CAACn5B,EAAIoJ,KACR,MAAMsM,EAAOyjB,EAAWrgB,EAAWR,EAC7BlK,EAAU,IAAM8qB,EAAYl5B,EAAIm5B,EAAU/vB,GAChDsM,GAAQA,EAAK1V,EAAIoO,GACjBmrB,IAAU,KACNH,GAAsBp5B,EAAIm5B,EAAWd,EAAkBH,GACvDsB,GAAmBx5B,EAAIm5B,EAAWZ,EAAgBH,GAC5C1iB,GAAQA,EAAK7X,OAAS,GACxB47B,GAAmBz5B,EAAI6E,EAAMm0B,EAAe5qB,OAK5D,OAAO,EAAOuqB,EAAW,CACrB,cAAc34B,GACVqY,GAAiBA,EAAcrY,GAC/Bw5B,GAAmBx5B,EAAIm4B,GACvBqB,GAAmBx5B,EAAIk4B,IAE3B,eAAel4B,GACX6Y,GAAkBA,EAAe7Y,GACjCw5B,GAAmBx5B,EAAIs4B,GACvBkB,GAAmBx5B,EAAIq4B,IAE3B/f,QAASghB,GAAc,GACvBxgB,SAAUwgB,GAAc,GACxB,QAAQt5B,EAAIoJ,GACR,MAAMgF,EAAU,IAAMirB,EAAYr5B,EAAIoJ,GACtCowB,GAAmBx5B,EAAIy4B,GACvBe,GAAmBx5B,EAAIw4B,GAMvB,MAAMkB,EAAmB15B,EAAGklB,MAAMyU,mBAClC35B,EAAGklB,MAAMyU,mBAAqB,OAC9BJ,IAAU,KACNv5B,EAAGklB,MAAMyU,mBAAqBD,EAC9BN,GAAsBp5B,EAAIw4B,GAC1BgB,GAAmBx5B,EAAI04B,GACjBhgB,GAAWA,EAAQ7a,OAAS,GAC9B47B,GAAmBz5B,EAAI6E,EAAMo0B,EAAe7qB,MAGpDsK,GAAWA,EAAQ1Y,EAAIoO,IAE3B,iBAAiBpO,GACbk5B,EAAYl5B,GAAI,GAChBwY,GAAoBA,EAAiBxY,IAEzC,kBAAkBA,GACdk5B,EAAYl5B,GAAI,GAChBgZ,GAAqBA,EAAkBhZ,IAE3C,iBAAiBA,GACbq5B,EAAYr5B,GACZ4Y,GAAoBA,EAAiB5Y,MAxGU45B,CAAuB5pB,GAAQyB,GAC1FomB,GAAWhK,YAAc,aACzB,MAAM+K,GAA+B,CACjCr5B,KAAM2V,OACNrQ,KAAMqQ,OACN8iB,IAAK,CACDnzB,KAAMgG,QACN0J,SAAS,GAEb0jB,SAAU,CAAC/iB,OAAQpO,OAAQtJ,QAC3B06B,eAAgBhjB,OAChBijB,iBAAkBjjB,OAClBkjB,aAAcljB,OACdmjB,gBAAiBnjB,OACjBojB,kBAAmBpjB,OACnBqjB,cAAerjB,OACfsjB,eAAgBtjB,OAChBujB,iBAAkBvjB,OAClBwjB,aAAcxjB,QAsGlB,SAAS4jB,GAASh7B,GAId,OAHYwE,EAASxE,GAezB,SAAS07B,GAAmBx5B,EAAI65B,GAC5BA,EAAIl8B,MAAM,OAAOwB,SAAQsC,GAAKA,GAAKzB,EAAG85B,UAAUz0B,IAAI5D,MACnDzB,EAAG+5B,OACC/5B,EAAG+5B,KAAO,IAAI50B,MAAQE,IAAIw0B,GAEnC,SAAST,GAAsBp5B,EAAI65B,GAC/BA,EAAIl8B,MAAM,OAAOwB,SAAQsC,GAAKA,GAAKzB,EAAG85B,UAAUh6B,OAAO2B,KACvD,MAAM,KAAEs4B,GAAS/5B,EACb+5B,IACAA,EAAKv1B,OAAOq1B,GACPE,EAAK1xB,OACNrI,EAAG+5B,UAAOv2B,IAItB,SAAS+1B,GAAUxqB,GACfirB,uBAAsB,KAClBA,sBAAsBjrB,MArIK8oB,GAAW7nB,MAAsB,EAAO,GAAIiI,GAAejI,MAAO4oB,IAwIrG,IAAIqB,GAAQ,EACZ,SAASR,GAAmBz5B,EAAIk6B,EAAcC,EAAiB/rB,GAC3D,MAAMpK,EAAMhE,EAAGo6B,SAAWH,GACpBI,EAAoB,KAClBr2B,IAAOhE,EAAGo6B,QACVhsB,KAGR,GAAI+rB,EACA,OAAOG,WAAWD,EAAmBF,GAEzC,MAAM,KAAEt1B,EAAI,QAAE01B,EAAO,UAAEC,GAsB3B,SAA2Bx6B,EAAIk6B,GAC3B,MAAMO,EAASr8B,OAAOs8B,iBAAiB16B,GAEjC26B,EAAsB77B,IAAS27B,EAAO37B,IAAQ,IAAInB,MAAM,MACxDi9B,EAAmBD,EAAmBhD,mBACtCkD,EAAsBF,EAAmBhD,sBACzCmD,EAAoBC,GAAWH,EAAkBC,GACjDG,EAAkBL,EAAmB/C,kBACrCqD,EAAqBN,EAAmB/C,qBACxCsD,EAAmBH,GAAWC,EAAiBC,GACrD,IAAIp2B,EAAO,KACP01B,EAAU,EACVC,EAAY,EAgChB,OA9BIN,IAAiBvC,GACbmD,EAAoB,IACpBj2B,EAAO8yB,GACP4C,EAAUO,EACVN,EAAYK,EAAoBh9B,QAG/Bq8B,IAAiBtC,GAClBsD,EAAmB,IACnBr2B,EAAO+yB,GACP2C,EAAUW,EACVV,EAAYS,EAAmBp9B,SAInC08B,EAAUjQ,KAAK6Q,IAAIL,EAAmBI,GACtCr2B,EACI01B,EAAU,EACJO,EAAoBI,EAChBvD,GACAC,GACJ,KACV4C,EAAY31B,EACNA,IAAS8yB,GACLkD,EAAoBh9B,OACpBo9B,EAAmBp9B,OACvB,GAIH,CACHgH,OACA01B,UACAC,YACAY,aANiBv2B,IAAS8yB,IAC1B,yBAAyBj4B,KAAK+6B,EAA8B,qBAjE3BY,CAAkBr7B,EAAIk6B,GAC3D,IAAKr1B,EACD,OAAOuJ,IAEX,MAAMktB,EAAWz2B,EAAO,MACxB,IAAI02B,EAAQ,EACZ,MAAM3O,EAAM,KACR5sB,EAAGw7B,oBAAoBF,EAAUG,GACjCpB,KAEEoB,EAASt9B,IACPA,EAAEyG,SAAW5E,KAAQu7B,GAASf,GAC9B5N,KAGR0N,YAAW,KACHiB,EAAQf,GACR5N,MAEL2N,EAAU,GACbv6B,EAAGw3B,iBAAiB8D,EAAUG,GAqDlC,SAASV,GAAWW,EAAQ7C,GACxB,KAAO6C,EAAO79B,OAASg7B,EAAUh7B,QAC7B69B,EAASA,EAAO9oB,OAAO8oB,GAE3B,OAAOpR,KAAK6Q,OAAOtC,EAAUt7B,KAAI,CAACo+B,EAAG/9B,IAAMg+B,GAAKD,GAAKC,GAAKF,EAAO99B,OAMrE,SAASg+B,GAAKtoB,GACV,OAAkD,IAA3CxM,OAAOwM,EAAEzR,MAAM,GAAI,GAAGN,QAAQ,IAAK,MAG1B,IAAIoB,QACD,IAAIA,QA4H3B,MAAMk5B,GAAoBpvB,IACtB,MAAMtL,EAAKsL,EAAMuD,MAAM,uBACvB,OAAO,EAAQ7O,GAAM3C,GAAS,EAAe2C,EAAI3C,GAAS2C,GAE9D,SAAS26B,GAAmB39B,GACxBA,EAAEyG,OAAOm3B,WAAY,EAEzB,SAASC,GAAiB79B,GACtB,MAAMyG,EAASzG,EAAEyG,OACbA,EAAOm3B,YACPn3B,EAAOm3B,WAAY,EAI3B,SAAiB/7B,EAAI6E,GACjB,MAAM1G,EAAIk3B,SAASgC,YAAY,cAC/Bl5B,EAAE89B,UALkB,SAKF,GAAM,GACxBj8B,EAAGk8B,cAAc/9B,GANb,CAAQyG,IAUhB,MAAMu3B,GAAa,CACf,QAAQn8B,GAAMud,WAAW,KAAElZ,EAAI,KAAEhF,EAAI,OAAE8Q,IAAY1D,GAC/CzM,EAAGo8B,QAAUP,GAAiBpvB,GAC9B,MAAM4vB,EAAelsB,GAAsB,WAAZnQ,EAAG6E,KAClC2yB,GAAiBx3B,EAAIqE,EAAO,SAAW,SAASlG,IAC5C,GAAIA,EAAEyG,OAAOm3B,UACT,OACJ,IAAIO,EAAWt8B,EAAGxB,MACda,EACAi9B,EAAWA,EAASj9B,OAEfg9B,IACLC,EAAWh6B,EAASg6B,IAExBt8B,EAAGo8B,QAAQE,MAEXj9B,GACAm4B,GAAiBx3B,EAAI,UAAU,KAC3BA,EAAGxB,MAAQwB,EAAGxB,MAAMa,UAGvBgF,IACDmzB,GAAiBx3B,EAAI,mBAAoB87B,IACzCtE,GAAiBx3B,EAAI,iBAAkBg8B,IAKvCxE,GAAiBx3B,EAAI,SAAUg8B,MAIvC,QAAQh8B,GAAI,MAAExB,IACVwB,EAAGxB,MAAiB,MAATA,EAAgB,GAAKA,GAEpC,aAAawB,GAAI,MAAExB,EAAO+e,WAAW,KAAEle,EAAI,OAAE8Q,IAAY1D,GAGrD,GAFAzM,EAAGo8B,QAAUP,GAAiBpvB,GAE1BzM,EAAG+7B,UACH,OACJ,GAAI1G,SAASkH,gBAAkBv8B,EAAI,CAC/B,GAAIX,GAAQW,EAAGxB,MAAMa,SAAWb,EAC5B,OAEJ,IAAK2R,GAAsB,WAAZnQ,EAAG6E,OAAsBvC,EAAStC,EAAGxB,SAAWA,EAC3D,OAGR,MAAM+G,EAAoB,MAAT/G,EAAgB,GAAKA,EAClCwB,EAAGxB,QAAU+G,IACbvF,EAAGxB,MAAQ+G,KAiRjBi3B,GAAkB,EAAO,CAAEzb,UAh2Bf,CAAC/gB,EAAIlB,EAAK29B,EAAWC,EAAW7Z,GAAQ,EAAO+F,EAAchG,EAAiBxC,EAAgB8D,KAC5G,OAAQplB,GAEJ,IAAK,SAxQb,SAAoBkB,EAAIxB,EAAOqkB,GAI3B,GAHa,MAATrkB,IACAA,EAAQ,IAERqkB,EACA7iB,EAAGm2B,aAAa,QAAS33B,OAExB,CAID,MAAMm+B,EAAoB38B,EAAG+5B,KACzB4C,IACAn+B,GAASA,EACH,CAACA,KAAUm+B,GACX,IAAIA,IAAoBC,KAAK,MAEvC58B,EAAG68B,UAAYr+B,GAwPXs+B,CAAW98B,EAAI08B,EAAW7Z,GAC1B,MACJ,IAAK,SAtPb,SAAoB7iB,EAAIqlB,EAAMhc,GAC1B,MAAM6b,EAAQllB,EAAGklB,MACjB,GAAK7b,EAGA,GAAIzK,EAASyK,GACVgc,IAAShc,IACT6b,EAAMjmB,QAAUoK,OAGnB,CACD,IAAK,MAAMvK,KAAOuK,EACdotB,GAASvR,EAAOpmB,EAAKuK,EAAKvK,IAE9B,GAAIumB,IAASzmB,EAASymB,GAClB,IAAK,MAAMvmB,KAAOumB,EACG,MAAbhc,EAAKvK,IACL23B,GAASvR,EAAOpmB,EAAK,SAdjCkB,EAAG+8B,gBAAgB,SAoPfC,CAAWh9B,EAAIy8B,EAAWC,GAC1B,MACJ,QACQ,EAAK59B,GAEAa,EAAgBb,IAhFrC,SAAoBkB,EAAI42B,EAAS6F,EAAWC,EAAWvwB,EAAW,MAE9D,MAAM8wB,EAAWj9B,EAAGk9B,OAASl9B,EAAGk9B,KAAO,IACjCC,EAAkBF,EAASrG,GACjC,GAAI8F,GAAaS,EAEbA,EAAgB3+B,MAAQk+B,MAEvB,CACD,MAAOn9B,EAAM2D,GAcrB,SAAmB3D,GACf,IAAI2D,EACJ,GAAIu0B,GAAkB/3B,KAAKH,GAAO,CAE9B,IAAIynB,EACJ,IAFA9jB,EAAU,GAEF8jB,EAAIznB,EAAK8V,MAAMoiB,KACnBl4B,EAAOA,EAAKsC,MAAM,EAAGtC,EAAK1B,OAASmpB,EAAE,GAAGnpB,QACxCqF,EAAQ8jB,EAAE,GAAGjpB,gBAAiB,EAGtC,MAAO,CAACwB,EAAKsC,MAAM,GAAG9D,cAAemF,GAxBTk6B,CAAUxG,GAC9B8F,EAGAlF,GAAiBx3B,EAAIT,EADJ09B,EAASrG,GAuBtC,SAAuByG,EAAclxB,GACjC,MAAMmxB,EAAWn/B,KAOKA,EAAEm5B,WAAaJ,OAChBoG,EAAQC,SAAW,GAChCjxB,GAOZ,SAAuCnO,EAAGK,GACtC,GAAI,EAAQA,GAAQ,CAChB,MAAMg/B,EAAer/B,EAAEs/B,yBAKvB,OAJAt/B,EAAEs/B,yBAA2B,KACzBD,EAAan9B,KAAKlC,GAClBA,EAAEu/B,UAAW,GAEVl/B,EAAMjB,KAAI4D,GAAOhD,IAAOA,EAAEu/B,UAAYv8B,EAAGhD,KAGhD,OAAOK,EAjBwBm/B,CAA8Bx/B,EAAGm/B,EAAQ9+B,OAAQ2N,EAAU,EAA8B,CAAChO,KAK7H,OAFAm/B,EAAQ9+B,MAAQ6+B,EAChBC,EAAQC,SAxDShG,KAAc/oB,GAAE5N,KAAK,IAAS22B,GAAYL,MAyDpDoG,EAtCsCM,CAAclB,EAAWvwB,GAC1BjJ,GAE/Bi6B,IAlBjB,SAA6Bn9B,EAAI8P,EAAOO,EAASnN,GAC7ClD,EAAGw7B,oBAAoB1rB,EAAOO,EAASnN,GAmB/Bs4B,CAAoBx7B,EAAIT,EAAM49B,EAAiBj6B,GAC/C+5B,EAASrG,QAAWpzB,IA+DZq6B,CAAW79B,EAAIlB,EAAK29B,EAAWC,EAAW9Z,GAsB9D,SAAyB5iB,EAAIlB,EAAKN,EAAOqkB,GACrC,OAAIA,EAGY,cAAR/jB,MAIAA,KAAOkB,GAAM03B,GAAWh4B,KAAKZ,IAAQ,EAAWN,IAW5C,eAARM,GAAgC,cAARA,KAKhB,SAARA,GAAmC,iBAAVN,MAIjB,SAARM,GAAiC,UAAfkB,EAAG89B,aAIrBpG,GAAWh4B,KAAKZ,KAAQF,EAASJ,KAG9BM,KAAOkB,KAtDG+9B,CAAgB/9B,EAAIlB,EAAK49B,EAAW7Z,GArKzD,SAAsB7iB,EAAIlB,EAAKN,EAI/BoqB,EAAchG,EAAiBxC,EAAgB8D,GAC3C,GAAY,cAARplB,GAA+B,gBAARA,EAKvB,OAJI8pB,GACA1E,EAAgB0E,EAAchG,EAAiBxC,QAEnDpgB,EAAGlB,GAAgB,MAATN,EAAgB,GAAKA,GAGnC,GAAY,UAARM,GAAkC,aAAfkB,EAAG89B,QAA1B,CAUA,GAAc,KAAVt/B,GAAyB,MAATA,EAAe,CAC/B,MAAMqG,SAAc7E,EAAGlB,GACvB,GAAc,KAAVN,GAAyB,YAATqG,EAGhB,YADA7E,EAAGlB,IAAO,GAGT,GAAa,MAATN,GAA0B,WAATqG,EAItB,OAFA7E,EAAGlB,GAAO,QACVkB,EAAG+8B,gBAAgBj+B,GAGlB,GAAa,WAAT+F,EAIL,OAFA7E,EAAGlB,GAAO,OACVkB,EAAG+8B,gBAAgBj+B,GAK3B,IACIkB,EAAGlB,GAAON,EAEd,MAAOL,SAlCP,CAGI6B,EAAGoL,OAAS5M,EACZ,MAAM+G,EAAoB,MAAT/G,EAAgB,GAAKA,EAClCwB,EAAGxB,QAAU+G,IACbvF,EAAGxB,MAAQ+G,IAoJPy4B,CAAah+B,EAAIlB,EAAK49B,EAAW9T,EAAchG,EAAiBxC,EAAgB8D,IAOpE,eAARplB,EACAkB,EAAGi+B,WAAavB,EAEH,gBAAR59B,IACLkB,EAAGk+B,YAAcxB,GAzMrC,SAAmB18B,EAAIlB,EAAKN,EAAOqkB,GAC/B,GAAIA,GAAS/jB,EAAIc,WAAW,UACX,MAATpB,EACAwB,EAAGm+B,kBAAkBlH,GAASn4B,EAAI+C,MAAM,EAAG/C,EAAIjB,SAG/CmC,EAAGo+B,eAAenH,GAASn4B,EAAKN,OAGnC,CAGD,MAAM6/B,EAAY//B,EAAqBQ,GAC1B,MAATN,GAAkB6/B,IAAuB,IAAV7/B,EAC/BwB,EAAG+8B,gBAAgBj+B,GAGnBkB,EAAGm2B,aAAar3B,EAAKu/B,EAAY,GAAK7/B,IA0LlC8/B,CAAUt+B,EAAIlB,EAAK49B,EAAW7Z,MAk0BF5B,eAj2BrB,CAACzf,EAAG1C,IAAgB,UAARA,GAi2B2B02B,IAG9D,IAAI/N,GCvpCJ,M,ICJOxC,MAAM,YCRb,GAAepF,GAAgB,CAC7B7P,MAAO,CACLuuB,SAAU,CACR15B,KAAMiC,OACN03B,UAAU,EACVC,UAAYF,GAAqBA,EAAW,GAAKz3B,OAAO43B,UAAUH,OCHxE,U,kCCJE,GAiCM,OAhCJtZ,MAAM,cACL0Z,SAAQ,OAAoB,EAAX,EAAAJ,YAA2B,EAAX,EAAAA,WACjCrZ,MAAK,C,MAAyB,EAAR,W,OAAoC,EAAR,a,SAKnD,GAwBE,WAvBmB5kB,MAAM,IAAIs+B,KAAK,IAAD,CAAzBp9B,EAAGq9B,K,KADb,GAwBE,WAtBC//B,IAAK+/B,EACLC,OAAM,aAAyB,YAAc,EAAG,MAAgB,KAAK,MAAM,EAAG,SAA8B,KAAK,MAAM,EAAG,GAAM,uBAAwC,YAAc,EAAG,MAAgB,KAAK,MAAM,EAAG,SAAoB,KAAK,MAAM,EAAG,GAAM,uBAAgC,YAAc,EAAG,MAAgB,KAAK,MAAM,EAAG,UAA+B,KAAK,MAAM,EAAG,MAAW,wBAAyC,YAAc,EAAG,MAAgB,KAAK,MAAM,EAAG,UAA+B,KAAK,MAAM,EAAG,MAAW,qBAoBvhB5Z,MAAA,kB,+CDzBN,Y,IENO6Z,QAAQ,YAAY9Z,MAAM,e,UAG3BA,MAAM,sB,GAEN,GAGE,QAFA0W,EAAE,wBACF1W,MAAM,0B,YAER,GAkBE,QAjBA0W,EAAE,8SAgBF1W,MAAM,0B,YAER,GAyBE,QAxBA0W,EAAE,ucAuBF1W,MAAM,0B,YAER,GAGE,QAFA0W,EAAE,gBACF1W,MAAM,0B,YAER,GAoBE,QAnBA0W,EAAE,0WAkBF1W,MAAM,0B,YAER,GAiBE,QAhBA0W,EAAE,gRAeF1W,MAAM,0B,mBAMRA,MAAM,sB,GAEN,GAGE,QAFAA,MAAM,yBACN0W,EAAE,yB,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,iB,YAEJ,GAkBE,QAjBA1W,MAAM,yBACN0W,EAAE,+S,YAiBJ,GAyBE,QAxBA1W,MAAM,yBACN0W,EAAE,wc,YAwBJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,mC,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,2C,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,mC,SCpKV,IACEqD,MAAO,CACLn6B,KAAMqQ,OACNspB,UAAU,EACVC,UAAUjgC,GACD,CACL,QACA,SACAiF,SAASjF,KCPjB,GAAeqhB,GAAgB,CAC7B7P,MAAOivB,KCAT,U,kCHJE,GAyKM,MAzKN,GAyKM,CAvKc,UAAV,EAAAD,O,KADR,GAgGI,IAhGJ,GAgGI,CA5FF,GAIA,GAmBA,GA0BA,GAIA,GAqBA,M,cAqBgB,UAAV,EAAAA,O,KADR,GAqEI,IArEJ,GAqEI,CAjEF,GAIA,GAIA,GAmBA,GA0BA,GAIA,GAIA,M,iBG9JN,Y,ICNOD,QAAQ,YAAY9Z,MAAM,e,UAG3BA,MAAM,wB,GAEN,GAMI,KANDA,MAAM,wBAAsB,CAC7B,GAAiC,UAAzBia,GAAG,IAAIC,GAAG,KAAKv0B,EAAE,SACzB,GAAiC,UAAzBs0B,GAAG,KAAKC,GAAG,IAAIv0B,EAAE,SACzB,GAAmC,UAA3Bs0B,GAAG,OAAOC,GAAG,IAAIv0B,EAAE,SAC3B,GAAiC,UAAzBs0B,GAAG,KAAKC,GAAG,IAAIv0B,EAAE,SACzB,GAAkC,UAA1Bs0B,GAAG,KAAKC,GAAG,KAAKv0B,EAAE,W,MAE5B,GAmBE,QAlBAqa,MAAM,0BACN0W,EAAE,2U,YAkBJ,GAoCE,QAnCA1W,MAAM,0BACN0W,EAAE,6pB,YAmCJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,mC,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,+B,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,2B,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,uC,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,uC,mBAMJ1W,MAAM,uB,GAEN,GAGE,QAFA0W,EAAE,+CACFyD,UAAU,oB,YAEZ,GAGE,QAFAzD,EAAE,+CACFyD,UAAU,wB,YAEZ,GAGE,QAFAzD,EAAE,+CACFyD,UAAU,oB,YAEZ,GAGE,QAFAzD,EAAE,+CACFyD,UAAU,qB,YAEZ,GAGE,QAFAzD,EAAE,+CACFyD,UAAU,oB,YAEZ,GAmBE,QAlBAna,MAAM,0BACN0W,EAAE,+T,YAkBJ,GAoCE,QAnCA1W,MAAM,0BACN0W,EAAE,6pB,YAmCJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,mC,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,uC,SC/KV,GAAe9b,GAAgB,CAC7B7P,MAAOivB,KCAT,U,kCFJE,GAqLM,MArLN,GAqLM,CAnLc,UAAV,EAAAD,O,KADR,GAwFI,IAxFJ,GAwFI,CApFF,GAOA,GAoBA,GAqCA,GAIA,GAIA,GAIA,GAIA,M,cAOgB,UAAV,EAAAA,O,KADR,GAyFI,IAzFJ,GAyFI,CArFF,GAIA,GAIA,GAIA,GAIA,GAIA,GAoBA,GAqCA,GAIA,M,iBE1KN,Y,ICLID,QAAQ,YACR9Z,MAAM,e,UAIJA,MAAM,sB,GAEN,GAGE,QAFAA,MAAM,yBACN0W,EAAE,2C,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,wD,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,6C,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,wD,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,oD,YAEJ,GAkBE,QAjBA1W,MAAM,yBACN0W,EAAE,yR,YAiBJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,iC,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,uB,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,uB,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,uB,YAEJ,GAGE,QAFA1W,MAAM,0BACN0W,EAAE,mB,mBAMJ1W,MAAM,sB,GAEN,GAGE,QAFAA,MAAM,yBACN0W,EAAE,2C,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,8C,YAEJ,GAiBE,QAhBA1W,MAAM,yBACN0W,EAAE,mQ,YAgBJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,mC,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,uC,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,2C,YAEJ,GAGE,QAFA1W,MAAM,yBACN0W,EAAE,mB,SC9GV,GAAe9b,GAAgB,CAC7B7P,MAAOivB,KCAT,U,kCFJE,GAoHM,MApHN,GAoHM,CA/Gc,UAAV,EAAAD,O,KADR,GA+DI,IA/DJ,GA+DI,CA3DF,GAIA,GAIA,GAIA,GAIA,GAIA,GAmBA,GAIA,GAIA,GAIA,GAIA,M,cAOgB,UAAV,EAAAA,O,KADR,GA8CI,IA9CJ,GA8CI,CA1CF,GAIA,GAIA,GAkBA,GAIA,GAIA,GAIA,M,iBEzGN,Y,ICNOD,QAAQ,YAAY9Z,MAAM,e,UAG3BA,MAAM,yB,GAEN,GA0DI,KA1DDA,MAAM,yBAAuB,CAC9B,GA2BG,QA3BG0W,EAAE,ykBA4BR,GAwBG,QAxBGA,EAAE,oeAyBR,GAGG,QAHGA,EAAE,6F,MAKV,GAaE,QAZA1W,MAAM,0BACN0W,EAAE,qM,mBAgBJ1W,MAAM,yB,GAEN,GA4DI,KA5DDA,MAAM,yBAAuB,CAC9B,GA6BE,QA5BA0W,EAAE,+nBA6BJ,GAwBG,QAxBGA,EAAE,khBAyBR,GAGG,QAHGA,EAAE,6F,MAKV,GAaE,QAZA1W,MAAM,0BACN0W,EAAE,qM,SChJV,GAAe9b,GAAgB,CAC7B7P,MAAOivB,KCAT,U,kCFJE,GAgKM,MAhKN,GAgKM,CA9Jc,UAAV,EAAAD,O,KADR,GA6EI,IA7EJ,GA6EI,CAzEF,GA2DA,M,cAiBgB,UAAV,EAAAA,O,KADR,GA+EI,IA/EJ,GA+EI,CA3EF,GA6DA,M,iBE3IN,Y,ICNOD,QAAQ,YAAY9Z,MAAM,e,UAG3BA,MAAM,wB,GAEN,GAaE,QAZAA,MAAM,2BACN0W,EAAE,uL,YAYJ,GAwCE,QAvCA1W,MAAM,2BACN0W,EAAE,+uB,YAuCJ,GAME,QALA1W,MAAM,2BACN0W,EAAE,oG,YAKJ,GAOE,QANA1W,MAAM,2BACN0W,EAAE,kGAIFyD,UAAU,6C,YAEZ,GAwBE,QAvBAna,MAAM,2BACN0W,EAAE,ge,mBA2BJ1W,MAAM,wB,GAEN,GAOE,QANAA,MAAM,2BACN0W,EAAE,gEACFzW,MAAA,mC,YAKF,GAuCE,QAtCAD,MAAM,2BACN0W,EAAE,muB,YAsCJ,GAGE,QAFA1W,MAAM,2BACN0W,EAAE,kE,YAEJ,GAIE,QAHA1W,MAAM,2BACN0W,EAAE,gEACFyD,UAAU,6C,SC9JlB,GAAevf,GAAgB,CAC7B7P,MAAOivB,KCAT,U,kCFJE,GAoKM,MApKN,GAoKM,CAlKc,UAAV,EAAAD,O,KADR,GAmGI,IAnGJ,GAmGI,CA/FF,GAcA,GAyCA,GAOA,GAQA,M,cA4BgB,UAAV,EAAAA,O,KADR,GA6DI,IA7DJ,GA6DI,CAzDF,GAQA,GAwCA,GAIA,M,iBExJN,Y,ICLID,QAAQ,YACR9Z,MAAM,eCCV,GAAepF,GAAgB,CAC7B7P,MAAOivB,KCAT,U,kCFJE,GA6CM,MA7CN,GA6CM,CAzCJ,GAwCE,QAvCCha,MAAK,C,mBAAqC,UAAL,Q,mBAAoD,UAAL,SAIrF0W,EAAE,6qB,WEHR,MCIA,GAAe9b,GAAgB,CAC7BvB,WAAY,CACV+gB,UAAS,GACTC,WAAU,GACVC,UAAS,GACTC,YAAW,GACXC,YAAW,GACXC,UDXJ,ICaE1vB,MAAO,OAAF,QACH2vB,UAAW,CACT96B,KAAMqQ,OACNspB,UAAU,EACRC,UAAYjgC,GACH,CACL,OACA,QACA,OACA,SACA,SACA,QACAiF,SAASjF,IAGjB+/B,SAAU,CACR15B,KAAMiC,OACN03B,UAAU,EACVC,UAAYjgC,GAAkBA,EAAQ,GAExCohC,OAAQ,CACN/6B,KAAMrH,OACNghC,UAAU,EACVC,UAAYmB,IACV,MAAMC,EAAgB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnCp8B,SAASm8B,EAAOE,MACZC,EAAgBH,EAAOI,MAAQ,GAChCJ,EAAOI,MAAO,GACdl5B,OAAO43B,UAAUkB,EAAOI,MAC7B,OAAOH,GAAiBE,KAGzBd,IAEL,MAAMjvB,GACJ,IAAIiwB,EAAsB,IACxB,IACEjwB,EAAM2vB,WACN3vB,EAAM2vB,UAAU/9B,OAAO,GAAGF,cACxBsO,EAAM2vB,UAAU99B,MAAM,GACtB,UAGN,MAAMq+B,EAAgBN,IAAwB,CAC5CO,EAAGP,EAAOE,KAAKM,WAAW,GAAK,IAAIA,WAAW,GAC9CC,EAAGT,EAAOI,KAAO,IAGnB,IAAIM,EAAkB,IACpB,IAAM,yBACFJ,EAAalwB,EAAM4vB,QAAQO,EAAInwB,EAAMuuB,UAAYvuB,EAAMuuB,SAAW,IAAM,kBACvE,EAAI2B,EAAalwB,EAAM4vB,QAAQS,GAAKrwB,EAAMuuB,UAAYvuB,EAAMuuB,SAAW,IAAM,8CAG9EvuB,EAAMuuB,SAAW,gBACjBvuB,EAAMuuB,SAAW,4BAKnBgC,EAAkB,IAAI,GAU1B,OARA3pB,IAAM,IAAM5G,EAAMuuB,WAAU,KAC1BgC,EAAgB/hC,OAAQ,EAExB87B,YAAW,KACTiG,EAAgB/hC,OAAQ,IACvB,OAGE,CACLyhC,sBACAK,kBACAC,sBCzFN,U,6BCHU,EAAmB,qB,KAD3B,I5Bu+J+BjlB,E4Br+JxB,EAAA2kB,oB5Bs+JDrhC,EAAS0c,GACFmS,GAAaF,GAAYjS,GAAW,IAAUA,EAI7CA,GAAaoS,I4B3+JD,C,MACvBxI,MAAK,C,UAAqB,mBAG1BD,MAAK,C,uBAAkC,mBAGvC+Z,MAAO,EAAAA,O,iD5B89JZ,IAAiC1jB,G2Bj+JjC,YELA,IAAYklB,GAUAC,IAVZ,SAAYD,GACV,cACA,gBACA,cACA,kBACA,kBACA,cACA,UAPF,CAAYA,QAAK,KAUjB,SAAYC,GACV,WACA,cACA,yBACA,0BACA,wBACA,0BACA,yBACA,4BARF,CAAYA,QAAU,KCFtB,MAaaC,GAAwB,KACnC,MAAMC,EAAUrgC,MAAM,GAAGs+B,KAAK,KAAKrhC,KACjC,CAACqjC,EAAc/B,IAAgB3pB,OAAO2rB,aAAaD,EAAKR,WAAW,GAAKvB,KACxEthC,KACCqjC,GAAiB,CAAEA,EAjByB,IAAItgC,MAAM,GAAGs+B,KAAK,SAoBjE,OAAmBphC,OAAOsjC,YAAYH,IAG3BI,GAAkBC,IAC7B,MAAMC,EAAqC,GAE3C3gC,MAAM,GAAGs+B,KAAK,GAAGz/B,SACf,CAAC6gC,EAAMnB,KACLoC,EAAUr9B,KAAK,CACbs9B,MAAOV,GAAMW,KACbvB,OAAQ,CACNE,KAAY5qB,OAAO2rB,aAAa,IAAIT,WAAW,GAAKvB,GACpDmB,QAEFhB,MAAO,aAIb1+B,MAAM,GAAGs+B,KAAK,GAAGz/B,SACf,CAAC6gC,EAAMnB,KACLoC,EAAUr9B,KAAK,CACbs9B,MAAOV,GAAMW,KACbvB,OAAQ,CACNE,KAAY5qB,OAAO2rB,aAAa,IAAIT,WAAW,GAAKvB,GACpDmB,QAEFhB,MAAO,aAIbiC,EAAU9hC,SAAQiiC,IAChBC,GAASL,EAAOI,EAAUF,MAAOE,EAAUxB,OAAQwB,EAAUpC,UAG/DqC,GAASL,EAAOR,GAAMc,KAAM,CAAExB,KAAM,IAAKE,KAAM,GAAK,SACpDqB,GAASL,EAAOR,GAAMc,KAAM,CAAExB,KAAM,IAAKE,KAAM,GAAK,SAEpDqB,GAASL,EAAOR,GAAMe,MAAO,CAAEzB,KAAM,IAAKE,KAAM,GAAK,SACrDqB,GAASL,EAAOR,GAAMe,MAAO,CAAEzB,KAAM,IAAKE,KAAM,GAAK,SAErDqB,GAASL,EAAOR,GAAMgB,OAAQ,CAAE1B,KAAM,IAAKE,KAAM,GAAK,SACtDqB,GAASL,EAAOR,GAAMgB,OAAQ,CAAE1B,KAAM,IAAKE,KAAM,GAAK,SACtDqB,GAASL,EAAOR,GAAMgB,OAAQ,CAAE1B,KAAM,IAAKE,KAAM,GAAK,SACtDqB,GAASL,EAAOR,GAAMgB,OAAQ,CAAE1B,KAAM,IAAKE,KAAM,GAAK,SAEtDqB,GAASL,EAAOR,GAAMiB,OAAQ,CAAE3B,KAAM,IAAKE,KAAM,GAAK,SACtDqB,GAASL,EAAOR,GAAMiB,OAAQ,CAAE3B,KAAM,IAAKE,KAAM,GAAK,SACtDqB,GAASL,EAAOR,GAAMiB,OAAQ,CAAE3B,KAAM,IAAKE,KAAM,GAAK,SACtDqB,GAASL,EAAOR,GAAMiB,OAAQ,CAAE3B,KAAM,IAAKE,KAAM,GAAK,SAEtDqB,GAASL,EAAOR,GAAMkB,KAAM,CAAE5B,KAAM,IAAKE,KAAM,GAAK,SACpDqB,GAASL,EAAOR,GAAMkB,KAAM,CAAE5B,KAAM,IAAKE,KAAM,GAAK,SACpDqB,GAASL,EAAOR,GAAMkB,KAAM,CAAE5B,KAAM,IAAKE,KAAM,GAAK,SACpDqB,GAASL,EAAOR,GAAMkB,KAAM,CAAE5B,KAAM,IAAKE,KAAM,GAAK,UAGzCqB,GAAW,CACtBL,EACAE,EACAtB,EACAZ,KAEAgC,EAAMpB,EAAOE,MAAMF,EAAOI,KAAO,GAAK,CAAEkB,QAAOtB,SAAQZ,QAAO2C,cAAe/B,IAGlEgC,GAAY,CAACZ,EAAmBhP,EAAmBoB,KAC9D,GAAmC,OAAhC4N,EAAM5N,EAAG0M,MAAM1M,EAAG4M,KAAO,GAC1B,MAAM,IAAI6B,MAAM,kCAAkCzO,EAAG0M,OAAO1M,EAAG4M,QAC1D,GAAuC,OAApCgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GACrC,MAAM,IAAI6B,MAAM,8BAA8B7P,EAAK8N,OAAO9N,EAAKgO,QAEjEgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GAAIJ,OAASxM,EAC1C4N,EAAM5N,EAAG0M,MAAM1M,EAAG4M,KAAO,GAAKgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GAC3DgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GAAK,MCnFpC,IDuGGQ,GAAMc,KACNd,GAAMe,MACNf,GAAMkB,KACNlB,GAAMgB,OACNhB,GAAMiB,OACNjB,GAAMW,KC5GMthB,GAAgB,CAC7BvB,WAAY,CACVwjB,WAAU,IAEZ9xB,MAAO,CACL+xB,MAAO,CACLl9B,KAAMvE,MACNk+B,UAAU,GAEZD,SAAU,CACR15B,KAAMiC,OACN03B,UAAU,EACVC,UAAYF,GAAqBA,EAAW,GAAKz3B,OAAO43B,UAAUH,KAGtE,MAAMvuB,GACJ,MAAMgyB,EAAkB,GAAItB,MAC5BK,GAA2BiB,EAAgBxjC,OAE3C,MAIMyjC,EAAsB,IAC1B,IAAMzkC,OAAO+O,OACCy1B,EAAgBxjC,OAC5B0jC,OAAOr8B,QAAOq7B,GAAmB,OAAVA,IAAgB1xB,MAAK,CAACC,EAAGC,KAChD,MAAMyyB,EAAO1yB,EAAEkyB,cAAc7B,KAAOrwB,EAAEkyB,cAAc3B,KAC9CoC,EAAO1yB,EAAEiyB,cAAc7B,KAAOpwB,EAAEiyB,cAAc3B,KACpD,OAAImC,EAAOC,GACD,EAEND,EAAOC,EACF,EAEF,OAIX,IAAIC,EAA8B,GA4ClC,O/BszDOvrB,I+Bh2DK,KACVkrB,EAAgBxjC,MAAQkiC,KACxBK,GAA2BiB,EAAgBxjC,OAC3C6jC,EAAgBljC,SAAQkR,GAAWiyB,aAAajyB,KAChDgyB,EAAkB,GAClBryB,EAAM+xB,MAAM5iC,SAAQ,CAAC0sB,EAAY0W,KAC/BF,EAAgBz+B,KAAK02B,YAAW,KAC9BjtB,QAAQm1B,IAAID,EAAS1W,GAClBA,EAAK4W,SAAWhC,GAAW5U,KAC5B+V,GAAsBI,EAAgBxjC,MAAOqtB,EAAKmG,KAAMnG,EAAKuH,IACrDvH,EAAK4W,SAAWhC,GAAWiC,QDmCnB,EAAC1B,EAAmBhP,EAAmBoB,KACjE,GAAmC,OAAhC4N,EAAM5N,EAAG0M,MAAM1M,EAAG4M,KAAO,GAC1B,MAAM,IAAI6B,MAAM,wCAAwCzO,EAAG0M,OAAO1M,EAAG4M,QAChE,GAAuC,OAApCgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GACrC,MAAM,IAAI6B,MAAM,kCAAkC7P,EAAK8N,OAAO9N,EAAKgO,QAErEgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GAAIJ,OAASxM,EAC1C4N,EAAM5N,EAAG0M,MAAM1M,EAAG4M,KAAO,GAAKgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GAC3DgB,EAAMhP,EAAK8N,MAAM9N,EAAKgO,KAAO,GAAK,MC1CxB2C,CAAyBX,EAAgBxjC,MAAOqtB,EAAKmG,KAAMnG,EAAKuH,IACxDvH,EAAK4W,SAAWhC,GAAWmC,mBAE3B/W,EAAK4W,SAAWhC,GAAWoC,mBAChCN,EAAQ,GAAM,GACfX,GACcI,EAAgBxjC,MAC5B,CAAEshC,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,IAErB4B,GACcI,EAAgBxjC,MAC5B,CAAEshC,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,MAGrB4B,GACcI,EAAgBxjC,MAC5B,CAAEshC,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,IAErB4B,GACcI,EAAgBxjC,MAC5B,CAAEshC,KAAM,IAAKE,KAAM,GACnB,CAAEF,KAAM,IAAKE,KAAM,QAIxB,MAAOuC,EAAU,U/ByzDD,U+Bh2DvB,GA0CO,CACLN,2BCrGN,U,qDCFE,GAQE,WAPgB,EAAAA,qBAATf,I,KADT,GAQE,GANCpiC,IAAKoiC,EAAMS,cAAc7B,KAAOoB,EAAMS,cAAc3B,KACpD8C,YAAW5B,EAAMS,cAAc7B,KAAOoB,EAAMS,cAAc3B,KAC1DzB,SAAU,EAAAA,SACVoB,UAAWuB,EAAMA,MACjBtB,OAAQsB,EAAMtB,OACdZ,MAAOkC,EAAMlC,O,uEDHlB,YEFM+D,GAAc,CAClB,EAAKvC,GAAMc,KACX,EAAKd,GAAMe,MACX,EAAKf,GAAMkB,KACX,EAAKlB,GAAMiB,OACX,EAAKjB,GAAMgB,OACX,EAAKhB,GAAMW,MAGP6B,GAAc,CAClB,EAAKvC,GAAWiC,QAChB,IAAKjC,GAAW5U,MCPlB,GAAehM,GAAgB,CAC7BvB,WAAY,CACV2kB,WAAU,GACVC,WAAU,IAEZ,QACE,IAAI3E,EAAW,GAAI,IACf4E,EAAc,GAChB,+1BAkDEC,EAAe,GAAS,CAC1B,IAAI5kC,GACF+/B,EAAS//B,MAAQyC,SAASzC,IAE5BuG,IAAK,IAAMw5B,EAAS//B,QAEtB,MAAM6kC,EAAa,GAAiB,IAQpC,MAAO,CACLD,eACA7E,WACA4E,cACAG,cAVoB,KDkBO,IAACzsB,ECjB5BwsB,EAAW7kC,MDhDU,CAACqY,IAC1B,MAAMkrB,EAAqB,GA6D3B,OA5DAlrB,EAAO1X,SAAQokC,IACb,GAAkB,QAAfA,EACDxB,EAAMn+B,KAAK,CACTs9B,MAAOV,GAAMgD,GACbf,OAAQhC,GAAWoC,iBACnB7Q,KAAM,CAAE8N,KAAM,IAAKE,KAAM,GACzB5M,GAAI,CAAE0M,KAAM,IAAKE,KAAM,UAEpB,GAAkB,UAAfuD,EACRxB,EAAMn+B,KAAK,CACTs9B,MAAOV,GAAMgD,GACbf,OAAQhC,GAAWmC,kBACnB5Q,KAAM,CAAE8N,KAAM,IAAKE,KAAM,GACzB5M,GAAI,CAAE0M,KAAM,IAAKE,KAAM,UAEpB,GAAG,oCAAoCtgC,KAAK6jC,GAAa,CAC9D,MAAME,EAAY,gDAAgDC,KAAKH,GACtD,OAAdE,EACD1B,EAAMn+B,KAAK,CACTs9B,MAAO6B,GAAYU,EAAU,IAC7BhB,OAAQO,GAAYS,EAAU,IAC9BzR,KAAM,CACJ8N,KAAY2D,EAAU,GACtBzD,KAAY/+B,SAASwiC,EAAU,KAEjCrQ,GAAI,CACF0M,KAAY2D,EAAU,GACtBzD,KAAY/+B,SAASwiC,EAAU,OAInCp2B,QAAQC,MAAM,wBAAwBi2B,UAEnC,GAAG,wBAAwB7jC,KAAK6jC,GAAa,CAClD,MAAME,EAAY,4BAA4BC,KAAKH,GACnD,GAAiB,OAAdE,EAAoB,CACrB,IAAIE,EAAiB,EACS,IAA3B1iC,SAASwiC,EAAU,MACpBE,EAAW,GAEb5B,EAAMn+B,KAAK,CACTs9B,MAAO6B,GAAYU,EAAU,IAC7BhB,OAAQhC,GAAWgD,EAAU,IAC7BzR,KAAM,CACJ8N,KAAY2D,EAAU,GACtBzD,KAAM2D,GAERvQ,GAAI,CACF0M,KAAY2D,EAAU,GACtBzD,KAAY/+B,SAASwiC,EAAU,YAInCp2B,QAAQC,MAAM,wBAAwBi2B,UAGxCl2B,QAAQC,MAAM,oBAAoBi2B,QAI/BxB,GCdgB6B,EDiBS/sB,EChBRssB,EAAY3kC,MDiBpC6O,QAAQm1B,IAAI,sBAAuB3rB,GAClBA,EACdgtB,WAAW,KAAM,KACjBA,WAAW,IAAK,KAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,KAChBA,WAAW,IAAK,KAChBA,WAAW,MAAO,OAClBA,WAAW,QAAS,SACpBA,WAAW,IAAK,KAChBA,WAAW,IAAK,KAChBA,WAAW,MAAO,MAClBA,WAAW,MAAO,MAClBA,WAAW,MAAO,MAClBA,WAAW,MAAO,MAClBA,WAAW,KAAM,MACjBA,WAAW,KAAM,MACjBA,WAAW,KAAM,MACjBA,WAAW,KAAM,MACjBA,WAAW,UAAW,IACtBA,WAAW,WAAY,IACvBA,WAAW,KAAM,KACjBA,WAAW,KAAM,KAEGlmC,MAAM,KAAKJ,KAAIsuB,IACpC,IAAI9kB,EAAS8kB,EAIb,MAHG,SAASnsB,KAAKmsB,KACf9kB,EAAS,IAAMA,GAEVA,QCvCLs8B,iBC/EN,U,0FjCJE,GASM,OARJpe,MAAM,sBACLC,MAAK,C,MAA4B,EAAR,W,YAA2C,EAAR,W,QAK7D,GAAmC,GAAtBqZ,SAAU,EAAAA,UAAQ,qBAC/B,GAAuD,GAA1CwD,MAAO,EAAAsB,WAAa9E,SAAU,EAAAA,U,iCAE7C,GAWM,MAXN,GAWM,C,GAVJ,GAAiF,SAA1EpD,IAAI,KAAK5Q,IAAI,KAAKtF,MAAM,aAAapgB,KAAK,S,qCAAkB,EAAAu+B,aAAY,I,eAAZ,EAAAA,gB,GACnE,GAKE,YAJAne,MAAM,oB,qCACG,EAAAke,YAAW,GACpBW,KAAK,KACLC,KAAK,M,eAFI,EAAAZ,eAIX,GAES,UAFDle,MAAM,eAAgB,QAAK,oBAAE,EAAAqe,eAAA,EAAAA,iBAAA,KAAe,gB,KFsqCtC,KAAKr8B,KACnB,MAAM8W,GAjBC0J,KAAaA,GDq6Eb/G,GCr6EuC8b,MAiBjBrP,aAAalmB,IAIpC,MAAE+8B,GAAUjmB,EAgBlB,OAfAA,EAAIimB,MAASC,IACT,MAAMvhB,EAsCd,SAA4BA,GACxB,OAAI9jB,EAAS8jB,GACG2S,SAASY,cAAcvT,GAMhCA,EA9CewhB,CAAmBD,GACrC,IAAKvhB,EACD,OACJ,MAAMpH,EAAYyC,EAAIgB,WACjB,EAAWzD,IAAeA,EAAU3J,QAAW2J,EAAU6oB,WAC1D7oB,EAAU6oB,SAAWzhB,EAAU2T,WAGnC3T,EAAU2T,UAAY,GACtB,MAAM7rB,EAAQw5B,EAAMthB,GAGpB,OAFAA,EAAUqa,gBAAgB,WAC1Bra,EAAUyT,aAAa,aAAc,IAC9B3rB,GAEJuT,GoC3sCXoP,CDIA,ICJe6W,MAAM,S","file":"main.js","sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `depdendency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') && result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => i && (i.proxy ? i.proxy : getPublicInstance(i.parent));\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.4\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // ref #2531, #2593\r\n            // disabling the transition before nextFrame ensures styles from\r\n            // *-leave-from and *-enter-from classes are applied instantly before\r\n            // the transition starts. This is applied for enter transition as well\r\n            // so that it accounts for `visibility: hidden` cases.\r\n            const cachedTransition = el.style.transitionProperty;\r\n            el.style.transitionProperty = 'none';\r\n            nextFrame(() => {\r\n                el.style.transitionProperty = cachedTransition;\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (transition && value !== oldValue) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","import { setDevtoolsHook, initCustomFormatter, warn } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { getGlobalThis } from '@vue/shared';\n\nfunction initDev() {\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry exports the runtime only, and is built as\r\n(process.env.NODE_ENV !== 'production') && initDev();\r\nconst compile = () => {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Runtime compilation is not supported in this build of Vue.` +\r\n            ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                ) /* should not happen */);\r\n    }\r\n};\n\nexport { compile };\n","<template>\n  <div\n    class=\"chess-board-wrapper\"\n    :style=\"{\n      width: `${cellSize * 8}px`,\n      height: `${cellSize * 8}px`,\n    }\"\n  >\n    <ChessBoard :cellSize=\"cellSize\" />\n    <GamePlayer :moves=\"movesState\" :cellSize=\"cellSize\" />\n  </div>\n  <div class=\"controls\">\n    <input max=\"85\" min=\"55\" class=\"board-size\" type=\"number\" v-model=\"cellSizeText\">\n    <textarea\n      class=\"notation-textarea\"\n      v-model=\"algNotation\"\n      rows=\"25\"\n      cols=\"25\"\n    />\n    <button class=\"parse-button\" @click=\"parseNotation\">\n      Execute\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport ChessBoard from './ChessBoard.vue'\nimport GamePlayer from './GamePlayer.vue'\nimport { tokenizator, normalizeNotation } from './chessNotationParser'\nimport { Move } from './chessRules'\n\nexport default defineComponent({\n  components: {\n    ChessBoard,\n    GamePlayer,\n  },\n  setup() {\n    let cellSize = ref(75)\n    let algNotation = ref(\n      '1.e2-e4 e7-e5\\n' +\n      '2.Кg1-f3 Кb8-c6\\n' +\n      '3.d2-d4 e5xd4\\n' +\n      '4.Сf1-c4 d7-d6\\n' +\n      '5.Кf3xd4 Сf8-e7\\n' +\n      '6.0-0 Кg8-f6\\n' +\n      '7.Кb1-c3 0-0\\n' +\n      '8.h2-h3 Кc6xd4\\n' +\n      '9.Фd1xd4 Кf6-d7\\n' +\n      '10.Кc3-d5 Сe7-f6\\n' +\n      '11.Кd5xf6+ Фd8xf6\\n' +\n      '12.Сc1-e3 Лf8-e8\\n' +\n      '13.f2-f3 Фf6-g6\\n' +\n      '14.Крg1-h1 Кd7-f6\\n' +\n      '15.g2-g4 h7-h5\\n' +\n      '16.Сc4-d3 h5xg4\\n' +\n      '17.h3xg4 Сc8xg4\\n' +\n      '18.f3xg4 Кf6xg4\\n' +\n      '19.Сe3-f4 Лe8-e6\\n' +\n      '20.Лf1-f3 Лa8-e8\\n' +\n      '21.Лf3-h3 c7-c5\\n' +\n      '22.Фd4-g1 c5-c4\\n' +\n      '23.Лh3-h4 c4xd3\\n' +\n      '24.c2xd3 Кg4-h6\\n' +\n      '25.Сf4xh6 Фg6xh6\\n' +\n      '26.Фg1-h2 Фh6xh4\\n' +\n      '27.Фh2xh4 Лe6-h6\\n' +\n      '28.Фh4xh6 g7xh6\\n' +\n      '29.Лa1-c1 Лe8-e5\\n' +\n      '30.Лc1-c7 Лe5-b5\\n' +\n      '31.b2-b3 Лb5-a5\\n' +\n      '32.Лc7xb7 Лa5xa2\\n' +\n      '33.Лb7-d7 Лa2-a6\\n' +\n      '34.Крh1-g2 Крg8-g7\\n' +\n      '35.Крg2-f3 Крg7-f6\\n' +\n      '36.Крf3-e3 Крf6-e6\\n' +\n      '37.Лd7-c7 f7-f5\\n' +\n      '38.Лc7-h7 f5xe4\\n' +\n      '39.Крe3xe4 Лa6-b6\\n' +\n      '40.Лh7xh6+ Крe6-d7\\n' +\n      '41.Крe4-d5 Лb6-b5+\\n' +\n      '42.Крd5-c4 Лb5-c5+\\n' +\n      '43.Крc4-d4 Лc5-b5\\n' +\n      '44.Лh6-h7+ Крd7-c6\\n' +\n      '45.Лh7xa7 Лb5xb3\\n' +\n      '46.Крd4-c4 Лb3-b1\\n' +\n      '47.Лa7-a6+ Крc6-d7\\n' +\n      '48.d3-d4 Крd7-e6\\n' +\n      '49.Лa6-a3'\n    )\n    let cellSizeText = computed({\n      set(value: any) {\n        cellSize.value = parseInt(value)\n      },\n      get: () => cellSize.value\n    })\n    const movesState = ref<Array<Move>>([])\n\n    const parseNotation = () => {\n      movesState.value = tokenizator(\n        normalizeNotation(algNotation.value)\n      )\n    }\n\n    return {\n      cellSizeText,\n      cellSize,\n      algNotation,\n      parseNotation,\n      movesState,\n    }\n  }\n})\n</script>\n\n<style>\n#app {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.notation-textarea {\n  width: 200px;\n  height: 600px;\n  margin: 0 100px;\n}\n\n.parse-button {\n  height: 40px;\n  width: 200px;\n  margin: 0 auto;\n  margin: 24px 100px 0 100px;\n}\n\n.board-size {\n  width: 200px;\n  margin: 0 100px 24px 100px;\n}\n\n.controls {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n}\n\n.chess-board-wrapper {\n  position: relative;\n  width: 10px;\n}\n</style>\n","\nimport { defineComponent, PropType } from 'vue'\n\nexport default defineComponent({\n  props: {\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n})\n","import { render } from \"./ChessBoard.vue?vue&type=template&id=40939c59\"\nimport script from \"./ChessBoard.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessBoard.vue?vue&type=script&lang=ts\"\n\nimport \"./ChessBoard.vue?vue&type=style&index=0&id=40939c59&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg\n    class=\"chess-board\"\n    :viewport=\"`0 0 ${cellSize * 8} ${cellSize * 8}`\"\n    :style=\"{\n      width: cellSize * 8,\n      height: cellSize * 8,\n    }\"\n  >\n    <polygon\n      v-for=\"(_, idx) in Array(32).fill(0)\"\n      :key=\"idx\"\n      :points=\"`\n        ${\n          cellSize * (((idx%4) * 2 ) + 1 - Math.floor(idx/4)%2)\n        },${\n          Math.floor(idx/4) * cellSize\n        }\n        ${\n          cellSize * (((idx%4) * 2 ) + 2 - Math.floor(idx/4)%2)\n        },${ Math.floor(idx/4) * cellSize }\n        ${\n          cellSize * (((idx%4) * 2 ) + 2 - Math.floor(idx/4)%2)\n        },${\n          (Math.floor(idx/4) + 1) * cellSize\n        },\n        ${\n          cellSize * (((idx%4) * 2 ) + 1 - Math.floor(idx/4)%2)\n        },${\n          (Math.floor(idx/4) + 1) * cellSize\n        }\n      `\"\n      style=\"fill:#5A3E2A;\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nexport default defineComponent({\n  props: {\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n})\n</script>\n\n<style>\n.chess-board {\n  background-color: #fff8dc;\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n</style>","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"king-piece-black-g\"\n    >\n      <path\n        d=\"M 22.5,11.63 L 22.5,6\"\n        class=\"king-piece-black-path1\"\n      />\n      <path\n        d=\"\n          M 22.5,\n          25 C 22.5,\n          25 27,\n          17.5 25.5,\n          14.5 C 25.5,\n          14.5 24.5,\n          12 22.5,\n          12 C 20.5,\n          12 19.5,\n          14.5 19.5,\n          14.5 C 18,\n          17.5 22.5,\n          25 22.5,\n          25\n        \"\n        class=\"king-piece-black-path2\"\n      />\n      <path\n        d=\"\n          M 11.5,\n          37 C 17,\n          40.5 27,\n          40.5 32.5,\n          37 L 32.5,\n          30 C 32.5,\n          30 41.5,\n          25.5 38.5,\n          19.5 C 34.5,\n          13 25,\n          16 22.5,\n          23.5 L 22.5,\n          27 L 22.5,\n          23.5 C 19,\n          16 9.5,\n          13 6.5,\n          19.5 C 3.5,\n          25.5 11.5,\n          29.5 11.5,\n          29.5 L 11.5,\n          37 z\n        \"\n        class=\"king-piece-black-path3\"\n      />\n      <path\n        d=\"M 20,8 L 25,8\"\n        class=\"king-piece-black-path4\"\n      />\n      <path\n        d=\"\n          M 32,\n          29.5 C 32,\n          29.5 40.5,\n          25.5 38.03,\n          19.85 C 34.15,\n          14 25,\n          18 22.5,\n          24.5 L 22.51,\n          26.6 L 22.5,\n          24.5 C 20,\n          18 9.906,\n          14 6.997,\n          19.85 C 4.5,\n          25.5 11.85,\n          28.85 11.85,\n          28.85\n        \"\n        class=\"king-piece-black-path5\"\n      />\n      <path\n        d=\"\n          M 11.5,\n          30 C 17,\n          27 27,\n          27 32.5,\n          30 M 11.5,\n          33.5 C 17,\n          30.5 27,\n          30.5 32.5,\n          33.5 M 11.5,\n          37 C 17,\n          34 27,\n          34 32.5,\n          37\n        \"\n        class=\"king-piece-black-path6\"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"king-piece-white-g\"\n    >\n      <path\n        class=\"king-piece-white-path1\"\n        d=\"M 22.5,11.63 L 22.5,6\"\n      />\n      <path\n        class=\"king-piece-white-path2\"\n        d=\"M 20,8 L 25,8\"\n      />\n      <path\n        class=\"king-piece-white-path3\"\n        d=\"\n          M 22.5,\n          25 C 22.5,\n          25 27,\n          17.5 25.5,\n          14.5 C 25.5,\n          14.5 24.5,\n          12 22.5,\n          12 C 20.5,\n          12 19.5,\n          14.5 19.5,\n          14.5 C 18,\n          17.5 22.5,\n          25 22.5,\n          25\n        \"\n      />\n      <path\n        class=\"king-piece-white-path4\"\n        d=\"\n          M 11.5,\n          37 C 17,\n          40.5 27,\n          40.5 32.5,\n          37 L 32.5,\n          30 C 32.5,\n          30 41.5,\n          25.5 38.5,\n          19.5 C 34.5,\n          13 25,\n          16 22.5,\n          23.5 L 22.5,\n          27 L 22.5,\n          23.5 C 19,\n          16 9.5,\n          13 6.5,\n          19.5 C 3.5,\n          25.5 11.5,\n          29.5 11.5,\n          29.5 L 11.5,\n          37 z\n        \"\n      />\n      <path\n        class=\"king-piece-white-path5\"\n        d=\"M 11.5,30 C 17,27 27,27 32.5,30\"\n      />\n      <path\n        class=\"king-piece-white-path6\"\n        d=\"M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5\"\n      />\n      <path\n        class=\"king-piece-white-path7\"\n        d=\"M 11.5,37 C 17,34 27,34 32.5,37\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.king-piece-black-g {\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.king-piece-black-path1,\n.king-piece-white-path1,\n.king-piece-white-path2 {\n  fill: none;\n  stroke: #000000;\n  stroke-linejoin: miter;\n}\n\n.king-piece-black-path2 {\n  fill: #000000;\n  fill-opacity: 1;\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n}\n\n.king-piece-black-path3 {\n  fill:#000000;\n  stroke:#000000;\n}\n\n.king-piece-black-path4 {\n  fill:none;\n  stroke:#000000;\n  stroke-linejoin:miter;\n}\n\n.king-piece-black-path5,\n.king-piece-black-path6 {\n  fill:none;\n  stroke:#ffffff;\n}\n\n.king-piece-white-g {\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.king-piece-white-path3 {\n  fill: #ffffff;\n  stroke: #000000;\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n}\n\n.king-piece-white-path4 {\n  fill: #ffffff;\n  stroke: #000000;\n}\n\n.king-piece-white-path5,\n.king-piece-white-path6,\n.king-piece-white-path7 {\n  fill: none;\n  stroke: #000000;\n}\n</style>","import { PropType } from 'vue'\nimport { PieceColor } from './chessRules'\n\nexport default {\n  color: {\n    type: String as PropType<PieceColor>,\n    required: true,\n    validator(value: PieceColor) {\n      return [\n        'black',\n        'white',\n      ].includes(value)\n    }\n  },\n}","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./KingPiece.vue?vue&type=template&id=d66bec82\"\nimport script from \"./KingPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./KingPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./KingPiece.vue?vue&type=style&index=0&id=d66bec82&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"queen-piece-black-g1\"\n    >\n      <g class=\"queen-piece-black-g2\">\n        <circle cx=\"6\" cy=\"12\" r=\"2.75\"/>\n        <circle cx=\"14\" cy=\"9\" r=\"2.75\"/>\n        <circle cx=\"22.5\" cy=\"8\" r=\"2.75\"/>\n        <circle cx=\"31\" cy=\"9\" r=\"2.75\"/>\n        <circle cx=\"39\" cy=\"12\" r=\"2.75\"/>\n      </g>\n      <path\n        class=\"queen-piece-black-path1\"\n        d=\"\n          M 9\n          26 C 17.5,\n          24.5 30,\n          24.5 36,\n          26 L 38.5,\n          13.5 L 31,\n          25 L 30.7,\n          10.9 L 25.5,\n          24.5 L 22.5,\n          10 L 19.5,\n          24.5 L 14.3,\n          10.9 L 14,\n          25 L 6.5,\n          13.5 L 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-black-path2\"\n        d=\"\n          M 9,\n          26 C 9,\n          28 10.5,\n          28 11.5,\n          30 C 12.5,\n          31.5 12.5,\n          31 12,\n          33.5 C 10.5,\n          34.5 10.5,\n          36 10.5,\n          36 C 9,\n          37.5 11,\n          38.5 11,\n          38.5 C 17.5,\n          39.5 27.5,\n          39.5 34,\n          38.5 C 34,\n          38.5 35.5,\n          37.5 34,\n          36 C 34,\n          36 34.5,\n          34.5 33,\n          33.5 C 32.5,\n          31 32.5,\n          31.5 33.5,\n          30 C 34.5,\n          28 36,\n          28 36,\n          26 C 27.5,\n          24.5 17.5,\n          24.5 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-black-path3\"\n        d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\n      />\n      <path\n        class=\"queen-piece-black-path4\"\n        d=\"M 11,29 A 35,35 1 0 1 34,29\"\n      />\n      <path\n        class=\"queen-piece-black-path5\"\n        d=\"M 12.5,31.5 L 32.5,31.5\"\n      />\n      <path\n        class=\"queen-piece-black-path6\"\n        d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\n      />\n      <path\n        class=\"queen-piece-black-path7\"\n        d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"queen-piece-white-g\"\n    >\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(-1,-1)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(15.5,-5.5)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(32,-1)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(7,-4.5)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(24,-4)\"\n      />\n      <path\n        class=\"queen-piece-white-path1\"\n        d=\"\n          M 9,\n          26 C 17.5,\n          24.5 30,\n          24.5 36,\n          26 L 38,\n          14 L 31,\n          25 L 31,\n          11 L 25.5,\n          24.5 L 22.5,\n          9.5 L 19.5,\n          24.5 L 14,\n          10.5 L 14,\n          25 L 7,\n          14 L 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-white-path2\"\n        d=\"\n          M 9,\n          26 C 9,\n          28 10.5,\n          28 11.5,\n          30 C 12.5,\n          31.5 12.5,\n          31 12,\n          33.5 C 10.5,\n          34.5 10.5,\n          36 10.5,\n          36 C 9,\n          37.5 11,\n          38.5 11,\n          38.5 C 17.5,\n          39.5 27.5,\n          39.5 34,\n          38.5 C 34,\n          38.5 35.5,\n          37.5 34,\n          36 C 34,\n          36 34.5,\n          34.5 33,\n          33.5 C 32.5,\n          31 32.5,\n          31.5 33.5,\n          30 C 34.5,\n          28 36,\n          28 36,\n          26 C 27.5,\n          24.5 17.5,\n          24.5 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-white-path3\"\n        d=\"M 11.5,30 C 15,29 30,29 33.5,30\"\n      />\n      <path\n        class=\"queen-piece-white-path4\"\n        d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.queen-piece-g1 {\n  opacity: 1;\n  fill: #000000;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.queen-piece-g2,\n.queen-piece-path1 {\n  fill: #000000;\n  stroke: none;\n}\n\n.queen-piece-path2,\n.queen-piece-path3 {\n  stroke-linecap:butt; \n}\n\n.queen-piece-path3 {\n  fill: none;\n  stroke: #000000;\n}\n\n.queen-piece-path4,\n.queen-piece-path5,\n.queen-piece-path6,\n.queen-piece-path7 {\n  fill:none;\n  stroke:#ffffff;\n}\n\n.queen-piece-white-g {\n  opacity: 1;\n  fill: #ffffff;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.queen-piece-white-path1,\n.queen-piece-white-path2 {\n  stroke-linecap: butt;\n}\n\n.queen-piece-white-path3,\n.queen-piece-white-path4 {\n  fill: none;\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./QueenPiece.vue?vue&type=template&id=1b070116\"\nimport script from \"./QueenPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./QueenPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./QueenPiece.vue?vue&type=style&index=0&id=1b070116&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg\n    viewbox=\"0 0 45 45\"\n    class=\"chess-piece\"\n  >\n    <g\n      v-if=\"color === 'black'\"\n      class=\"rook-piece-black-g\"\n    >\n      <path\n        class=\"rook-piece-black-path1\"\n        d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\n      />\n      <path\n        class=\"rook-piece-black-path2\"\n        d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\n      />\n      <path\n        class=\"rook-piece-black-path3\"\n        d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z\"\n      />\n      <path\n        class=\"rook-piece-black-path4\"\n        d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\n      />\n      <path\n        class=\"rook-piece-black-path5\"\n        d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\n      />\n      <path\n        class=\"rook-piece-black-path6\"\n        d=\"\n          M 11,\n          14 L 11,\n          9 L 15,\n          9 L 15,\n          11 L 20,\n          11 L 20,\n          9 L 25,\n          9 L 25,\n          11 L 30,\n          11 L 30,\n          9 L 34,\n          9 L 34,\n          14 L 11,\n          14 z\n        \"\n      />\n      <path\n        class=\"rook-piece-black-path7\"\n        d=\"M 12,35.5 L 33,35.5 L 33,35.5\"\n      />\n      <path\n        class=\"rook-piece-black-path8\"\n        d=\"M 13,31.5 L 32,31.5\"\n      />\n      <path\n        class=\"rook-piece-black-path9\"\n        d=\"M 14,29.5 L 31,29.5\"\n      />\n      <path\n        class=\"rook-piece-black-path10\"\n        d=\"M 14,16.5 L 31,16.5\"\n      />\n      <path\n        class=\"rook-piece-black-path11\"\n        d=\"M 11,14 L 34,14\"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"rook-piece-white-g\"\n    >\n      <path\n        class=\"rook-piece-white-path1\"\n        d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\n      />\n      <path\n        class=\"rook-piece-white-path2\"\n        d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\n      />\n      <path\n        class=\"rook-piece-white-path3\"\n        d=\"\n          M 11,\n          14 L 11,\n          9 L 15,\n          9 L 15,\n          11 L 20,\n          11 L 20,\n          9 L 25,\n          9 L 25,\n          11 L 30,\n          11 L 30,\n          9 L 34,\n          9 L 34,\n          14\n        \"\n      />\n      <path\n        class=\"rook-piece-white-path4\"\n        d=\"M 34,14 L 31,17 L 14,17 L 11,14\"\n      />\n      <path\n        class=\"rook-piece-white-path5\"\n        d=\"M 31,17 L 31,29.5 L 14,29.5 L 14,17\"\n      />\n      <path\n        class=\"rook-piece-white-path6\"\n        d=\"M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5\"\n      />\n      <path\n        class=\"rook-piece-white-path7\"\n        d=\"M 11,14 L 34,14\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.rook-piece-black-g {\n  opacity: 1;\n  fill: #000000;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.rook-piece-black-path1,\n.rook-piece-black-path2,\n.rook-piece-black-path3,\n.rook-piece-black-path5,\n.rook-piece-black-path6,\n.rook-piece-white-path1,\n.rook-piece-white-path2,\n.rook-piece-white-path3 {\n  stroke-linecap: butt;\n}\n\n.rook-piece-black-path4,\n.rook-piece-white-path5 {\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n}\n\n.rook-piece-black-path7,\n.rook-piece-black-path8,\n.rook-piece-black-path9,\n.rook-piece-black-path10,\n.rook-piece-black-path11 {\n  fill: none;\n  stroke: #ffffff;\n  stroke-width: 1;\n  stroke-linejoin: miter;\n}\n\n.rook-piece-white-g {\n  opacity: 1;\n  fill: #ffffff;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.rook-piece-white-path7 {\n  fill: none;\n  stroke: #000000;\n  stroke-linejoin: miter;\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./RookPiece.vue?vue&type=template&id=086bdd7e\"\nimport script from \"./RookPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./RookPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./RookPiece.vue?vue&type=style&index=0&id=086bdd7e&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"piece-bishop-black-g1\"\n    >\n      <g class=\"piece-bishop-black-g2\"> \n        <path d=\"\n          M 9,\n          36 C 12.39,\n          35.03 19.11,\n          36.43 22.5,\n          34 C 25.89,\n          36.43 32.61,\n          35.03 36,\n          36 C 36,\n          36 37.65,\n          36.54 39,\n          38 C 38.32,\n          38.97 37.35,\n          38.99 36,\n          38.5 C 32.61,\n          37.53 25.89,\n          38.96 22.5,\n          37.5 C 19.11,\n          38.96 12.39,\n          37.53 9,\n          38.5 C 7.646,\n          38.99 6.677,\n          38.97 6,\n          38 C 7.354,\n          36.06 9,\n          36 9,\n          36 z\n        \"/>\n        <path d=\"\n          M 15,\n          32 C 17.5,\n          34.5 27.5,\n          34.5 30,\n          32 C 30.5,\n          30.5 30,\n          30 30,\n          30 C 30,\n          27.5 27.5,\n          26 27.5,\n          26 C 33,\n          24.5 33.5,\n          14.5 22.5,\n          10.5 C 11.5,\n          14.5 12,\n          24.5 17.5,\n          26 C 17.5,\n          26 15,\n          27.5 15,\n          30 C 15,\n          30 14.5,\n          30.5 15,\n          32 z\n        \"/>\n        <path d=\"\n          M 25 8 A 2.5 2.5 0 1 1  20,\n          8 A 2.5 2.5 0 1 1  25 8 z\n        \"/>\n      </g>\n      <path\n        class=\"piece-bishop-black-path\"\n        d=\"\n          M 17.5,\n          26 L 27.5,\n          26 M 15,\n          30 L 30,\n          30 M 22.5,\n          15.5 L 22.5,\n          20.5 M 20,\n          18 L 25,\n          18\n        \"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"piece-bishop-white-g1\"\n    >\n      <g class=\"piece-bishop-white-g2\">\n        <path\n          d=\"\n            M 9,\n            36 C 12.39,\n            35.03 19.11,\n            36.43 22.5,\n            34 C 25.89,\n            36.43 32.61,\n            35.03 36,\n            36 C 36,\n            36 37.65,\n            36.54 39,\n            38 C 38.32,\n            38.97 37.35,\n            38.99 36,\n            38.5 C 32.61,\n            37.53 25.89,\n            38.96 22.5,\n            37.5 C 19.11,\n            38.96 12.39,\n            37.53 9,\n            38.5 C 7.646,\n            38.99 6.677,\n            38.97 6,\n            38 C 7.354,\n            36.06 9,\n            36 9,\n            36 z\n          \"\n        />\n        <path d=\"\n            M 15,\n            32 C 17.5,\n            34.5 27.5,\n            34.5 30,\n            32 C 30.5,\n            30.5 30,\n            30 30,\n            30 C 30,\n            27.5 27.5,\n            26 27.5,\n            26 C 33,\n            24.5 33.5,\n            14.5 22.5,\n            10.5 C 11.5,\n            14.5 12,\n            24.5 17.5,\n            26 C 17.5,\n            26 15,\n            27.5 15,\n            30 C 15,\n            30 14.5,\n            30.5 15,\n            32 z\n        \"/>\n        <path d=\"\n          M 25 8 A 2.5 2.5 0 1 1  20,\n          8 A 2.5 2.5 0 1 1  25 8 z\n        \"/>\n      </g>\n      <path\n        class=\"piece-bishop-white-path\"\n        d=\"\n          M 17.5,\n          26 L 27.5,\n          26 M 15,\n          30 L 30,\n          30 M 22.5,\n          15.5 L 22.5,\n          20.5 M 20,\n          18 L 25,\n          18\n        \"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.piece-bishop-black-g1 {\n  opacity: 1;\n  fill: none;\n  fill-rule: evenodd;\n  fill-opacity: 1;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-bishop-black-g2 {\n  fill: #000000;\n  stroke: #000000;\n  stroke-linecap: butt;\n}\n\n.piece-bishop-black-path {\n  fill: none;\n  stroke: #ffffff;\n  stroke-linejoin: miter;\n}\n\n.piece-bishop-white-g1 {\n  opacity: 1;\n  fill: none;\n  fill-rule: evenodd;\n  fill-opacity: 1;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-bishop-white-g2 {\n  fill: #ffffff;\n  stroke: #000000;\n  stroke-linecap: butt;\n}\n.piece-bishop-white-path {\n  fill: none;\n  stroke: #000000;\n  stroke-linejoin: miter\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./BishopPiece.vue?vue&type=template&id=26bedb6f\"\nimport script from \"./BishopPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./BishopPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./BishopPiece.vue?vue&type=style&index=0&id=26bedb6f&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"piece-knight-g-black\"\n    >\n      <path\n        class=\"piece-knight-black-path1\"\n        d=\"\n          M 22,\n          10 C 32.5,\n          11 38.5,\n          18 38,\n          39 L 15,\n          39 C 15,\n          30 25,\n          32.5 23,\n          18\n        \"\n      />\n      <path\n        class=\"piece-knight-black-path2\"\n        d=\"\n          M 24,\n          18 C 24.38,\n          20.91 18.45,\n          25.37 16,\n          27 C 13,\n          29 13.18,\n          31.34 11,\n          31 C 9.958,\n          30.06 12.41,\n          27.96 11,\n          28 C 10,\n          28 11.19,\n          29.23 10,\n          30 C 9,\n          30 5.997,\n          31 6,\n          26 C 6,\n          24 12,\n          14 12,\n          14 C 12,\n          14 13.89,\n          12.1 14,\n          10.5 C 13.27,\n          9.506 13.5,\n          8.5 13.5,\n          7.5 C 14.5,\n          6.5 16.5,\n          10 16.5,\n          10 L 18.5,\n          10 C 18.5,\n          10 19.28,\n          8.008 21,\n          7 C 22,\n          7 22,\n          10 22,\n          10\n        \"\n      />\n      <path\n        class=\"piece-knight-black-path3\"\n        d=\"\n          M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,\n          25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\n        \"\n      />\n      <path\n        class=\"piece-knight-black-path4\"\n        d=\"\n          M 15 15.5 A 0.5 1.5 0 1 1  14,\n          15.5 A 0.5 1.5 0 1 1  15 15.5 z\n        \"\n        transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n      />\n      <path\n        class=\"piece-knight-black-path5\"\n        d=\"\n          M 24.55,\n          10.4 L 24.1,\n          11.85 L 24.6,\n          12 C 27.75,\n          13 30.25,\n          14.49 32.5,\n          18.75 C 34.75,\n          23.01 35.75,\n          29.06 35.25,\n          39 L 35.2,\n          39.5 L 37.45,\n          39.5 L 37.5,\n          39 C 38,\n          28.94 36.62,\n          22.15 34.25,\n          17.66 C 31.88,\n          13.17 28.46,\n          11.02 25.06,\n          10.5 L 24.55,\n          10.4 z\n        \"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"piece-knight-white-g\"\n    >\n      <path\n        class=\"piece-knight-white-path1\"\n        d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\n        style=\"\n          fill:#ffffff;\n          stroke:#000000;\n        \"\n      />\n      <path\n        class=\"piece-knight-white-path2\"\n        d=\"\n          M 24,\n          18 C 24.38,\n          20.91 18.45,\n          25.37 16,\n          27 C 13,\n          29 13.18,\n          31.34 11,\n          31 C 9.958,\n          30.06 12.41,\n          27.96 11,\n          28 C 10,\n          28 11.19,\n          29.23 10,\n          30 C 9,\n          30 5.997,\n          31 6,\n          26 C 6,\n          24 12,14 12,\n          14 C 12,\n          14 13.89,\n          12.1 14,\n          10.5 C 13.27,\n          9.506 13.5,\n          8.5 13.5,\n          7.5 C 14.5,\n          6.5 16.5,\n          10 16.5,\n          10 L 18.5,\n          10 C 18.5,\n          10 19.28,\n          8.008 21,\n          7 C 22,\n          7 22,\n          10 22,\n          10\n        \"\n      />\n      <path\n        class=\"piece-knight-white-path3\"\n        d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\n      />\n      <path\n        class=\"piece-knight-white-path4\"\n        d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\n        transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.piece-knight-black-g {\n  opacity: 1;\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-knight-black-path1,\n.piece-knight-black-path2 {\n  fill: #000000;\n  stroke: #000000;\n}\n\n.piece-knight-black-path3,\n.piece-knight-black-path4 {\n  fill: #ffffff;\n  stroke: #ffffff;\n}\n\n.piece-knight-black-path5 {\n  fill: #ffffff;\n  stroke: none;\n}\n\n.piece-knight-white-g {\n  opacity: 1;\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-knight-white-path1,\n.piece-knight-white-path2 {\n  fill:#ffffff;\n  stroke:#000000;\n}\n\n.piece-knight-white-path3,\n.piece-knight-white-path4 {\n  fill:#000000;\n  stroke:#000000;\n}\n\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./KnightPiece.vue?vue&type=template&id=53fd7f20\"\nimport script from \"./KnightPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./KnightPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./KnightPiece.vue?vue&type=style&index=0&id=53fd7f20&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg\n    viewbox=\"0 0 45 45\"\n    class=\"chess-piece\"\n  >\n    <path\n      :class=\"{\n        'piece-pawn-black': color === 'black',\n        'piece-pawn-white': color === 'white'\n      }\"\n      d=\"\n        M 22,\n        9 C 19.79,\n        9 18,\n        10.79 18,\n        13 C 18,\n        13.89 18.29,\n        14.71 18.78,\n        15.38 C 16.83,\n        16.5 15.5,\n        18.59 15.5,\n        21 C 15.5,\n        23.03 16.44,\n        24.84 17.91,\n        26.03 C 14.91,\n        27.09 10.5,\n        31.58 10.5,\n        39.5 L 33.5,\n        39.5 C 33.5,\n        31.58 29.09,\n        27.09 26.09,\n        26.03 C 27.56,\n        24.84 28.5,\n        23.03 28.5,\n        21 C 28.5,\n        18.59 27.17,\n        16.5 25.22,\n        15.38 C 25.71,\n        14.71 26,\n        13.89 26,\n        13 C 26,\n        10.79 24.21,\n        9 22,\n        9 z\n      \"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.piece-pawn-black,\n.piece-pawn-white {\n  opacity: 1;\n  fill-opacity: 1;\n  fill-rule: nonzero;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: miter;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n  stroke: #000000;\n}\n\n.piece-pawn-black {\n  fill: #000000;\n  \n}\n\n.piece-pawn-white {\n  fill: #ffffff;\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./PawnPiece.vue?vue&type=template&id=cfdd4acc\"\nimport script from \"./PawnPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./PawnPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./PawnPiece.vue?vue&type=style&index=0&id=cfdd4acc&lang=css\"\nscript.render = render\n\nexport default script","\nimport { computed, ref, watch, defineComponent, PropType } from 'vue'\nimport KingPiece from './KingPiece.vue'\nimport QueenPiece from './QueenPiece.vue'\nimport RookPiece from './RookPiece.vue'\nimport BishopPiece from './BishopPiece.vue'\nimport KnightPiece from './KnightPiece.vue'\nimport PawnPiece from './PawnPiece.vue'\nimport figureProps from '../figureProps'\nimport { BoardSquare, Piece } from '../chessRules'\n\nexport default defineComponent({\n  components: {\n    KingPiece,\n    QueenPiece,\n    RookPiece,\n    BishopPiece,\n    KnightPiece,\n    PawnPiece\n  },\n  props: {\n    pieceType: {\n      type: String as PropType<Piece>,\n      required: true,\n        validator: (value: string) => {\n          return [\n            'king',\n            'queen',\n            'rook',\n            'bishop',\n            'knight',\n            'pawn'\n          ].includes(value)\n        },\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (value: number) => value > 0\n    },\n    square: {\n      type: Object as PropType<BoardSquare>,\n      required: true,\n      validator: (square: BoardSquare) => {\n        const isRankCorrect = [\n          'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n        ].includes(square.rank)\n        const isFileCorrect = square.file >= 1 \n          && square.file <=8\n          && Number.isInteger(square.file)\n        return isRankCorrect && isFileCorrect\n      }\n    },\n    ...figureProps,\n  },\n  setup(props) {\n    let fugureComponentName = computed(\n      () => \n        props.pieceType &&\n        props.pieceType.charAt(0).toUpperCase()\n        + props.pieceType.slice(1)\n        + 'Piece'\n    )\n\n    const squareCoords = (square: BoardSquare) => ({\n      x: square.rank.charCodeAt(0) - 'a'.charCodeAt(0),\n      y: square.file - 1,\n    })\n\n    let figureTransform = computed(\n      () => `translate3d(\n        ${squareCoords(props.square).x * props.cellSize + (props.cellSize - 45) / 2}px,\n        ${(7 - squareCoords(props.square).y) * props.cellSize + (props.cellSize - 45) / 2}px,\n        0\n      ) scale3d(\n        ${props.cellSize / 45},\n        ${props.cellSize / 45},\n        1\n      )`\n    )\n\n    let isPieceAnimated = ref(true)\n\n    watch(() => props.cellSize, () => {\n      isPieceAnimated.value = false\n\n      setTimeout(() => {\n        isPieceAnimated.value = true\n      }, 36);\n    })\n\n    return {\n      fugureComponentName,\n      figureTransform,\n      isPieceAnimated,\n    }\n  }\n})\n","import { render } from \"./ChessPiece.vue?vue&type=template&id=59ae9ab7\"\nimport script from \"./ChessPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./ChessPiece.vue?vue&type=style&index=0&id=59ae9ab7&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <component\n    v-if=\"fugureComponentName\"\n    :is=\"fugureComponentName\"\n    :style=\"{\n      transform: figureTransform\n    }\"\n    :class=\"{\n      'chess-piece_animated': isPieceAnimated\n    }\"\n    :color=\"color\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, ref, watch, defineComponent, PropType } from 'vue'\nimport KingPiece from './KingPiece.vue'\nimport QueenPiece from './QueenPiece.vue'\nimport RookPiece from './RookPiece.vue'\nimport BishopPiece from './BishopPiece.vue'\nimport KnightPiece from './KnightPiece.vue'\nimport PawnPiece from './PawnPiece.vue'\nimport figureProps from '../figureProps'\nimport { BoardSquare, Piece } from '../chessRules'\n\nexport default defineComponent({\n  components: {\n    KingPiece,\n    QueenPiece,\n    RookPiece,\n    BishopPiece,\n    KnightPiece,\n    PawnPiece\n  },\n  props: {\n    pieceType: {\n      type: String as PropType<Piece>,\n      required: true,\n        validator: (value: string) => {\n          return [\n            'king',\n            'queen',\n            'rook',\n            'bishop',\n            'knight',\n            'pawn'\n          ].includes(value)\n        },\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (value: number) => value > 0\n    },\n    square: {\n      type: Object as PropType<BoardSquare>,\n      required: true,\n      validator: (square: BoardSquare) => {\n        const isRankCorrect = [\n          'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n        ].includes(square.rank)\n        const isFileCorrect = square.file >= 1 \n          && square.file <=8\n          && Number.isInteger(square.file)\n        return isRankCorrect && isFileCorrect\n      }\n    },\n    ...figureProps,\n  },\n  setup(props) {\n    let fugureComponentName = computed(\n      () => \n        props.pieceType &&\n        props.pieceType.charAt(0).toUpperCase()\n        + props.pieceType.slice(1)\n        + 'Piece'\n    )\n\n    const squareCoords = (square: BoardSquare) => ({\n      x: square.rank.charCodeAt(0) - 'a'.charCodeAt(0),\n      y: square.file - 1,\n    })\n\n    let figureTransform = computed(\n      () => `translate3d(\n        ${squareCoords(props.square).x * props.cellSize + (props.cellSize - 45) / 2}px,\n        ${(7 - squareCoords(props.square).y) * props.cellSize + (props.cellSize - 45) / 2}px,\n        0\n      ) scale3d(\n        ${props.cellSize / 45},\n        ${props.cellSize / 45},\n        1\n      )`\n    )\n\n    let isPieceAnimated = ref(true)\n\n    watch(() => props.cellSize, () => {\n      isPieceAnimated.value = false\n\n      setTimeout(() => {\n        isPieceAnimated.value = true\n      }, 36);\n    })\n\n    return {\n      fugureComponentName,\n      figureTransform,\n      isPieceAnimated,\n    }\n  }\n})\n</script>\n\n<style>\n.chess-piece {\n  width: 45px;\n  height: 45px;\n  position: absolute;\n  will-change: transform;\n}\n\n.chess-piece_animated {\n  transition: transform ease 1s;\n}\n</style>","import { FixedSizeArray } from './fixedSizeArray'\n\nexport enum Piece {\n  King = 'king',\n  Queen = 'queen',\n  Rook = 'rook',\n  Bishop = 'bishop',\n  Knight = 'knight',\n  Pawn = 'pawn',\n  NA = 'NA',\n}\n\nexport enum MoveAction {\n  move = '-',\n  capture = 'x',\n  propmotionToQueen = '=Q',\n  propmotionToKnight = '=K',\n  propmotionToRook = '=R',\n  propmotionToBishop = '=B',\n  castlingKingside = '0-0',\n  castlingQueenside = '0-0-0',\n}\n\nexport type Rank = 'a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'\n\nexport type File = 1|2|3|4|5|6|7|8\n\nexport interface BoardSquare {\n  rank: Rank,\n  file: File,\n}\n\nexport interface Move {\n  piece: Piece,\n  action: MoveAction,\n  from: BoardSquare,\n  to: BoardSquare,\n}\n\nexport type PieceColor = 'black'|'white';\n\nexport interface PieceDescription {\n  piece: Piece,\n  square: BoardSquare,\n  color: PieceColor,\n  initialSquare?: BoardSquare\n}\n\nexport type EmptySquare = null\n\nexport type PieceSetItem = PieceDescription | EmptySquare\n\nexport type BoardCol = FixedSizeArray<8, PieceSetItem>\n\nexport interface ChessBoard {\n  a: BoardCol,\n  b: BoardCol,\n  c: BoardCol,\n  d: BoardCol,\n  e: BoardCol,\n  f: BoardCol,\n  g: BoardCol,\n  h: BoardCol,\n}\n","import {\n    BoardSquare,\n    Piece,\n    ChessBoard,\n    BoardCol,\n    PieceDescription,\n    PieceColor,\n    Rank\n} from './chessRules'\n\nconst createEmptyCol = () => <BoardCol>(<unknown>new Array(8).fill(null))\n\ndeclare global {\n  interface ObjectConstructor {\n    fromEntries(xs: [string|number|symbol, any][]): object\n  }\n\n  interface Array<T> {\n    flat(): Array<T>;\n    flatMap(func: (x: T) => T): Array<T>;\n  }\n}\n\nexport const createEmptyChessBoard = () => {\n  const rowsArr = Array(8).fill('a').map(\n    (char: string, idx: number) => String.fromCharCode(char.charCodeAt(0) + idx)\n  ).map(\n    (char: string) => ([char, createEmptyCol()])\n  )\n\n  return <ChessBoard>Object.fromEntries(rowsArr)\n}\n\nexport const initChessBoard = (board: ChessBoard) => {\n  const figureSet:Array<PieceDescription>  = []\n  // Add pawns\n  Array(8).fill(2).forEach(\n    (file, idx) => {\n      figureSet.push({\n        piece: Piece.Pawn,\n        square: {\n          rank: <Rank>String.fromCharCode('a'.charCodeAt(0) + idx),\n          file\n        },\n        color: 'white',\n      })\n    }\n  )\n  Array(8).fill(7).forEach(\n    (file, idx) => {\n      figureSet.push({\n        piece: Piece.Pawn,\n        square: {\n          rank: <Rank>String.fromCharCode('a'.charCodeAt(0) + idx),\n          file\n        },\n        color: 'black',\n      })\n    }\n  )\n  figureSet.forEach(pieceDesc => {\n    addPiece(board, pieceDesc.piece, pieceDesc.square, pieceDesc.color)\n  })\n  // Add kings\n  addPiece(board, Piece.King, { rank: 'e', file: 8 }, 'black')\n  addPiece(board, Piece.King, { rank: 'e', file: 1 }, 'white')\n  // Add Queens\n  addPiece(board, Piece.Queen, { rank: 'd', file: 8 }, 'black')\n  addPiece(board, Piece.Queen, { rank: 'd', file: 1 }, 'white')\n  // Add Bishops\n  addPiece(board, Piece.Bishop, { rank: 'c', file: 1 }, 'white')\n  addPiece(board, Piece.Bishop, { rank: 'f', file: 1 }, 'white')\n  addPiece(board, Piece.Bishop, { rank: 'c', file: 8 }, 'black')\n  addPiece(board, Piece.Bishop, { rank: 'f', file: 8 }, 'black')\n  // Add Knights\n  addPiece(board, Piece.Knight, { rank: 'b', file: 1 }, 'white')\n  addPiece(board, Piece.Knight, { rank: 'g', file: 1 }, 'white')\n  addPiece(board, Piece.Knight, { rank: 'b', file: 8 }, 'black')\n  addPiece(board, Piece.Knight, { rank: 'g', file: 8 }, 'black')\n  // Add Rooks\n  addPiece(board, Piece.Rook, { rank: 'a', file: 1 }, 'white')\n  addPiece(board, Piece.Rook, { rank: 'h', file: 1 }, 'white')\n  addPiece(board, Piece.Rook, { rank: 'a', file: 8 }, 'black')\n  addPiece(board, Piece.Rook, { rank: 'h', file: 8 }, 'black')\n}\n\nexport const addPiece = (\n  board: ChessBoard,\n  piece: Piece,\n  square: BoardSquare,\n  color: PieceColor\n) => {\n  board[square.rank][square.file - 1] = { piece, square, color, initialSquare: square }\n}\n\nexport const movePiece = (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {\n  if(board[to.rank][to.file - 1] !== null) {\n    throw new Error(`Move destination is not empty: ${to.rank}${to.file}`)\n  } else if(board[from.rank][from.file - 1] === null) {\n    throw new Error(`Move start sqare is empty: ${from.rank}${from.file}`)\n  }\n  board[from.rank][from.file - 1]!.square = to\n  board[to.rank][to.file - 1] = board[from.rank][from.file - 1]\n  board[from.rank][from.file - 1] = null\n}\n\nexport const capturePiece = (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {\n  if(board[to.rank][to.file - 1] === null) {\n    throw new Error(`Capture destination square is empty: ${to.rank}${to.file}`)\n  } else if(board[from.rank][from.file - 1] === null) {\n    throw new Error(`Capture start square is empty: ${from.rank}${from.file}`)\n  }\n  board[from.rank][from.file - 1]!.square = to\n  board[to.rank][to.file - 1] = board[from.rank][from.file - 1]\n  board[from.rank][from.file - 1] = null\n}\n\nexport const removePiece = (board: ChessBoard, from: BoardSquare) => {\n  board[from.rank][from.file - 1] = null\n}\n\n// TODO: implement chess rules check\nexport const checkPieceMove = {\n  [Piece.King]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Queen]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Rook]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Bishop]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Knight]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Pawn]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n}","\nimport { ref, PropType, watchEffect, defineComponent, computed } from 'vue'\nimport ChessPiece from './pieces/ChessPiece.vue'\nimport {\n    Rank,\n    File,\n    BoardSquare,\n    Piece,\n    ChessBoard,\n    BoardCol,\n    Move, MoveAction\n} from './chessRules'\nimport {\n  createEmptyChessBoard,\n  addPiece,\n  capturePiece,\n  initChessBoard,\n  movePiece,\n} from './chessBoardTools'\n\nexport default defineComponent({\n  components: {\n    ChessPiece,\n  },\n  props: {\n    moves: {\n      type: Array as PropType<Array<Move>>,\n      required: true\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n  setup(props) {\n    const chessBoardState = ref(createEmptyChessBoard())\n    initChessBoard(<ChessBoard>chessBoardState.value)\n\n    const getFlatChessBoardState = () => Object.values(\n      <ChessBoard>chessBoardState.value\n    ).flat().filter(piece => piece !== null)\n\n    const chessBoardStateFlat = computed(\n      () => Object.values(\n        <ChessBoard>chessBoardState.value\n      ).flat().filter(piece => piece !== null).sort((a, b) => {\n        const aKey = a.initialSquare.rank + a.initialSquare.file\n        const bKey = b.initialSquare.rank + b.initialSquare.file\n        if (aKey < bKey) {\n          return -1;\n        }\n        if (aKey < bKey) {\n          return 1;\n        }\n        return 0;\n      })\n    )\n\n    let movesDemoTimers: Array<any> = []\n\n    watchEffect(() => {\n      chessBoardState.value = createEmptyChessBoard()\n      initChessBoard(<ChessBoard>chessBoardState.value)\n      movesDemoTimers.forEach(handler => clearTimeout(handler))\n      movesDemoTimers = []\n      props.moves.forEach((move: Move, moveIdx) => {\n        movesDemoTimers.push(setTimeout(() => {\n          console.log(moveIdx, move)\n          if(move.action === MoveAction.move) {\n            movePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.capture) {\n            capturePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.castlingQueenside) {\n            // TODO\n          } else if(move.action === MoveAction.castlingKingside) {\n            if(moveIdx%2 === 0) {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 1, },\n                { rank: 'g', file: 1, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 1, },\n                { rank: 'f', file: 1, }\n              )\n            } else {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 8, },\n                { rank: 'g', file: 8, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 8, },\n                { rank: 'f', file: 8, }\n              )\n            }\n          }\n        }, 1500 *(moveIdx + 1)))\n      })\n    })\n    return {\n      chessBoardStateFlat,\n    }\n  }\n})\n","import { render } from \"./GamePlayer.vue?vue&type=template&id=42a9bcb6\"\nimport script from \"./GamePlayer.vue?vue&type=script&lang=ts\"\nexport * from \"./GamePlayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ChessPiece\n    v-for=\"piece in chessBoardStateFlat\"\n    :key=\"piece.initialSquare.rank + piece.initialSquare.file\"\n    :data-test=\"piece.initialSquare.rank + piece.initialSquare.file\"\n    :cellSize=\"cellSize\"\n    :pieceType=\"piece.piece\"\n    :square=\"piece.square\"\n    :color=\"piece.color\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { ref, PropType, watchEffect, defineComponent, computed } from 'vue'\nimport ChessPiece from './pieces/ChessPiece.vue'\nimport {\n    Rank,\n    File,\n    BoardSquare,\n    Piece,\n    ChessBoard,\n    BoardCol,\n    Move, MoveAction\n} from './chessRules'\nimport {\n  createEmptyChessBoard,\n  addPiece,\n  capturePiece,\n  initChessBoard,\n  movePiece,\n} from './chessBoardTools'\n\nexport default defineComponent({\n  components: {\n    ChessPiece,\n  },\n  props: {\n    moves: {\n      type: Array as PropType<Array<Move>>,\n      required: true\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n  setup(props) {\n    const chessBoardState = ref(createEmptyChessBoard())\n    initChessBoard(<ChessBoard>chessBoardState.value)\n\n    const getFlatChessBoardState = () => Object.values(\n      <ChessBoard>chessBoardState.value\n    ).flat().filter(piece => piece !== null)\n\n    const chessBoardStateFlat = computed(\n      () => Object.values(\n        <ChessBoard>chessBoardState.value\n      ).flat().filter(piece => piece !== null).sort((a, b) => {\n        const aKey = a.initialSquare.rank + a.initialSquare.file\n        const bKey = b.initialSquare.rank + b.initialSquare.file\n        if (aKey < bKey) {\n          return -1;\n        }\n        if (aKey < bKey) {\n          return 1;\n        }\n        return 0;\n      })\n    )\n\n    let movesDemoTimers: Array<any> = []\n\n    watchEffect(() => {\n      chessBoardState.value = createEmptyChessBoard()\n      initChessBoard(<ChessBoard>chessBoardState.value)\n      movesDemoTimers.forEach(handler => clearTimeout(handler))\n      movesDemoTimers = []\n      props.moves.forEach((move: Move, moveIdx) => {\n        movesDemoTimers.push(setTimeout(() => {\n          console.log(moveIdx, move)\n          if(move.action === MoveAction.move) {\n            movePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.capture) {\n            capturePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.castlingQueenside) {\n            // TODO\n          } else if(move.action === MoveAction.castlingKingside) {\n            if(moveIdx%2 === 0) {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 1, },\n                { rank: 'g', file: 1, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 1, },\n                { rank: 'f', file: 1, }\n              )\n            } else {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 8, },\n                { rank: 'g', file: 8, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 8, },\n                { rank: 'f', file: 8, }\n              )\n            }\n          }\n        }, 1500 *(moveIdx + 1)))\n      })\n    })\n    return {\n      chessBoardStateFlat,\n    }\n  }\n})\n</script>","import { Rank, File, MoveAction, Piece, Move } from './chessRules'\n\nconst isLowerCased = (str: string) => str === str.toLowerCase()\nconst piecesCodes = {\n  'K': Piece.King,\n  'Q': Piece.Queen,\n  'R': Piece.Rook,\n  'N': Piece.Knight,\n  'B': Piece.Bishop,\n  'p': Piece.Pawn,\n}\n\nconst actionCodes = {\n  'x': MoveAction.capture,\n  '-': MoveAction.move,\n}\n\nconst isPieceCode = (code: string) => Object.keys(piecesCodes).includes(code)\nconst isRank = (rank: string) => {\n  return ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'].includes(rank)\n}\nconst isFile = (file: string) => {\n  const fileNum = parseInt(file)\n  return !isNaN(fileNum) && fileNum >= 1 && fileNum <= 8\n}\n\nexport const tokenizator = (source: Array<string>) => {\n  const moves: Array<Move> = []\n  source.forEach(moveSource => {\n    if(moveSource === '0-0') {\n      moves.push({\n        piece: Piece.NA,\n        action: MoveAction.castlingKingside,\n        from: { rank: 'a', file: 1 },\n        to: { rank: 'a', file: 1 },\n      })\n    } else if(moveSource === '0-0-0') {\n      moves.push({\n        piece: Piece.NA,\n        action: MoveAction.castlingQueenside,\n        from: { rank: 'a', file: 1 },\n        to: { rank: 'a', file: 1 },\n      })\n    } else if(/[KQRNBp][a-h][1-8][-x][a-h][1-8]/g.test(moveSource)) {\n      const moveParts = /([KQRNBp])([a-h])([1-8])([-x])([a-h])([1-8])/g.exec(moveSource)\n      if(moveParts !== null) {\n        moves.push({\n          piece: piecesCodes[moveParts[1]],\n          action: actionCodes[moveParts[4]],\n          from: {\n            rank: <Rank>moveParts[2],\n            file: <File>parseInt(moveParts[3]),\n          },\n          to: {\n            rank: <Rank>moveParts[5],\n            file: <File>parseInt(moveParts[6]),\n          },\n        })\n      } else {\n        console.error(`Regex returned null: ${moveSource}`)\n      }\n    } else if(/[a-h][18][=\\\\][QRNB]/g.test(moveSource)) {\n      const moveParts = /([a-h])([18])([=][QRNB])/g.exec(moveSource)\n      if(moveParts !== null) {\n        let fromFile: File = 2\n        if(parseInt(moveParts[2]) === 8) {\n          fromFile = 7\n        }\n        moves.push({\n          piece: piecesCodes[moveParts[1]],\n          action: MoveAction[moveParts[3]],\n          from: {\n            rank: <Rank>moveParts[1],\n            file: fromFile,\n          },\n          to: {\n            rank: <Rank>moveParts[1],\n            file: <File>parseInt(moveParts[2]),\n          },\n        })\n      } else {\n        console.error(`Regex returned null: ${moveSource}`)\n      }\n    } else {\n      console.error(`Unexpected move: ${moveSource}`)\n    }\n  })\n\n  return moves;\n}\n\nexport const normalizeNotation = (source: string) => {\n  console.log('Normalize notation:', source)\n  let i18nSource = source\n    .replaceAll('Кр', 'K')\n    .replaceAll('Ф', 'Q')\n    .replaceAll('Л', 'R')\n    .replaceAll('К', 'N')\n    .replaceAll('С', 'B')\n    .replaceAll('п', 'p')\n    .replaceAll('—', '-')\n    .replaceAll('O-O', '0-0')\n    .replaceAll('O-O-O', '0-0-0')\n    .replaceAll(':', 'x')\n    .replaceAll('×', 'x')\n    .replaceAll('(Q)', '=Q')\n    .replaceAll('(N)', '=N')\n    .replaceAll('(R)', '=R')\n    .replaceAll('(B)', '=B')\n    .replaceAll('/Q', '=Q')\n    .replaceAll('/N', '=N')\n    .replaceAll('/R', '=R')\n    .replaceAll('/B', '=B')\n    .replaceAll(/[+!?#]/g, '')\n    .replaceAll(/[\\d]+\\./g, '')\n    .replaceAll('\\n', ' ')\n    .replaceAll('  ', ' ')\n\n  let moves = i18nSource.split(' ').map(move => {\n    let result = move\n    if(/^[a-h]/.test(move)) {\n      result = 'p' + result\n    }\n    return result\n  })\n\n  return moves\n}","\nimport { defineComponent, computed, ref } from 'vue'\nimport ChessBoard from './ChessBoard.vue'\nimport GamePlayer from './GamePlayer.vue'\nimport { tokenizator, normalizeNotation } from './chessNotationParser'\nimport { Move } from './chessRules'\n\nexport default defineComponent({\n  components: {\n    ChessBoard,\n    GamePlayer,\n  },\n  setup() {\n    let cellSize = ref(75)\n    let algNotation = ref(\n      '1.e2-e4 e7-e5\\n' +\n      '2.Кg1-f3 Кb8-c6\\n' +\n      '3.d2-d4 e5xd4\\n' +\n      '4.Сf1-c4 d7-d6\\n' +\n      '5.Кf3xd4 Сf8-e7\\n' +\n      '6.0-0 Кg8-f6\\n' +\n      '7.Кb1-c3 0-0\\n' +\n      '8.h2-h3 Кc6xd4\\n' +\n      '9.Фd1xd4 Кf6-d7\\n' +\n      '10.Кc3-d5 Сe7-f6\\n' +\n      '11.Кd5xf6+ Фd8xf6\\n' +\n      '12.Сc1-e3 Лf8-e8\\n' +\n      '13.f2-f3 Фf6-g6\\n' +\n      '14.Крg1-h1 Кd7-f6\\n' +\n      '15.g2-g4 h7-h5\\n' +\n      '16.Сc4-d3 h5xg4\\n' +\n      '17.h3xg4 Сc8xg4\\n' +\n      '18.f3xg4 Кf6xg4\\n' +\n      '19.Сe3-f4 Лe8-e6\\n' +\n      '20.Лf1-f3 Лa8-e8\\n' +\n      '21.Лf3-h3 c7-c5\\n' +\n      '22.Фd4-g1 c5-c4\\n' +\n      '23.Лh3-h4 c4xd3\\n' +\n      '24.c2xd3 Кg4-h6\\n' +\n      '25.Сf4xh6 Фg6xh6\\n' +\n      '26.Фg1-h2 Фh6xh4\\n' +\n      '27.Фh2xh4 Лe6-h6\\n' +\n      '28.Фh4xh6 g7xh6\\n' +\n      '29.Лa1-c1 Лe8-e5\\n' +\n      '30.Лc1-c7 Лe5-b5\\n' +\n      '31.b2-b3 Лb5-a5\\n' +\n      '32.Лc7xb7 Лa5xa2\\n' +\n      '33.Лb7-d7 Лa2-a6\\n' +\n      '34.Крh1-g2 Крg8-g7\\n' +\n      '35.Крg2-f3 Крg7-f6\\n' +\n      '36.Крf3-e3 Крf6-e6\\n' +\n      '37.Лd7-c7 f7-f5\\n' +\n      '38.Лc7-h7 f5xe4\\n' +\n      '39.Крe3xe4 Лa6-b6\\n' +\n      '40.Лh7xh6+ Крe6-d7\\n' +\n      '41.Крe4-d5 Лb6-b5+\\n' +\n      '42.Крd5-c4 Лb5-c5+\\n' +\n      '43.Крc4-d4 Лc5-b5\\n' +\n      '44.Лh6-h7+ Крd7-c6\\n' +\n      '45.Лh7xa7 Лb5xb3\\n' +\n      '46.Крd4-c4 Лb3-b1\\n' +\n      '47.Лa7-a6+ Крc6-d7\\n' +\n      '48.d3-d4 Крd7-e6\\n' +\n      '49.Лa6-a3'\n    )\n    let cellSizeText = computed({\n      set(value: any) {\n        cellSize.value = parseInt(value)\n      },\n      get: () => cellSize.value\n    })\n    const movesState = ref<Array<Move>>([])\n\n    const parseNotation = () => {\n      movesState.value = tokenizator(\n        normalizeNotation(algNotation.value)\n      )\n    }\n\n    return {\n      cellSizeText,\n      cellSize,\n      algNotation,\n      parseNotation,\n      movesState,\n    }\n  }\n})\n","import { render } from \"./App.vue?vue&type=template&id=4776fb98\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4776fb98&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}