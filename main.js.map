{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/ChessBoard.vue?f89e","webpack:///./src/pieces/KingPiece.vue?a0c3","webpack:///./src/pieces/QueenPiece.vue?c0c6","webpack:///./src/pieces/RookPiece.vue?5c2f","webpack:///./src/pieces/BishopPiece.vue?2e77","webpack:///./src/pieces/KnightPiece.vue?f4ee","webpack:///./src/pieces/PawnPiece.vue?9e0c","webpack:///./src/pieces/ChessPiece.vue?77a5","webpack:///./src/App.vue?6f40","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/vue/dist/vue.runtime.esm-bundler.js","webpack:///./src/App.vue","webpack:///./src/ChessBoard.vue?891a","webpack:///./src/ChessBoard.vue?9073","webpack:///./src/ChessBoard.vue","webpack:///./src/pieces/KingPiece.vue","webpack:///./src/figureProps.ts","webpack:///./src/pieces/KingPiece.vue?02ab","webpack:///./src/pieces/KingPiece.vue?18ae","webpack:///./src/pieces/QueenPiece.vue","webpack:///./src/pieces/QueenPiece.vue?2d9b","webpack:///./src/pieces/QueenPiece.vue?cd46","webpack:///./src/pieces/RookPiece.vue","webpack:///./src/pieces/RookPiece.vue?e47f","webpack:///./src/pieces/RookPiece.vue?bc96","webpack:///./src/pieces/BishopPiece.vue","webpack:///./src/pieces/BishopPiece.vue?5203","webpack:///./src/pieces/BishopPiece.vue?7a84","webpack:///./src/pieces/KnightPiece.vue","webpack:///./src/pieces/KnightPiece.vue?7e6e","webpack:///./src/pieces/KnightPiece.vue?835f","webpack:///./src/pieces/PawnPiece.vue","webpack:///./src/pieces/PawnPiece.vue?b2a3","webpack:///./src/pieces/PawnPiece.vue?9f13","webpack:///./src/pieces/ChessPiece.vue?5588","webpack:///./src/pieces/ChessPiece.vue?8bd6","webpack:///./src/pieces/ChessPiece.vue","webpack:///./src/chessRules.ts","webpack:///./src/chessBoardTools.ts","webpack:///./src/GamePlayer.vue?c751","webpack:///./src/GamePlayer.vue?1fe8","webpack:///./src/GamePlayer.vue","webpack:///./src/chessNotationParser.ts","webpack:///./src/App.vue?e7fb","webpack:///./src/App.vue?6661","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","makeMap","str","expectsLowerCase","map","list","split","length","val","toLowerCase","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","isHTMLTag","isSVGTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","bHasKey","String","looseIndexOf","arr","findIndex","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","hasOwn","Array","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toTypeString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","window","global","g","this","Function","e","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","options","_isEffect","isEffect","raw","effect","active","scheduler","undefined","includes","trackStack","push","shouldTrack","pop","resetTracking","id","uid","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","track","target","type","depsMap","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","effectsToAdd","shouldTriggerIteration","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","args","toRaw","createSetter","shallowSet","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","size","proto","set$1","deleteEntry","del","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","isMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isReactive","isProxy","convert","Boolean","__v_isRef","createRef","_rawValue","_shallow","_value","newVal","rawValue","unref","ref","shallowUnwrapHandlers","ComputedRefImpl","_setter","_dirty","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","values","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","queueJob","job","allowRecurse","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","index","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","props","propsOptions","slots","attrs","emit","render","renderCache","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","hasPropsChanged","prevProps","nextProps","nextKeys","updateHOCHostEl","subTree","queueEffectWithSuspense","suspense","isResolved","isRenderingCompiledSlot","setCompiledSlotRendering","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","currentInstance","selfName","displayName","registry","Fragment","Text","Static","blockStack","currentBlock","disableTracking","createBlock","children","patchFlag","dynamicProps","dynamicChildren","isVNode","__v_isVNode","isSameVNodeType","n1","n2","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","__vccOpts","class","klass","style","__isSuspense","isSuspense","__isTeleport","isTeleport","scopeId","component","anchor","targetAnchor","staticCount","extraProps","mergedProps","toMerge","existing","incoming","concat","mergeProps","createTextVNode","text","flag","createCommentVNode","asBlock","child","cloneIfMounted","slot","default","slotFlag","_ctx","event","handlerName","handler","emitted","normalizeEmitsOptions","comp","asMixin","appId","app","_uid","__emits","cached","emits","hasExtends","extendEmits","mixins","extends","isEmitListener","initProps","rawProps","isStateful","isSSR","setFullProps","needCastKeys","camelKey","emitsOptions","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","len","injectHook","hook","prepend","hooks","wrappedHook","__weh","isUnmounted","setCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","setTransitionHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","RegExp","getName","matches","pattern","registerKeepAliveHook","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","withDirectives","directives","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","createAppContext","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","provide","prodEffectOptions","queuePostRenderEffect","setRef","rawRef","oldRawRef","parentComponent","parentSuspense","oldRef","refs","doSet","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","container","isSVG","optimized","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","treeOwnerId","__scopeId","start","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","activate","mountComponent","updateComponent","initialVNode","emptyAppContext","uid$1","accessCache","setupContext","asyncDep","asyncResolved","bc","bm","bu","u","um","bum","da","rtg","rtc","createComponentInstance","renderer","initSlots","setupResult","PublicInstanceProxyHandlers","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","hydrateNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","end","_vnode","mt","mc","pc","pbc","createApp","watchEffect","doWatch","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","flush","onTrack","onTrigger","isRefSource","traverse","cleanup","onInvalidate","baseGetter","runner","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","parentProvides","inject","arguments","isInBeforeCreate","applyOptions","deferredData","deferredWatch","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","createWatcher","onDeactivated","onErrorCaptured","callHookFromMixins","base","callHookFromExtends","baseHook","selfHook","chainedMixins","mergeOptions","to","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","objectWithRefs","template","delimiters","_rc","getterOrOptions","setter","defineComponent","renderList","renderItem","svgNS","doc","document","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","content","temp","innerHTML","first","firstChild","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","createEvent","timeStamp","cachedNow","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","Transition","propsOrChildren","h","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","setTimeout","whenTransitionEnds","cls","classList","_vtc","requestAnimationFrame","expectedType","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","hasTransform","delays","toMs","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","number","_assign","castToNumber","domValue","activeElement","rendererOptions","transitionClasses","join","className","patchClass","removeAttribute","patchStyle","tagName","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","ensureRenderer","normalizeContainer","cellSize","required","validator","isInteger","viewport","fill","idx","points","viewbox","color","figureProps","cx","cy","transform","KingPiece","QueenPiece","RookPiece","BishopPiece","KnightPiece","PawnPiece","pieceType","square","isRankCorrect","rank","isFileCorrect","file","fugureComponentName","squareCoords","x","charCodeAt","y","figureTransform","isPieceAnimated","Piece","MoveAction","createEmptyChessBoard","rowsArr","char","fromCharCode","fromEntries","initChessBoard","board","figureSet","piece","Pawn","pieceDesc","addPiece","King","Queen","Bishop","Knight","Rook","initialSquare","movePiece","Error","ChessPiece","moves","chessBoardState","chessBoardStateFlat","flat","aKey","bKey","movesDemoTimers","clearTimeout","moveIdx","log","action","capture","capturePiece","castlingQueenside","castlingKingside","data-test","piecesCodes","actionCodes","ChessBoard","GamePlayer","algNotation","cellSizeText","movesState","parseNotation","moveSource","NA","moveParts","exec","fromFile","tokenizator","replaceAll","rows","cols","mount","containerOrSelector"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (val instanceof Map) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (val instanceof Set) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) && key[0] !== '-' && '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ref--9-0!./ChessBoard.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ref--9-0!./ChessBoard.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./KingPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./KingPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./QueenPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./QueenPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./RookPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./RookPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./BishopPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./BishopPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./KnightPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./KnightPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./PawnPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./PawnPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./ChessPiece.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/vue-loader/dist/index.js??ref--9-0!./ChessPiece.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ref--9-0!./App.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--3-0!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/vue-loader/dist/index.js??ref--9-0!./App.vue?vue&type=style&index=0&lang=css\"","import { EMPTY_OBJ, isArray, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        const shouldTriggerIteration = (type === \"add\" /* ADD */ &&\r\n            (!isArray(target) || isIntegerKey(key))) ||\r\n            (type === \"delete\" /* DELETE */ && !isArray(target));\r\n        if (shouldTriggerIteration ||\r\n            (type === \"set\" /* SET */ && target instanceof Map)) {\r\n            add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY));\r\n        }\r\n        if (shouldTriggerIteration && target instanceof Map) {\r\n            add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = arr[key](...args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return arr[key](...args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        const keyIsSymbol = isSymbol(key);\r\n        if (keyIsSymbol\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = proto.add.call(target, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get, set } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = set.call(target, key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get, delete: del } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = del.call(target, key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? target instanceof Map\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = getProto(target).clear.call(target);\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const isMap = rawTarget instanceof Map;\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && isMap);\r\n        const isKeyOnly = method === 'keys' && isMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(ref, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isProxy, shallowReactive, trigger, effect, stop, isReactive, reactive, shallowReadonly, track, proxyRefs, computed as computed$1, ref } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, isModelListener, isOn, capitalize, camelize, EMPTY_ARR, normalizeClass, isObject, normalizeStyle, EMPTY_OBJ, hyphenate, hasOwn, def, isReservedProp, toRawType, makeMap, remove, invokeArrayFns, NO, getGlobalThis, NOOP, hasChanged, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode);\r\n}\r\nfunction logError(err, type, contextVNode) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev so it's more noticeable\r\n        throw err;\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const children = rawChildren.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    if (children.length !== 1) {\r\n        return [vnode, undefined];\r\n    }\r\n    const childRoot = children[0];\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicIndex > -1) {\r\n            dynamicChildren[dynamicIndex] = updatedRoot;\r\n        }\r\n        else if (dynamicChildren && updatedRoot.patchFlag > 0) {\r\n            dynamicChildren.push(updatedRoot);\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (n2.suspense = createSuspenseBoundary(n2, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, suspense.subTree, hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // mount the fallback tree\r\n        patch(null, suspense.fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        n2.el = suspense.fallbackTree.el;\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    const { content, fallback } = normalizeSuspenseChildren(n2);\r\n    const oldSubTree = suspense.subTree;\r\n    const oldFallbackTree = suspense.fallbackTree;\r\n    if (!suspense.isResolved) {\r\n        patch(oldSubTree, content, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n        if (suspense.deps > 0) {\r\n            // still pending. patch the fallback tree.\r\n            patch(oldFallbackTree, fallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            n2.el = fallback.el;\r\n        }\r\n        // If deps somehow becomes 0 after the patch it means the patch caused an\r\n        // async dep component to unmount and removed its dep. It will cause the\r\n        // suspense to resolve and we don't need to do anything here.\r\n    }\r\n    else {\r\n        // just normal patch inner content as a fragment\r\n        patch(oldSubTree, content, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n        n2.el = content.el;\r\n    }\r\n    suspense.subTree = content;\r\n    suspense.fallbackTree = fallback;\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode } } = rendererInternals;\r\n    const getCurrentTree = () => suspense.isResolved || suspense.isHydrating\r\n        ? suspense.subTree\r\n        : suspense.fallbackTree;\r\n    const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        subTree: content,\r\n        fallbackTree: fallback,\r\n        isHydrating,\r\n        isResolved: false,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve() {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (suspense.isResolved) {\r\n                    throw new Error(`resolveSuspense() is called on an already resolved suspense boundary.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`resolveSuspense() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, subTree, fallbackTree, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else {\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount fallback tree\r\n                if (fallbackTree.el) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(fallbackTree);\r\n                    unmount(fallbackTree, parentComponent, suspense, true);\r\n                }\r\n                // move content from off-dom container to actual container\r\n                move(subTree, container, anchor, 0 /* ENTER */);\r\n            }\r\n            const el = (vnode.el = subTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (!parent.isResolved) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.isResolved = true;\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        recede() {\r\n            suspense.isResolved = false;\r\n            const { vnode, subTree, fallbackTree, parentComponent, container, hiddenContainer, isSVG, optimized } = suspense;\r\n            // move content tree back to the off-dom container\r\n            const anchor = next(subTree);\r\n            move(subTree, hiddenContainer, null, 1 /* LEAVE */);\r\n            // remount the fallback tree\r\n            patch(null, fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            const el = (vnode.el = fallbackTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // invoke @recede event\r\n            const onRecede = vnode.props && vnode.props.onRecede;\r\n            if (isFunction(onRecede)) {\r\n                onRecede();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            move(getCurrentTree(), container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return next(getCurrentTree());\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            // suspense is already resolved, need to recede.\r\n            // use queueJob so it's handled synchronously after patching the current\r\n            // suspense tree\r\n            if (suspense.isResolved) {\r\n                queueJob(() => {\r\n                    suspense.recede();\r\n                });\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted || suspense.isUnmounted) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                hydratedEl\r\n                    ? parentNode(hydratedEl)\r\n                    : parentNode(instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            unmount(suspense.subTree, parentComponent, parentSuspense, doRemove);\r\n            if (!suspense.isResolved) {\r\n                unmount(suspense.fallbackTree, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, suspense.subTree, parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const { default: d, fallback } = children;\r\n        return {\r\n            content: normalizeVNode(isFunction(d) ? d() : d),\r\n            fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            content: normalizeVNode(children),\r\n            fallback: normalizeVNode(null)\r\n        };\r\n    }\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && !suspense.isResolved) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                if (n2.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    const oldChildren = n1.children;\r\n                    const children = n2.children;\r\n                    for (let i = 0; i < children.length; i++) {\r\n                        // only inherit for non-patched nodes (i.e. static ones)\r\n                        if (!children[i].el) {\r\n                            children[i].el = oldChildren[i].el;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : [currentRenderingInstance, ref]\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        const cloned = cloneVNode(type, props);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isFunction(type) && '__vccOpts' in type) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref ? normalizeRef(extraProps) : vnode.ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...args) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"on${capitalize(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...args);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    let handlerName = `on${capitalize(event)}`;\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && event.startsWith('update:')) {\r\n        handlerName = `on${capitalize(hyphenate(event))}`;\r\n        handler = props[handlerName];\r\n    }\r\n    if (!handler) {\r\n        handler = props[handlerName + `Once`];\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const appId = appContext.app ? appContext.app._uid : -1;\r\n    const cache = comp.__emits || (comp.__emits = {});\r\n    const cached = cache[appId];\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (cache[appId] = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (cache[appId] = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(options, key.slice(2)));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff if hmr is enabled\r\n    !((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key]);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            value =\r\n                opt.type !== Function && isFunction(defaultValue)\r\n                    ? defaultValue(props)\r\n                    : defaultValue;\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const appId = appContext.app ? appContext.app._uid : -1;\r\n    const cache = comp.__props || (comp.__props = {});\r\n    const cached = cache[appId];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (cache[appId] = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (cache[appId] = [normalized, needCastKeys]);\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = (innerChild.transition = resolveTransitionHooks(innerChild, rawProps, state, instance));\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, { appear, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled }, state, instance) {\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => matches(exclude, name));\r\n        });\r\n        // cache sub tree in beforeMount/Update (i.e. right after the render)\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, instance.subTree);\r\n            }\r\n        };\r\n        onBeforeMount(cacheSubtree);\r\n        onBeforeUpdate(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                if (cached.type === subTree.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(subTree);\r\n                    // but invoke its deactivated hook here\r\n                    const da = subTree.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            let vnode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(vnode) ||\r\n                !(vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */)) {\r\n                current = null;\r\n                return vnode;\r\n            }\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                return (current = vnode);\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, vnode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const children = vnode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const [owner, ref] = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef[1];\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n            // if (scopeId) {\r\n            //   hostSetScopeId(el, scopeId)\r\n            // }\r\n            // if (parentComponent) {\r\n            //   const treeOwnerId = parentComponent.type.__scopeId\r\n            //   // vnode's own scopeId and the current patched component's scopeId is\r\n            //   // different - this is a slot content node.\r\n            //   if (treeOwnerId && treeOwnerId !== scopeId) {\r\n            //     hostSetScopeId(el, treeOwnerId + '-s')\r\n            //   }\r\n            //   const parentScopeId =\r\n            //     vnode === parentComponent.subTree && parentComponent.vnode.scopeId\r\n            //   if (parentScopeId) {\r\n            //     hostSetScopeId(el, parentScopeId)\r\n            //     if (parentComponent.parent) {\r\n            //       const treeOwnerId = parentComponent.parent.type.__scopeId\r\n            //       // vnode's own scopeId and the current patched component's scopeId is\r\n            //       // different - this is a slot content node.\r\n            //       if (treeOwnerId && treeOwnerId !== parentScopeId) {\r\n            //         hostSetScopeId(el, treeOwnerId + '-s')\r\n            //       }\r\n            //     }\r\n            //   }\r\n            // }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && parentSuspense.isResolved)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            if (vnode === parentComponent.subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            if (!parentSuspense) {\r\n                if ((process.env.NODE_ENV !== 'production'))\r\n                    warn('async setup() is used without a suspense boundary!');\r\n                return;\r\n            }\r\n            parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                next.el = vnode.el;\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                // reset refs\r\n                // only needed if previous patch had refs\r\n                if (instance.refs !== EMPTY_OBJ) {\r\n                    instance.refs = {};\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n        instance.update.allowRecurse = true;\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            !parentSuspense.isResolved &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    /**\r\n     * #1156\r\n     * When a component is HMR-enabled, we need to make sure that all static nodes\r\n     * inside a block also inherit the DOM element from the previous tree so that\r\n     * HMR updates (which are full updates) can retrieve the element for patching.\r\n     *\r\n     * Dev only.\r\n     */\r\n    const traverseStaticChildren = (n1, n2) => {\r\n        const ch1 = n1.children;\r\n        const ch2 = n2.children;\r\n        if (isArray(ch1) && isArray(ch2)) {\r\n            for (let i = 0; i < ch1.length; i++) {\r\n                // this is only called in the optimized path so array children are\r\n                // guaranteed to be vnodes\r\n                const c1 = ch1[i];\r\n                const c2 = (ch2[i] = cloneIfMounted(ch2[i]));\r\n                if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                    if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                        c2.el = c1.el;\r\n                    }\r\n                    traverseStaticChildren(c1, c2);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    const isRefSource = isRef(source);\r\n    if (isRefSource) {\r\n        getter = () => source.value;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || isRefSource || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows it\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'pre') {\r\n        // ensure it's queued before component updates (which have positive ids)\r\n        job.id = -1;\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (value instanceof Map) {\r\n        value.forEach((v, key) => {\r\n            // to register mutation dep for existing keys\r\n            traverse(value.get(key), seen);\r\n        });\r\n    }\r\n    else if (value instanceof Set) {\r\n        value.forEach(v => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeUnmount, unmounted, render, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', options, publicThis, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from, opt.default);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        for (const key in provides) {\r\n            provide(key, provides[key]);\r\n        }\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', options, publicThis, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, options, ctx, globalMixins) {\r\n    callHookFromMixins(name, globalMixins, ctx);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, base, ctx);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, mixins, ctx);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        selfHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, base, ctx) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, base.extends, ctx);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        baseHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, mixins, ctx) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, chainedMixins, ctx);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            fn.call(ctx);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`);\r\n    }\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    mergeOptions(options, raw, instance);\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else if (!hasOwn(to, key)) {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: () => nextTick,\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ && key[0] === '$' && hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${capitalize(key)}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.0-rc.10\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, unref, Fragment, h, BaseTransition, useTransitionState, onUpdated, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    onMounted(() => {\r\n        watchEffect(() => {\r\n            setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n        });\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const { isResolved, isHydrating, fallbackTree, subTree } = vnode.suspense;\r\n        if (isResolved || isHydrating) {\r\n            vnode = subTree;\r\n        }\r\n        else {\r\n            vnode.suspense.effects.push(() => {\r\n                setVarsOnVNode(subTree, vars, prefix);\r\n            });\r\n            vnode = fallbackTree;\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el.value = value == null ? '' : value;\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, binding, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map(getValue);\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            option.selected = looseIndexOf(value, optionValue) > -1;\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","import { setDevtoolsHook, warn } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { getGlobalThis } from '@vue/shared';\n\nfunction initDev() {\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    {\r\n        console.info(`You are running a development build of Vue.\\n` +\r\n            `Make sure to use the production build (*.prod.js) when deploying for production.`);\r\n    }\r\n}\n\n// This entry exports the runtime only, and is built as\r\n(process.env.NODE_ENV !== 'production') && initDev();\r\nconst compile = () => {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Runtime compilation is not supported in this build of Vue.` +\r\n            ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                ) /* should not happen */);\r\n    }\r\n};\n\nexport { compile };\n","<template>\n  <div\n    class=\"chess-board-wrapper\"\n    :style=\"{\n      width: cellSize * 8,\n      height: cellSize * 8,\n    }\"\n  >\n    <ChessBoard :cellSize=\"cellSize\" />\n    <GamePlayer :moves=\"movesState\" :cellSize=\"cellSize\" />\n  </div>\n  <div class=\"controls\">\n    <input max=\"85\" min=\"55\" class=\"board-size\" type=\"number\" v-model=\"cellSizeText\">\n    <textarea\n      class=\"notation-textarea\"\n      v-model=\"algNotation\"\n      rows=\"25\"\n      cols=\"25\"\n    />\n    <button class=\"parse-button\" @click=\"parseNotation\">\n      Execute\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport ChessBoard from './ChessBoard.vue'\nimport GamePlayer from './GamePlayer.vue'\nimport { tokenizator, normalizeNotation } from './chessNotationParser'\nimport { Move } from './chessRules'\n\nexport default defineComponent({\n  components: {\n    ChessBoard,\n    GamePlayer,\n  },\n  setup() {\n    let cellSize = ref(75)\n    let algNotation = ref(\n      '1.e2-e4 e7-e5\\n' +\n      '2.Кg1-f3 Кb8-c6\\n' +\n      '3.d2-d4 e5xd4\\n' +\n      '4.Сf1-c4 d7-d6\\n' +\n      '5.Кf3xd4 Сf8-e7\\n' +\n      '6.0-0 Кg8-f6\\n' +\n      '7.Кb1-c3 0-0\\n' +\n      '8.h2-h3 Кc6xd4\\n' +\n      '9.Фd1xd4 Кf6-d7\\n' +\n      '10.Кc3-d5 Сe7-f6\\n' +\n      '11.Кd5xf6+ Фd8xf6\\n' +\n      '12.Сc1-e3 Лf8-e8\\n' +\n      '13.f2-f3 Фf6-g6\\n' +\n      '14.Крg1-h1 Кd7-f6\\n' +\n      '15.g2-g4 h7-h5\\n' +\n      '16.Сc4-d3 h5xg4\\n' +\n      '17.h3xg4 Сc8xg4\\n' +\n      '18.f3xg4 Кf6xg4\\n' +\n      '19.Сe3-f4 Лe8-e6\\n' +\n      '20.Лf1-f3 Лa8-e8\\n' +\n      '21.Лf3-h3 c7-c5\\n' +\n      '22.Фd4-g1 c5-c4\\n' +\n      '23.Лh3-h4 c4xd3\\n' +\n      '24.c2xd3 Кg4-h6\\n' +\n      '25.Сf4xh6 Фg6xh6\\n' +\n      '26.Фg1-h2 Фh6xh4\\n' +\n      '27.Фh2xh4 Лe6-h6\\n' +\n      '28.Фh4xh6 g7xh6\\n' +\n      '29.Лa1-c1 Лe8-e5\\n' +\n      '30.Лc1-c7 Лe5-b5\\n' +\n      '31.b2-b3 Лb5-a5\\n' +\n      '32.Лc7xb7 Лa5xa2\\n' +\n      '33.Лb7-d7 Лa2-a6\\n' +\n      '34.Крh1-g2 Крg8-g7\\n' +\n      '35.Крg2-f3 Крg7-f6\\n' +\n      '36.Крf3-e3 Крf6-e6\\n' +\n      '37.Лd7-c7 f7-f5\\n' +\n      '38.Лc7-h7 f5xe4\\n' +\n      '39.Крe3xe4 Лa6-b6\\n' +\n      '40.Лh7xh6+ Крe6-d7\\n' +\n      '41.Крe4-d5 Лb6-b5+\\n' +\n      '42.Крd5-c4 Лb5-c5+\\n' +\n      '43.Крc4-d4 Лc5-b5\\n' +\n      '44.Лh6-h7+ Крd7-c6\\n' +\n      '45.Лh7xa7 Лb5xb3\\n' +\n      '46.Крd4-c4 Лb3-b1\\n' +\n      '47.Лa7-a6+ Крc6-d7\\n' +\n      '48.d3-d4 Крd7-e6\\n' +\n      '49.Лa6-a3'\n    )\n    let cellSizeText = computed({\n      set(value: any) {\n        cellSize.value = parseInt(value)\n      },\n      get: () => cellSize.value\n    })\n    const movesState = ref<Array<Move>>([])\n\n    const parseNotation = () => {\n      movesState.value = tokenizator(\n        normalizeNotation(algNotation.value)\n      )\n    }\n\n    return {\n      cellSizeText,\n      cellSize,\n      algNotation,\n      parseNotation,\n      movesState,\n    }\n  }\n})\n</script>\n\n<style>\n#app {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n\n}\n\n.notation-textarea {\n  width: 200px;\n  height: 600px;\n  margin: 0 auto;\n}\n\n.parse-button {\n  height: 40px;\n  width: 200px;\n  margin: 0 auto;\n  margin: 24px 0 0 0;\n}\n\n.board-size {\n  width: 200px;\n  margin: 0 0 24px 0;\n}\n\n.controls {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n}\n\n.chess-board-wrapper {\n  position: relative;\n}\n</style>\n","\nimport { defineComponent, PropType } from 'vue'\n\nexport default defineComponent({\n  props: {\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n})\n","import { render } from \"./ChessBoard.vue?vue&type=template&id=40939c59\"\nimport script from \"./ChessBoard.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessBoard.vue?vue&type=script&lang=ts\"\n\nimport \"./ChessBoard.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg\n    class=\"chess-board\"\n    :viewport=\"`0 0 ${cellSize * 8} ${cellSize * 8}`\"\n    :style=\"{\n      width: cellSize * 8,\n      height: cellSize * 8,\n    }\"\n  >\n    <polygon\n      v-for=\"(_, idx) in Array(32).fill(0)\"\n      :key=\"idx\"\n      :points=\"`\n        ${\n          cellSize * (((idx%4) * 2 ) + 1 - Math.floor(idx/4)%2)\n        },${\n          Math.floor(idx/4) * cellSize\n        }\n        ${\n          cellSize * (((idx%4) * 2 ) + 2 - Math.floor(idx/4)%2)\n        },${ Math.floor(idx/4) * cellSize }\n        ${\n          cellSize * (((idx%4) * 2 ) + 2 - Math.floor(idx/4)%2)\n        },${\n          (Math.floor(idx/4) + 1) * cellSize\n        },\n        ${\n          cellSize * (((idx%4) * 2 ) + 1 - Math.floor(idx/4)%2)\n        },${\n          (Math.floor(idx/4) + 1) * cellSize\n        }\n      `\"\n      style=\"fill:#5A3E2A;\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nexport default defineComponent({\n  props: {\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n})\n</script>\n\n<style>\n.chess-board {\n  background-color: #fff8dc;\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n</style>","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"king-piece-black-g\"\n    >\n      <path\n        d=\"M 22.5,11.63 L 22.5,6\"\n        class=\"king-piece-black-path1\"\n      />\n      <path\n        d=\"\n          M 22.5,\n          25 C 22.5,\n          25 27,\n          17.5 25.5,\n          14.5 C 25.5,\n          14.5 24.5,\n          12 22.5,\n          12 C 20.5,\n          12 19.5,\n          14.5 19.5,\n          14.5 C 18,\n          17.5 22.5,\n          25 22.5,\n          25\n        \"\n        class=\"king-piece-black-path2\"\n      />\n      <path\n        d=\"\n          M 11.5,\n          37 C 17,\n          40.5 27,\n          40.5 32.5,\n          37 L 32.5,\n          30 C 32.5,\n          30 41.5,\n          25.5 38.5,\n          19.5 C 34.5,\n          13 25,\n          16 22.5,\n          23.5 L 22.5,\n          27 L 22.5,\n          23.5 C 19,\n          16 9.5,\n          13 6.5,\n          19.5 C 3.5,\n          25.5 11.5,\n          29.5 11.5,\n          29.5 L 11.5,\n          37 z\n        \"\n        class=\"king-piece-black-path3\"\n      />\n      <path\n        d=\"M 20,8 L 25,8\"\n        class=\"king-piece-black-path4\"\n      />\n      <path\n        d=\"\n          M 32,\n          29.5 C 32,\n          29.5 40.5,\n          25.5 38.03,\n          19.85 C 34.15,\n          14 25,\n          18 22.5,\n          24.5 L 22.51,\n          26.6 L 22.5,\n          24.5 C 20,\n          18 9.906,\n          14 6.997,\n          19.85 C 4.5,\n          25.5 11.85,\n          28.85 11.85,\n          28.85\n        \"\n        class=\"king-piece-black-path5\"\n      />\n      <path\n        d=\"\n          M 11.5,\n          30 C 17,\n          27 27,\n          27 32.5,\n          30 M 11.5,\n          33.5 C 17,\n          30.5 27,\n          30.5 32.5,\n          33.5 M 11.5,\n          37 C 17,\n          34 27,\n          34 32.5,\n          37\n        \"\n        class=\"king-piece-black-path6\"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"king-piece-white-g\"\n    >\n      <path\n        class=\"king-piece-white-path1\"\n        d=\"M 22.5,11.63 L 22.5,6\"\n      />\n      <path\n        class=\"king-piece-white-path2\"\n        d=\"M 20,8 L 25,8\"\n      />\n      <path\n        class=\"king-piece-white-path3\"\n        d=\"\n          M 22.5,\n          25 C 22.5,\n          25 27,\n          17.5 25.5,\n          14.5 C 25.5,\n          14.5 24.5,\n          12 22.5,\n          12 C 20.5,\n          12 19.5,\n          14.5 19.5,\n          14.5 C 18,\n          17.5 22.5,\n          25 22.5,\n          25\n        \"\n      />\n      <path\n        class=\"king-piece-white-path4\"\n        d=\"\n          M 11.5,\n          37 C 17,\n          40.5 27,\n          40.5 32.5,\n          37 L 32.5,\n          30 C 32.5,\n          30 41.5,\n          25.5 38.5,\n          19.5 C 34.5,\n          13 25,\n          16 22.5,\n          23.5 L 22.5,\n          27 L 22.5,\n          23.5 C 19,\n          16 9.5,\n          13 6.5,\n          19.5 C 3.5,\n          25.5 11.5,\n          29.5 11.5,\n          29.5 L 11.5,\n          37 z\n        \"\n      />\n      <path\n        class=\"king-piece-white-path5\"\n        d=\"M 11.5,30 C 17,27 27,27 32.5,30\"\n      />\n      <path\n        class=\"king-piece-white-path6\"\n        d=\"M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5\"\n      />\n      <path\n        class=\"king-piece-white-path7\"\n        d=\"M 11.5,37 C 17,34 27,34 32.5,37\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.king-piece-black-g {\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.king-piece-black-path1,\n.king-piece-white-path1,\n.king-piece-white-path2 {\n  fill: none;\n  stroke: #000000;\n  stroke-linejoin: miter;\n}\n\n.king-piece-black-path2 {\n  fill: #000000;\n  fill-opacity: 1;\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n}\n\n.king-piece-black-path3 {\n  fill:#000000;\n  stroke:#000000;\n}\n\n.king-piece-black-path4 {\n  fill:none;\n  stroke:#000000;\n  stroke-linejoin:miter;\n}\n\n.king-piece-black-path5,\n.king-piece-black-path6 {\n  fill:none;\n  stroke:#ffffff;\n}\n\n.king-piece-white-g {\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.king-piece-white-path3 {\n  fill: #ffffff;\n  stroke: #000000;\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n}\n\n.king-piece-white-path4 {\n  fill: #ffffff;\n  stroke: #000000;\n}\n\n.king-piece-white-path5,\n.king-piece-white-path6,\n.king-piece-white-path7 {\n  fill: none;\n  stroke: #000000;\n}\n</style>","import { PropType } from 'vue'\nimport { PieceColor } from './chessRules'\n\nexport default {\n  color: {\n    type: String as PropType<PieceColor>,\n    required: true,\n    validator(value: PieceColor) {\n      return [\n        'black',\n        'white',\n      ].includes(value)\n    }\n  },\n}","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./KingPiece.vue?vue&type=template&id=d66bec82\"\nimport script from \"./KingPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./KingPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./KingPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"queen-piece-black-g1\"\n    >\n      <g class=\"queen-piece-black-g2\">\n        <circle cx=\"6\" cy=\"12\" r=\"2.75\"/>\n        <circle cx=\"14\" cy=\"9\" r=\"2.75\"/>\n        <circle cx=\"22.5\" cy=\"8\" r=\"2.75\"/>\n        <circle cx=\"31\" cy=\"9\" r=\"2.75\"/>\n        <circle cx=\"39\" cy=\"12\" r=\"2.75\"/>\n      </g>\n      <path\n        class=\"queen-piece-black-path1\"\n        d=\"\n          M 9\n          26 C 17.5,\n          24.5 30,\n          24.5 36,\n          26 L 38.5,\n          13.5 L 31,\n          25 L 30.7,\n          10.9 L 25.5,\n          24.5 L 22.5,\n          10 L 19.5,\n          24.5 L 14.3,\n          10.9 L 14,\n          25 L 6.5,\n          13.5 L 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-black-path2\"\n        d=\"\n          M 9,\n          26 C 9,\n          28 10.5,\n          28 11.5,\n          30 C 12.5,\n          31.5 12.5,\n          31 12,\n          33.5 C 10.5,\n          34.5 10.5,\n          36 10.5,\n          36 C 9,\n          37.5 11,\n          38.5 11,\n          38.5 C 17.5,\n          39.5 27.5,\n          39.5 34,\n          38.5 C 34,\n          38.5 35.5,\n          37.5 34,\n          36 C 34,\n          36 34.5,\n          34.5 33,\n          33.5 C 32.5,\n          31 32.5,\n          31.5 33.5,\n          30 C 34.5,\n          28 36,\n          28 36,\n          26 C 27.5,\n          24.5 17.5,\n          24.5 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-black-path3\"\n        d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\n      />\n      <path\n        class=\"queen-piece-black-path4\"\n        d=\"M 11,29 A 35,35 1 0 1 34,29\"\n      />\n      <path\n        class=\"queen-piece-black-path5\"\n        d=\"M 12.5,31.5 L 32.5,31.5\"\n      />\n      <path\n        class=\"queen-piece-black-path6\"\n        d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\n      />\n      <path\n        class=\"queen-piece-black-path7\"\n        d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"queen-piece-white-g\"\n    >\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(-1,-1)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(15.5,-5.5)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(32,-1)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(7,-4.5)\"\n      />\n      <path\n        d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\n        transform=\"translate(24,-4)\"\n      />\n      <path\n        class=\"queen-piece-white-path1\"\n        d=\"\n          M 9,\n          26 C 17.5,\n          24.5 30,\n          24.5 36,\n          26 L 38,\n          14 L 31,\n          25 L 31,\n          11 L 25.5,\n          24.5 L 22.5,\n          9.5 L 19.5,\n          24.5 L 14,\n          10.5 L 14,\n          25 L 7,\n          14 L 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-white-path2\"\n        d=\"\n          M 9,\n          26 C 9,\n          28 10.5,\n          28 11.5,\n          30 C 12.5,\n          31.5 12.5,\n          31 12,\n          33.5 C 10.5,\n          34.5 10.5,\n          36 10.5,\n          36 C 9,\n          37.5 11,\n          38.5 11,\n          38.5 C 17.5,\n          39.5 27.5,\n          39.5 34,\n          38.5 C 34,\n          38.5 35.5,\n          37.5 34,\n          36 C 34,\n          36 34.5,\n          34.5 33,\n          33.5 C 32.5,\n          31 32.5,\n          31.5 33.5,\n          30 C 34.5,\n          28 36,\n          28 36,\n          26 C 27.5,\n          24.5 17.5,\n          24.5 9,\n          26 z\n        \"\n      />\n      <path\n        class=\"queen-piece-white-path3\"\n        d=\"M 11.5,30 C 15,29 30,29 33.5,30\"\n      />\n      <path\n        class=\"queen-piece-white-path4\"\n        d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.queen-piece-g1 {\n  opacity: 1;\n  fill: #000000;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.queen-piece-g2,\n.queen-piece-path1 {\n  fill: #000000;\n  stroke: none;\n}\n\n.queen-piece-path2,\n.queen-piece-path3 {\n  stroke-linecap:butt; \n}\n\n.queen-piece-path3 {\n  fill: none;\n  stroke: #000000;\n}\n\n.queen-piece-path4,\n.queen-piece-path5,\n.queen-piece-path6,\n.queen-piece-path7 {\n  fill:none;\n  stroke:#ffffff;\n}\n\n.queen-piece-white-g {\n  opacity: 1;\n  fill: #ffffff;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.queen-piece-white-path1,\n.queen-piece-white-path2 {\n  stroke-linecap: butt;\n}\n\n.queen-piece-white-path3,\n.queen-piece-white-path4 {\n  fill: none;\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./QueenPiece.vue?vue&type=template&id=1b070116\"\nimport script from \"./QueenPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./QueenPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./QueenPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg\n    viewbox=\"0 0 45 45\"\n    class=\"chess-piece\"\n  >\n    <g\n      v-if=\"color === 'black'\"\n      class=\"rook-piece-black-g\"\n    >\n      <path\n        class=\"rook-piece-black-path1\"\n        d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\n      />\n      <path\n        class=\"rook-piece-black-path2\"\n        d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\n      />\n      <path\n        class=\"rook-piece-black-path3\"\n        d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z\"\n      />\n      <path\n        class=\"rook-piece-black-path4\"\n        d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\n      />\n      <path\n        class=\"rook-piece-black-path5\"\n        d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\n      />\n      <path\n        class=\"rook-piece-black-path6\"\n        d=\"\n          M 11,\n          14 L 11,\n          9 L 15,\n          9 L 15,\n          11 L 20,\n          11 L 20,\n          9 L 25,\n          9 L 25,\n          11 L 30,\n          11 L 30,\n          9 L 34,\n          9 L 34,\n          14 L 11,\n          14 z\n        \"\n      />\n      <path\n        class=\"rook-piece-black-path7\"\n        d=\"M 12,35.5 L 33,35.5 L 33,35.5\"\n      />\n      <path\n        class=\"rook-piece-black-path8\"\n        d=\"M 13,31.5 L 32,31.5\"\n      />\n      <path\n        class=\"rook-piece-black-path9\"\n        d=\"M 14,29.5 L 31,29.5\"\n      />\n      <path\n        class=\"rook-piece-black-path10\"\n        d=\"M 14,16.5 L 31,16.5\"\n      />\n      <path\n        class=\"rook-piece-black-path11\"\n        d=\"M 11,14 L 34,14\"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"rook-piece-white-g\"\n    >\n      <path\n        class=\"rook-piece-white-path1\"\n        d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\n      />\n      <path\n        class=\"rook-piece-white-path2\"\n        d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\n      />\n      <path\n        class=\"rook-piece-white-path3\"\n        d=\"\n          M 11,\n          14 L 11,\n          9 L 15,\n          9 L 15,\n          11 L 20,\n          11 L 20,\n          9 L 25,\n          9 L 25,\n          11 L 30,\n          11 L 30,\n          9 L 34,\n          9 L 34,\n          14\n        \"\n      />\n      <path\n        class=\"rook-piece-white-path4\"\n        d=\"M 34,14 L 31,17 L 14,17 L 11,14\"\n      />\n      <path\n        class=\"rook-piece-white-path5\"\n        d=\"M 31,17 L 31,29.5 L 14,29.5 L 14,17\"\n      />\n      <path\n        class=\"rook-piece-white-path6\"\n        d=\"M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5\"\n      />\n      <path\n        class=\"rook-piece-white-path7\"\n        d=\"M 11,14 L 34,14\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.rook-piece-black-g {\n  opacity: 1;\n  fill: #000000;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.rook-piece-black-path1,\n.rook-piece-black-path2,\n.rook-piece-black-path3,\n.rook-piece-black-path5,\n.rook-piece-black-path6,\n.rook-piece-white-path1,\n.rook-piece-white-path2,\n.rook-piece-white-path3 {\n  stroke-linecap: butt;\n}\n\n.rook-piece-black-path4,\n.rook-piece-white-path5 {\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n}\n\n.rook-piece-black-path7,\n.rook-piece-black-path8,\n.rook-piece-black-path9,\n.rook-piece-black-path10,\n.rook-piece-black-path11 {\n  fill: none;\n  stroke: #ffffff;\n  stroke-width: 1;\n  stroke-linejoin: miter;\n}\n\n.rook-piece-white-g {\n  opacity: 1;\n  fill: #ffffff;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.rook-piece-white-path7 {\n  fill: none;\n  stroke: #000000;\n  stroke-linejoin: miter;\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./RookPiece.vue?vue&type=template&id=086bdd7e\"\nimport script from \"./RookPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./RookPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./RookPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"piece-bishop-black-g1\"\n    >\n      <g class=\"piece-bishop-black-g2\"> \n        <path d=\"\n          M 9,\n          36 C 12.39,\n          35.03 19.11,\n          36.43 22.5,\n          34 C 25.89,\n          36.43 32.61,\n          35.03 36,\n          36 C 36,\n          36 37.65,\n          36.54 39,\n          38 C 38.32,\n          38.97 37.35,\n          38.99 36,\n          38.5 C 32.61,\n          37.53 25.89,\n          38.96 22.5,\n          37.5 C 19.11,\n          38.96 12.39,\n          37.53 9,\n          38.5 C 7.646,\n          38.99 6.677,\n          38.97 6,\n          38 C 7.354,\n          36.06 9,\n          36 9,\n          36 z\n        \"/>\n        <path d=\"\n          M 15,\n          32 C 17.5,\n          34.5 27.5,\n          34.5 30,\n          32 C 30.5,\n          30.5 30,\n          30 30,\n          30 C 30,\n          27.5 27.5,\n          26 27.5,\n          26 C 33,\n          24.5 33.5,\n          14.5 22.5,\n          10.5 C 11.5,\n          14.5 12,\n          24.5 17.5,\n          26 C 17.5,\n          26 15,\n          27.5 15,\n          30 C 15,\n          30 14.5,\n          30.5 15,\n          32 z\n        \"/>\n        <path d=\"\n          M 25 8 A 2.5 2.5 0 1 1  20,\n          8 A 2.5 2.5 0 1 1  25 8 z\n        \"/>\n      </g>\n      <path\n        class=\"piece-bishop-black-path\"\n        d=\"\n          M 17.5,\n          26 L 27.5,\n          26 M 15,\n          30 L 30,\n          30 M 22.5,\n          15.5 L 22.5,\n          20.5 M 20,\n          18 L 25,\n          18\n        \"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"piece-bishop-white-g1\"\n    >\n      <g class=\"piece-bishop-white-g2\">\n        <path\n          d=\"\n            M 9,\n            36 C 12.39,\n            35.03 19.11,\n            36.43 22.5,\n            34 C 25.89,\n            36.43 32.61,\n            35.03 36,\n            36 C 36,\n            36 37.65,\n            36.54 39,\n            38 C 38.32,\n            38.97 37.35,\n            38.99 36,\n            38.5 C 32.61,\n            37.53 25.89,\n            38.96 22.5,\n            37.5 C 19.11,\n            38.96 12.39,\n            37.53 9,\n            38.5 C 7.646,\n            38.99 6.677,\n            38.97 6,\n            38 C 7.354,\n            36.06 9,\n            36 9,\n            36 z\n          \"\n        />\n        <path d=\"\n            M 15,\n            32 C 17.5,\n            34.5 27.5,\n            34.5 30,\n            32 C 30.5,\n            30.5 30,\n            30 30,\n            30 C 30,\n            27.5 27.5,\n            26 27.5,\n            26 C 33,\n            24.5 33.5,\n            14.5 22.5,\n            10.5 C 11.5,\n            14.5 12,\n            24.5 17.5,\n            26 C 17.5,\n            26 15,\n            27.5 15,\n            30 C 15,\n            30 14.5,\n            30.5 15,\n            32 z\n        \"/>\n        <path d=\"\n          M 25 8 A 2.5 2.5 0 1 1  20,\n          8 A 2.5 2.5 0 1 1  25 8 z\n        \"/>\n      </g>\n      <path\n        class=\"piece-bishop-white-path\"\n        d=\"\n          M 17.5,\n          26 L 27.5,\n          26 M 15,\n          30 L 30,\n          30 M 22.5,\n          15.5 L 22.5,\n          20.5 M 20,\n          18 L 25,\n          18\n        \"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.piece-bishop-black-g1 {\n  opacity: 1;\n  fill: none;\n  fill-rule: evenodd;\n  fill-opacity: 1;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-bishop-black-g2 {\n  fill: #000000;\n  stroke: #000000;\n  stroke-linecap: butt;\n}\n\n.piece-bishop-black-path {\n  fill: none;\n  stroke: #ffffff;\n  stroke-linejoin: miter;\n}\n\n.piece-bishop-white-g1 {\n  opacity: 1;\n  fill: none;\n  fill-rule: evenodd;\n  fill-opacity: 1;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-bishop-white-g2 {\n  fill: #ffffff;\n  stroke: #000000;\n  stroke-linecap: butt;\n}\n.piece-bishop-white-path {\n  fill: none;\n  stroke: #000000;\n  stroke-linejoin: miter\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./BishopPiece.vue?vue&type=template&id=26bedb6f\"\nimport script from \"./BishopPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./BishopPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./BishopPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg viewbox=\"0 0 45 45\" class=\"chess-piece\">\n    <g\n      v-if=\"color === 'black'\"\n      class=\"piece-knight-g-black\"\n    >\n      <path\n        class=\"piece-knight-black-path1\"\n        d=\"\n          M 22,\n          10 C 32.5,\n          11 38.5,\n          18 38,\n          39 L 15,\n          39 C 15,\n          30 25,\n          32.5 23,\n          18\n        \"\n      />\n      <path\n        class=\"piece-knight-black-path2\"\n        d=\"\n          M 24,\n          18 C 24.38,\n          20.91 18.45,\n          25.37 16,\n          27 C 13,\n          29 13.18,\n          31.34 11,\n          31 C 9.958,\n          30.06 12.41,\n          27.96 11,\n          28 C 10,\n          28 11.19,\n          29.23 10,\n          30 C 9,\n          30 5.997,\n          31 6,\n          26 C 6,\n          24 12,\n          14 12,\n          14 C 12,\n          14 13.89,\n          12.1 14,\n          10.5 C 13.27,\n          9.506 13.5,\n          8.5 13.5,\n          7.5 C 14.5,\n          6.5 16.5,\n          10 16.5,\n          10 L 18.5,\n          10 C 18.5,\n          10 19.28,\n          8.008 21,\n          7 C 22,\n          7 22,\n          10 22,\n          10\n        \"\n      />\n      <path\n        class=\"piece-knight-black-path3\"\n        d=\"\n          M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,\n          25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\n        \"\n      />\n      <path\n        class=\"piece-knight-black-path4\"\n        d=\"\n          M 15 15.5 A 0.5 1.5 0 1 1  14,\n          15.5 A 0.5 1.5 0 1 1  15 15.5 z\n        \"\n        transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n      />\n      <path\n        class=\"piece-knight-black-path5\"\n        d=\"\n          M 24.55,\n          10.4 L 24.1,\n          11.85 L 24.6,\n          12 C 27.75,\n          13 30.25,\n          14.49 32.5,\n          18.75 C 34.75,\n          23.01 35.75,\n          29.06 35.25,\n          39 L 35.2,\n          39.5 L 37.45,\n          39.5 L 37.5,\n          39 C 38,\n          28.94 36.62,\n          22.15 34.25,\n          17.66 C 31.88,\n          13.17 28.46,\n          11.02 25.06,\n          10.5 L 24.55,\n          10.4 z\n        \"\n      />\n    </g>\n\n    <g\n      v-if=\"color === 'white'\"\n      class=\"piece-knight-white-g\"\n    >\n      <path\n        class=\"piece-knight-white-path1\"\n        d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\n        style=\"\n          fill:#ffffff;\n          stroke:#000000;\n        \"\n      />\n      <path\n        class=\"piece-knight-white-path2\"\n        d=\"\n          M 24,\n          18 C 24.38,\n          20.91 18.45,\n          25.37 16,\n          27 C 13,\n          29 13.18,\n          31.34 11,\n          31 C 9.958,\n          30.06 12.41,\n          27.96 11,\n          28 C 10,\n          28 11.19,\n          29.23 10,\n          30 C 9,\n          30 5.997,\n          31 6,\n          26 C 6,\n          24 12,14 12,\n          14 C 12,\n          14 13.89,\n          12.1 14,\n          10.5 C 13.27,\n          9.506 13.5,\n          8.5 13.5,\n          7.5 C 14.5,\n          6.5 16.5,\n          10 16.5,\n          10 L 18.5,\n          10 C 18.5,\n          10 19.28,\n          8.008 21,\n          7 C 22,\n          7 22,\n          10 22,\n          10\n        \"\n      />\n      <path\n        class=\"piece-knight-white-path3\"\n        d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\n      />\n      <path\n        class=\"piece-knight-white-path4\"\n        d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\n        transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.piece-knight-black-g {\n  opacity: 1;\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-knight-black-path1,\n.piece-knight-black-path2 {\n  fill: #000000;\n  stroke: #000000;\n}\n\n.piece-knight-black-path3,\n.piece-knight-black-path4 {\n  fill: #ffffff;\n  stroke: #ffffff;\n}\n\n.piece-knight-black-path5 {\n  fill: #ffffff;\n  stroke: none;\n}\n\n.piece-knight-white-g {\n  opacity: 1;\n  fill: none;\n  fill-opacity: 1;\n  fill-rule: evenodd;\n  stroke: #000000;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n}\n\n.piece-knight-white-path1,\n.piece-knight-white-path2 {\n  fill:#ffffff;\n  stroke:#000000;\n}\n\n.piece-knight-white-path3,\n.piece-knight-white-path4 {\n  fill:#000000;\n  stroke:#000000;\n}\n\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./KnightPiece.vue?vue&type=template&id=53fd7f20\"\nimport script from \"./KnightPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./KnightPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./KnightPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <svg\n    viewbox=\"0 0 45 45\"\n    class=\"chess-piece\"\n  >\n    <path\n      :class=\"{\n        'piece-pawn-black': color === 'black',\n        'piece-pawn-white': color === 'white'\n      }\"\n      d=\"\n        M 22,\n        9 C 19.79,\n        9 18,\n        10.79 18,\n        13 C 18,\n        13.89 18.29,\n        14.71 18.78,\n        15.38 C 16.83,\n        16.5 15.5,\n        18.59 15.5,\n        21 C 15.5,\n        23.03 16.44,\n        24.84 17.91,\n        26.03 C 14.91,\n        27.09 10.5,\n        31.58 10.5,\n        39.5 L 33.5,\n        39.5 C 33.5,\n        31.58 29.09,\n        27.09 26.09,\n        26.03 C 27.56,\n        24.84 28.5,\n        23.03 28.5,\n        21 C 28.5,\n        18.59 27.17,\n        16.5 25.22,\n        15.38 C 25.71,\n        14.71 26,\n        13.89 26,\n        13 C 26,\n        10.79 24.21,\n        9 22,\n        9 z\n      \"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n</script>\n\n<style>\n.piece-pawn-black,\n.piece-pawn-white {\n  opacity: 1;\n  fill-opacity: 1;\n  fill-rule: nonzero;\n  stroke-width: 1.5;\n  stroke-linecap: round;\n  stroke-linejoin: miter;\n  stroke-miterlimit: 4;\n  stroke-dasharray: none;\n  stroke-opacity: 1;\n  stroke: #000000;\n}\n\n.piece-pawn-black {\n  fill: #000000;\n  \n}\n\n.piece-pawn-white {\n  fill: #ffffff;\n}\n</style>","\nimport { defineComponent } from 'vue'\nimport figureProps from '../figureProps'\n\nexport default defineComponent({\n  props: figureProps\n})\n","import { render } from \"./PawnPiece.vue?vue&type=template&id=cfdd4acc\"\nimport script from \"./PawnPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./PawnPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./PawnPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","\nimport { computed, ref, watch, defineComponent, PropType } from 'vue'\nimport KingPiece from './KingPiece.vue'\nimport QueenPiece from './QueenPiece.vue'\nimport RookPiece from './RookPiece.vue'\nimport BishopPiece from './BishopPiece.vue'\nimport KnightPiece from './KnightPiece.vue'\nimport PawnPiece from './PawnPiece.vue'\nimport figureProps from '../figureProps'\nimport { BoardSquare, Piece } from '../chessRules'\n\nexport default defineComponent({\n  components: {\n    KingPiece,\n    QueenPiece,\n    RookPiece,\n    BishopPiece,\n    KnightPiece,\n    PawnPiece\n  },\n  props: {\n    pieceType: {\n      type: String as PropType<Piece>,\n      required: true,\n        validator: (value: string) => {\n          return [\n            'king',\n            'queen',\n            'rook',\n            'bishop',\n            'knight',\n            'pawn'\n          ].includes(value)\n        },\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (value: number) => value > 0\n    },\n    square: {\n      type: Object as PropType<BoardSquare>,\n      required: true,\n      validator: (square: BoardSquare) => {\n        const isRankCorrect = [\n          'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n        ].includes(square.rank)\n        const isFileCorrect = square.file >= 1 \n          && square.file <=8\n          && Number.isInteger(square.file)\n        return isRankCorrect && isFileCorrect\n      }\n    },\n    ...figureProps,\n  },\n  setup(props) {\n    let fugureComponentName = computed(\n      () => \n        props.pieceType &&\n        props.pieceType.charAt(0).toUpperCase()\n        + props.pieceType.slice(1)\n        + 'Piece'\n    )\n\n    const squareCoords = (square: BoardSquare) => ({\n      x: square.rank.charCodeAt(0) - 'a'.charCodeAt(0),\n      y: square.file - 1,\n    })\n\n    let figureTransform = computed(\n      () => `translate3d(\n        ${squareCoords(props.square).x * props.cellSize + (props.cellSize - 45) / 2}px,\n        ${(7 - squareCoords(props.square).y) * props.cellSize + (props.cellSize - 45) / 2}px,\n        0\n      ) scale3d(\n        ${props.cellSize / 45},\n        ${props.cellSize / 45},\n        1\n      )`\n    )\n\n    let isPieceAnimated = ref(true)\n\n    watch(() => props.cellSize, () => {\n      isPieceAnimated.value = false\n\n      setTimeout(() => {\n        isPieceAnimated.value = true\n      }, 36);\n    })\n\n    return {\n      fugureComponentName,\n      figureTransform,\n      isPieceAnimated,\n    }\n  }\n})\n","import { render } from \"./ChessPiece.vue?vue&type=template&id=59ae9ab7\"\nimport script from \"./ChessPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessPiece.vue?vue&type=script&lang=ts\"\n\nimport \"./ChessPiece.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <component\n    v-if=\"fugureComponentName\"\n    :is=\"fugureComponentName\"\n    :style=\"{\n      transform: figureTransform\n    }\"\n    :class=\"{\n      'chess-piece_animated': isPieceAnimated\n    }\"\n    :color=\"color\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, ref, watch, defineComponent, PropType } from 'vue'\nimport KingPiece from './KingPiece.vue'\nimport QueenPiece from './QueenPiece.vue'\nimport RookPiece from './RookPiece.vue'\nimport BishopPiece from './BishopPiece.vue'\nimport KnightPiece from './KnightPiece.vue'\nimport PawnPiece from './PawnPiece.vue'\nimport figureProps from '../figureProps'\nimport { BoardSquare, Piece } from '../chessRules'\n\nexport default defineComponent({\n  components: {\n    KingPiece,\n    QueenPiece,\n    RookPiece,\n    BishopPiece,\n    KnightPiece,\n    PawnPiece\n  },\n  props: {\n    pieceType: {\n      type: String as PropType<Piece>,\n      required: true,\n        validator: (value: string) => {\n          return [\n            'king',\n            'queen',\n            'rook',\n            'bishop',\n            'knight',\n            'pawn'\n          ].includes(value)\n        },\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (value: number) => value > 0\n    },\n    square: {\n      type: Object as PropType<BoardSquare>,\n      required: true,\n      validator: (square: BoardSquare) => {\n        const isRankCorrect = [\n          'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n        ].includes(square.rank)\n        const isFileCorrect = square.file >= 1 \n          && square.file <=8\n          && Number.isInteger(square.file)\n        return isRankCorrect && isFileCorrect\n      }\n    },\n    ...figureProps,\n  },\n  setup(props) {\n    let fugureComponentName = computed(\n      () => \n        props.pieceType &&\n        props.pieceType.charAt(0).toUpperCase()\n        + props.pieceType.slice(1)\n        + 'Piece'\n    )\n\n    const squareCoords = (square: BoardSquare) => ({\n      x: square.rank.charCodeAt(0) - 'a'.charCodeAt(0),\n      y: square.file - 1,\n    })\n\n    let figureTransform = computed(\n      () => `translate3d(\n        ${squareCoords(props.square).x * props.cellSize + (props.cellSize - 45) / 2}px,\n        ${(7 - squareCoords(props.square).y) * props.cellSize + (props.cellSize - 45) / 2}px,\n        0\n      ) scale3d(\n        ${props.cellSize / 45},\n        ${props.cellSize / 45},\n        1\n      )`\n    )\n\n    let isPieceAnimated = ref(true)\n\n    watch(() => props.cellSize, () => {\n      isPieceAnimated.value = false\n\n      setTimeout(() => {\n        isPieceAnimated.value = true\n      }, 36);\n    })\n\n    return {\n      fugureComponentName,\n      figureTransform,\n      isPieceAnimated,\n    }\n  }\n})\n</script>\n\n<style>\n.chess-piece {\n  width: 45px;\n  height: 45px;\n  position: absolute;\n  will-change: transform;\n}\n\n.chess-piece_animated {\n  transition: transform ease 1s;\n}\n</style>","import { FixedSizeArray } from './fixedSizeArray'\n\nexport enum Piece {\n  King = 'king',\n  Queen = 'queen',\n  Rook = 'rook',\n  Bishop = 'bishop',\n  Knight = 'knight',\n  Pawn = 'pawn',\n  NA = 'NA',\n}\n\nexport enum MoveAction {\n  move = '-',\n  capture = 'x',\n  propmotionToQueen = '=Q',\n  propmotionToKnight = '=K',\n  propmotionToRook = '=R',\n  propmotionToBishop = '=B',\n  castlingKingside = '0-0',\n  castlingQueenside = '0-0-0',\n}\n\nexport type Rank = 'a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'\n\nexport type File = 1|2|3|4|5|6|7|8\n\nexport interface BoardSquare {\n  rank: Rank,\n  file: File,\n}\n\nexport interface Move {\n  piece: Piece,\n  action: MoveAction,\n  from: BoardSquare,\n  to: BoardSquare,\n}\n\nexport type PieceColor = 'black'|'white';\n\nexport interface PieceDescription {\n  piece: Piece,\n  square: BoardSquare,\n  color: PieceColor,\n  initialSquare?: BoardSquare\n}\n\nexport type EmptySquare = null\n\nexport type PieceSetItem = PieceDescription | EmptySquare\n\nexport type BoardCol = FixedSizeArray<8, PieceSetItem>\n\nexport interface ChessBoard {\n  a: BoardCol,\n  b: BoardCol,\n  c: BoardCol,\n  d: BoardCol,\n  e: BoardCol,\n  f: BoardCol,\n  g: BoardCol,\n  h: BoardCol,\n}\n","import {\n    BoardSquare,\n    Piece,\n    ChessBoard,\n    BoardCol,\n    PieceDescription,\n    PieceColor,\n    Rank\n} from './chessRules'\n\nconst createEmptyCol = () => <BoardCol>(<unknown>new Array(8).fill(null))\n\ndeclare global {\n  interface ObjectConstructor {\n    fromEntries(xs: [string|number|symbol, any][]): object\n  }\n\n  interface Array<T> {\n    flat(): Array<T>;\n    flatMap(func: (x: T) => T): Array<T>;\n  }\n}\n\nexport const createEmptyChessBoard = () => {\n  const rowsArr = Array(8).fill('a').map(\n    (char: string, idx: number) => String.fromCharCode(char.charCodeAt(0) + idx)\n  ).map(\n    (char: string) => ([char, createEmptyCol()])\n  )\n\n  return <ChessBoard>Object.fromEntries(rowsArr)\n}\n\nexport const initChessBoard = (board: ChessBoard) => {\n  const figureSet:Array<PieceDescription>  = []\n  // Add pawns\n  Array(8).fill(2).forEach(\n    (file, idx) => {\n      figureSet.push({\n        piece: Piece.Pawn,\n        square: {\n          rank: <Rank>String.fromCharCode('a'.charCodeAt(0) + idx),\n          file\n        },\n        color: 'white',\n      })\n    }\n  )\n  Array(8).fill(7).forEach(\n    (file, idx) => {\n      figureSet.push({\n        piece: Piece.Pawn,\n        square: {\n          rank: <Rank>String.fromCharCode('a'.charCodeAt(0) + idx),\n          file\n        },\n        color: 'black',\n      })\n    }\n  )\n  figureSet.forEach(pieceDesc => {\n    addPiece(board, pieceDesc.piece, pieceDesc.square, pieceDesc.color)\n  })\n  // Add kings\n  addPiece(board, Piece.King, { rank: 'e', file: 8 }, 'black')\n  addPiece(board, Piece.King, { rank: 'e', file: 1 }, 'white')\n  // Add Queens\n  addPiece(board, Piece.Queen, { rank: 'd', file: 8 }, 'black')\n  addPiece(board, Piece.Queen, { rank: 'd', file: 1 }, 'white')\n  // Add Bishops\n  addPiece(board, Piece.Bishop, { rank: 'c', file: 1 }, 'white')\n  addPiece(board, Piece.Bishop, { rank: 'f', file: 1 }, 'white')\n  addPiece(board, Piece.Bishop, { rank: 'c', file: 8 }, 'black')\n  addPiece(board, Piece.Bishop, { rank: 'f', file: 8 }, 'black')\n  // Add Knights\n  addPiece(board, Piece.Knight, { rank: 'b', file: 1 }, 'white')\n  addPiece(board, Piece.Knight, { rank: 'g', file: 1 }, 'white')\n  addPiece(board, Piece.Knight, { rank: 'b', file: 8 }, 'black')\n  addPiece(board, Piece.Knight, { rank: 'g', file: 8 }, 'black')\n  // Add Rooks\n  addPiece(board, Piece.Rook, { rank: 'a', file: 1 }, 'white')\n  addPiece(board, Piece.Rook, { rank: 'h', file: 1 }, 'white')\n  addPiece(board, Piece.Rook, { rank: 'a', file: 8 }, 'black')\n  addPiece(board, Piece.Rook, { rank: 'h', file: 8 }, 'black')\n}\n\nexport const addPiece = (\n  board: ChessBoard,\n  piece: Piece,\n  square: BoardSquare,\n  color: PieceColor\n) => {\n  board[square.rank][square.file - 1] = { piece, square, color, initialSquare: square }\n}\n\nexport const movePiece = (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {\n  if(board[to.rank][to.file - 1] !== null) {\n    throw new Error(`Move destination is not empty: ${to.rank}${to.file}`)\n  } else if(board[from.rank][from.file - 1] === null) {\n    throw new Error(`Move start sqare is empty: ${from.rank}${from.file}`)\n  }\n  board[from.rank][from.file - 1]!.square = to\n  board[to.rank][to.file - 1] = board[from.rank][from.file - 1]\n  board[from.rank][from.file - 1] = null\n}\n\nexport const capturePiece = (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {\n  if(board[to.rank][to.file - 1] === null) {\n    throw new Error(`Capture destination square is empty: ${to.rank}${to.file}`)\n  } else if(board[from.rank][from.file - 1] === null) {\n    throw new Error(`Capture start square is empty: ${from.rank}${from.file}`)\n  }\n  board[from.rank][from.file - 1]!.square = to\n  board[to.rank][to.file - 1] = board[from.rank][from.file - 1]\n  board[from.rank][from.file - 1] = null\n}\n\nexport const removePiece = (board: ChessBoard, from: BoardSquare) => {\n  board[from.rank][from.file - 1] = null\n}\n\n// TODO: implement chess rules check\nexport const checkPieceMove = {\n  [Piece.King]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Queen]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Rook]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Bishop]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Knight]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n  [Piece.Pawn]: (board: ChessBoard, from: BoardSquare, to: BoardSquare) => {},\n}","\nimport { ref, PropType, watchEffect, defineComponent, computed } from 'vue'\nimport ChessPiece from './pieces/ChessPiece.vue'\nimport {\n    Rank,\n    File,\n    BoardSquare,\n    Piece,\n    ChessBoard,\n    BoardCol,\n    Move, MoveAction\n} from './chessRules'\nimport {\n  createEmptyChessBoard,\n  addPiece,\n  capturePiece,\n  initChessBoard,\n  movePiece,\n} from './chessBoardTools'\n\nexport default defineComponent({\n  components: {\n    ChessPiece,\n  },\n  props: {\n    moves: {\n      type: Array as PropType<Array<Move>>,\n      required: true\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n  setup(props) {\n    const chessBoardState = ref(createEmptyChessBoard())\n    initChessBoard(<ChessBoard>chessBoardState.value)\n\n    const getFlatChessBoardState = () => Object.values(\n      <ChessBoard>chessBoardState.value\n    ).flat().filter(piece => piece !== null)\n\n    const chessBoardStateFlat = computed(\n      () => Object.values(\n        <ChessBoard>chessBoardState.value\n      ).flat().filter(piece => piece !== null).sort((a, b) => {\n        const aKey = a.initialSquare.rank + a.initialSquare.file\n        const bKey = b.initialSquare.rank + b.initialSquare.file\n        if (aKey < bKey) {\n          return -1;\n        }\n        if (aKey < bKey) {\n          return 1;\n        }\n        return 0;\n      })\n    )\n\n    let movesDemoTimers: Array<any> = []\n\n    watchEffect(() => {\n      chessBoardState.value = createEmptyChessBoard()\n      initChessBoard(<ChessBoard>chessBoardState.value)\n      movesDemoTimers.forEach(handler => clearTimeout(handler))\n      movesDemoTimers = []\n      props.moves.forEach((move: Move, moveIdx) => {\n        movesDemoTimers.push(setTimeout(() => {\n          console.log(moveIdx, move)\n          if(move.action === MoveAction.move) {\n            movePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.capture) {\n            capturePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.castlingQueenside) {\n            // TODO\n          } else if(move.action === MoveAction.castlingKingside) {\n            if(moveIdx%2 === 0) {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 1, },\n                { rank: 'g', file: 1, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 1, },\n                { rank: 'f', file: 1, }\n              )\n            } else {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 8, },\n                { rank: 'g', file: 8, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 8, },\n                { rank: 'f', file: 8, }\n              )\n            }\n          }\n        }, 1500 *(moveIdx + 1)))\n      })\n    })\n    return {\n      chessBoardStateFlat,\n    }\n  }\n})\n","import { render } from \"./GamePlayer.vue?vue&type=template&id=42a9bcb6\"\nimport script from \"./GamePlayer.vue?vue&type=script&lang=ts\"\nexport * from \"./GamePlayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ChessPiece\n    v-for=\"piece in chessBoardStateFlat\"\n    :key=\"piece.initialSquare.rank + piece.initialSquare.file\"\n    :data-test=\"piece.initialSquare.rank + piece.initialSquare.file\"\n    :cellSize=\"cellSize\"\n    :pieceType=\"piece.piece\"\n    :square=\"piece.square\"\n    :color=\"piece.color\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { ref, PropType, watchEffect, defineComponent, computed } from 'vue'\nimport ChessPiece from './pieces/ChessPiece.vue'\nimport {\n    Rank,\n    File,\n    BoardSquare,\n    Piece,\n    ChessBoard,\n    BoardCol,\n    Move, MoveAction\n} from './chessRules'\nimport {\n  createEmptyChessBoard,\n  addPiece,\n  capturePiece,\n  initChessBoard,\n  movePiece,\n} from './chessBoardTools'\n\nexport default defineComponent({\n  components: {\n    ChessPiece,\n  },\n  props: {\n    moves: {\n      type: Array as PropType<Array<Move>>,\n      required: true\n    },\n    cellSize: {\n      type: Number,\n      required: true,\n      validator: (cellSize: number) => cellSize > 0 && Number.isInteger(cellSize),\n    },\n  },\n  setup(props) {\n    const chessBoardState = ref(createEmptyChessBoard())\n    initChessBoard(<ChessBoard>chessBoardState.value)\n\n    const getFlatChessBoardState = () => Object.values(\n      <ChessBoard>chessBoardState.value\n    ).flat().filter(piece => piece !== null)\n\n    const chessBoardStateFlat = computed(\n      () => Object.values(\n        <ChessBoard>chessBoardState.value\n      ).flat().filter(piece => piece !== null).sort((a, b) => {\n        const aKey = a.initialSquare.rank + a.initialSquare.file\n        const bKey = b.initialSquare.rank + b.initialSquare.file\n        if (aKey < bKey) {\n          return -1;\n        }\n        if (aKey < bKey) {\n          return 1;\n        }\n        return 0;\n      })\n    )\n\n    let movesDemoTimers: Array<any> = []\n\n    watchEffect(() => {\n      chessBoardState.value = createEmptyChessBoard()\n      initChessBoard(<ChessBoard>chessBoardState.value)\n      movesDemoTimers.forEach(handler => clearTimeout(handler))\n      movesDemoTimers = []\n      props.moves.forEach((move: Move, moveIdx) => {\n        movesDemoTimers.push(setTimeout(() => {\n          console.log(moveIdx, move)\n          if(move.action === MoveAction.move) {\n            movePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.capture) {\n            capturePiece(<ChessBoard>chessBoardState.value, move.from, move.to)\n          } else if(move.action === MoveAction.castlingQueenside) {\n            // TODO\n          } else if(move.action === MoveAction.castlingKingside) {\n            if(moveIdx%2 === 0) {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 1, },\n                { rank: 'g', file: 1, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 1, },\n                { rank: 'f', file: 1, }\n              )\n            } else {\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'e', file: 8, },\n                { rank: 'g', file: 8, }\n              )\n              movePiece(\n                <ChessBoard>chessBoardState.value,\n                { rank: 'h', file: 8, },\n                { rank: 'f', file: 8, }\n              )\n            }\n          }\n        }, 1500 *(moveIdx + 1)))\n      })\n    })\n    return {\n      chessBoardStateFlat,\n    }\n  }\n})\n</script>","import { Rank, File, MoveAction, Piece, Move } from './chessRules'\n\nconst isLowerCased = (str: string) => str === str.toLowerCase()\nconst piecesCodes = {\n  'K': Piece.King,\n  'Q': Piece.Queen,\n  'R': Piece.Rook,\n  'N': Piece.Knight,\n  'B': Piece.Bishop,\n  'p': Piece.Pawn,\n}\n\nconst actionCodes = {\n  'x': MoveAction.capture,\n  '-': MoveAction.move,\n}\n\nconst isPieceCode = (code: string) => Object.keys(piecesCodes).includes(code)\nconst isRank = (rank: string) => {\n  return ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'].includes(rank)\n}\nconst isFile = (file: string) => {\n  const fileNum = parseInt(file)\n  return !isNaN(fileNum) && fileNum >= 1 && fileNum <= 8\n}\n\nexport const tokenizator = (source: Array<string>) => {\n  const moves: Array<Move> = []\n  source.forEach(moveSource => {\n    if(moveSource === '0-0') {\n      moves.push({\n        piece: Piece.NA,\n        action: MoveAction.castlingKingside,\n        from: { rank: 'a', file: 1 },\n        to: { rank: 'a', file: 1 },\n      })\n    } else if(moveSource === '0-0-0') {\n      moves.push({\n        piece: Piece.NA,\n        action: MoveAction.castlingQueenside,\n        from: { rank: 'a', file: 1 },\n        to: { rank: 'a', file: 1 },\n      })\n    } else if(/[KQRNBp][a-h][1-8][-x][a-h][1-8]/g.test(moveSource)) {\n      const moveParts = /([KQRNBp])([a-h])([1-8])([-x])([a-h])([1-8])/g.exec(moveSource)\n      if(moveParts !== null) {\n        moves.push({\n          piece: piecesCodes[moveParts[1]],\n          action: actionCodes[moveParts[4]],\n          from: {\n            rank: <Rank>moveParts[2],\n            file: <File>parseInt(moveParts[3]),\n          },\n          to: {\n            rank: <Rank>moveParts[5],\n            file: <File>parseInt(moveParts[6]),\n          },\n        })\n      } else {\n        console.error(`Regex returned null: ${moveSource}`)\n      }\n    } else if(/[a-h][18][=\\\\][QRNB]/g.test(moveSource)) {\n      const moveParts = /([a-h])([18])([=][QRNB])/g.exec(moveSource)\n      if(moveParts !== null) {\n        let fromFile: File = 2\n        if(parseInt(moveParts[2]) === 8) {\n          fromFile = 7\n        }\n        moves.push({\n          piece: piecesCodes[moveParts[1]],\n          action: MoveAction[moveParts[3]],\n          from: {\n            rank: <Rank>moveParts[1],\n            file: fromFile,\n          },\n          to: {\n            rank: <Rank>moveParts[1],\n            file: <File>parseInt(moveParts[2]),\n          },\n        })\n      } else {\n        console.error(`Regex returned null: ${moveSource}`)\n      }\n    } else {\n      console.error(`Unexpected move: ${moveSource}`)\n    }\n  })\n\n  return moves;\n}\n\nexport const normalizeNotation = (source: string) => {\n  console.log('Normalize notation:', source)\n  let i18nSource = source\n    .replaceAll('Кр', 'K')\n    .replaceAll('Ф', 'Q')\n    .replaceAll('Л', 'R')\n    .replaceAll('К', 'N')\n    .replaceAll('С', 'B')\n    .replaceAll('п', 'p')\n    .replaceAll('—', '-')\n    .replaceAll('O-O', '0-0')\n    .replaceAll('O-O-O', '0-0-0')\n    .replaceAll(':', 'x')\n    .replaceAll('×', 'x')\n    .replaceAll('(Q)', '=Q')\n    .replaceAll('(N)', '=N')\n    .replaceAll('(R)', '=R')\n    .replaceAll('(B)', '=B')\n    .replaceAll('/Q', '=Q')\n    .replaceAll('/N', '=N')\n    .replaceAll('/R', '=R')\n    .replaceAll('/B', '=B')\n    .replaceAll(/[+!?#]/g, '')\n    .replaceAll(/[\\d]+\\./g, '')\n    .replaceAll('\\n', ' ')\n    .replaceAll('  ', ' ')\n\n  let moves = i18nSource.split(' ').map(move => {\n    let result = move\n    if(/^[a-h]/.test(move)) {\n      result = 'p' + result\n    }\n    return result\n  })\n\n  return moves\n}","\nimport { defineComponent, computed, ref } from 'vue'\nimport ChessBoard from './ChessBoard.vue'\nimport GamePlayer from './GamePlayer.vue'\nimport { tokenizator, normalizeNotation } from './chessNotationParser'\nimport { Move } from './chessRules'\n\nexport default defineComponent({\n  components: {\n    ChessBoard,\n    GamePlayer,\n  },\n  setup() {\n    let cellSize = ref(75)\n    let algNotation = ref(\n      '1.e2-e4 e7-e5\\n' +\n      '2.Кg1-f3 Кb8-c6\\n' +\n      '3.d2-d4 e5xd4\\n' +\n      '4.Сf1-c4 d7-d6\\n' +\n      '5.Кf3xd4 Сf8-e7\\n' +\n      '6.0-0 Кg8-f6\\n' +\n      '7.Кb1-c3 0-0\\n' +\n      '8.h2-h3 Кc6xd4\\n' +\n      '9.Фd1xd4 Кf6-d7\\n' +\n      '10.Кc3-d5 Сe7-f6\\n' +\n      '11.Кd5xf6+ Фd8xf6\\n' +\n      '12.Сc1-e3 Лf8-e8\\n' +\n      '13.f2-f3 Фf6-g6\\n' +\n      '14.Крg1-h1 Кd7-f6\\n' +\n      '15.g2-g4 h7-h5\\n' +\n      '16.Сc4-d3 h5xg4\\n' +\n      '17.h3xg4 Сc8xg4\\n' +\n      '18.f3xg4 Кf6xg4\\n' +\n      '19.Сe3-f4 Лe8-e6\\n' +\n      '20.Лf1-f3 Лa8-e8\\n' +\n      '21.Лf3-h3 c7-c5\\n' +\n      '22.Фd4-g1 c5-c4\\n' +\n      '23.Лh3-h4 c4xd3\\n' +\n      '24.c2xd3 Кg4-h6\\n' +\n      '25.Сf4xh6 Фg6xh6\\n' +\n      '26.Фg1-h2 Фh6xh4\\n' +\n      '27.Фh2xh4 Лe6-h6\\n' +\n      '28.Фh4xh6 g7xh6\\n' +\n      '29.Лa1-c1 Лe8-e5\\n' +\n      '30.Лc1-c7 Лe5-b5\\n' +\n      '31.b2-b3 Лb5-a5\\n' +\n      '32.Лc7xb7 Лa5xa2\\n' +\n      '33.Лb7-d7 Лa2-a6\\n' +\n      '34.Крh1-g2 Крg8-g7\\n' +\n      '35.Крg2-f3 Крg7-f6\\n' +\n      '36.Крf3-e3 Крf6-e6\\n' +\n      '37.Лd7-c7 f7-f5\\n' +\n      '38.Лc7-h7 f5xe4\\n' +\n      '39.Крe3xe4 Лa6-b6\\n' +\n      '40.Лh7xh6+ Крe6-d7\\n' +\n      '41.Крe4-d5 Лb6-b5+\\n' +\n      '42.Крd5-c4 Лb5-c5+\\n' +\n      '43.Крc4-d4 Лc5-b5\\n' +\n      '44.Лh6-h7+ Крd7-c6\\n' +\n      '45.Лh7xa7 Лb5xb3\\n' +\n      '46.Крd4-c4 Лb3-b1\\n' +\n      '47.Лa7-a6+ Крc6-d7\\n' +\n      '48.d3-d4 Крd7-e6\\n' +\n      '49.Лa6-a3'\n    )\n    let cellSizeText = computed({\n      set(value: any) {\n        cellSize.value = parseInt(value)\n      },\n      get: () => cellSize.value\n    })\n    const movesState = ref<Array<Move>>([])\n\n    const parseNotation = () => {\n      movesState.value = tokenizator(\n        normalizeNotation(algNotation.value)\n      )\n    }\n\n    return {\n      cellSizeText,\n      cellSize,\n      algNotation,\n      parseNotation,\n      movesState,\n    }\n  }\n})\n","import { render } from \"./App.vue?vue&type=template&id=63a0ddc6\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}